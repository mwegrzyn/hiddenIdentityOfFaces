ccopy_reg
_reconstructor
p1
(cpsychopy.data
ExperimentHandler
p2
c__builtin__
object
p3
NtRp4
(dp5
S'originPath'
p6
NsS'dataFileName'
p7
V/home/labor/faces/data/A_8_facesParametric_2015_Sep_16_1913
p8
sS'runtimeInfo'
p9
NsS'name'
p10
S'facesParametric'
p11
sS'dataNames'
p12
(lp13
S'key_resp_2.keys'
p14
aS'key_resp_2.rt'
p15
aS'basicRating1.response'
p16
aS'basicRating1.rt'
p17
aS'basicRating2.response'
p18
aS'basicRating2.rt'
p19
aS'basicRating3.response'
p20
aS'basicRating3.rt'
p21
aS'basicRating4.response'
p22
aS'basicRating4.rt'
p23
aS'key_resp_3.keys'
p24
aS'key_resp_3.rt'
p25
aS'key_resp_4.keys'
p26
aS'key_resp_4.rt'
p27
aS'mouseResp.x'
p28
aS'mouseResp.y'
p29
aS'mouseResp.leftButton'
p30
aS'mouseResp.midButton'
p31
aS'mouseResp.rightButton'
p32
aS'mouseResp.time'
p33
aS'key_resp_5.keys'
p34
aS'key_resp_5.rt'
p35
aS'key_resp_7.keys'
p36
aS'key_resp_7.rt'
p37
asS'autoLog'
p38
I01
sS'extraInfo'
p39
(dp40
S'date'
p41
V2015_Sep_16_1913
p42
sVgroup
p43
VA
sS'expName'
p44
g11
sVparticipant
p45
V8
sS'frameRate'
p46
cnumpy.core.multiarray
scalar
p47
(cnumpy
dtype
p48
(S'f8'
I0
I1
tRp49
(I3
S'<'
NNNI-1
I-1
I0
tbS'\x892BZr\xddM@'
tRp50
ssS'loopsUnfinished'
p51
(lp52
sS'saveWideText'
p53
I01
sS'thisEntry'
p54
(dp55
sS'version'
p56
S''
sS'_paramNamesSoFar'
p57
(lp58
S'img'
p59
aS'num'
p60
asS'entries'
p61
(lp62
(dp63
g15
F93.601253986358643
sg44
g11
sg43
VA
sg41
g42
sg45
V8
sg46
g50
sg14
S'return'
p64
sa(dp65
g16
Nsg18
Nsg59
S'./basicStim/01F_FE_O.jpg'
p66
sg21
F6.5570000000000004
sg19
Nsg17
Nsg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p67
I0
sg44
g11
sS'basicLoop.thisRepN'
p68
I0
sg20
S'DIS'
p69
sg41
g42
sg43
VA
sS'basicLoop.thisN'
p70
I0
sS'basicLoop.thisIndex'
p71
I2
sa(dp72
g16
Nsg18
S'FEA'
p73
sg59
S'./basicStim/06F_AN_O.jpg'
p74
sg21
Nsg19
F4.3799999999999999
sg17
Nsg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p75
I1
sg44
g11
sS'basicLoop.thisRepN'
p76
I0
sg20
Nsg41
g42
sg43
VA
sS'basicLoop.thisN'
p77
I1
sS'basicLoop.thisIndex'
p78
I21
sa(dp79
g16
Nsg18
Nsg59
S'./basicStim/34M_SP_O.jpg'
p80
sg21
F2.835
sg19
Nsg17
Nsg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p81
I2
sg44
g11
sS'basicLoop.thisRepN'
p82
I0
sg20
S'SUP'
p83
sg41
g42
sg43
VA
sS'basicLoop.thisN'
p84
I2
sS'basicLoop.thisIndex'
p85
I75
sa(dp86
g16
S'HAP'
p87
sg18
Nsg59
S'./basicStim/34M_HA_O.jpg'
p88
sg21
Nsg19
Nsg17
F2.7709999999999999
sg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p89
I3
sg44
g11
sS'basicLoop.thisRepN'
p90
I0
sg20
Nsg41
g42
sg43
VA
sS'basicLoop.thisN'
p91
I3
sS'basicLoop.thisIndex'
p92
I73
sa(dp93
g16
Nsg18
S'ANG'
p94
sg59
S'./basicStim/34M_AN_O.jpg'
p95
sg21
Nsg19
F2.1139999999999999
sg17
Nsg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p96
I4
sg44
g11
sS'basicLoop.thisRepN'
p97
I0
sg20
Nsg41
g42
sg43
VA
sS'basicLoop.thisN'
p98
I4
sS'basicLoop.thisIndex'
p99
I70
sa(dp100
g16
S'SAD'
p101
sg18
Nsg59
S'./basicStim/28M_NE_C.jpg'
p102
sg21
Nsg19
Nsg17
F2.6699999999999999
sg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p103
I5
sg44
g11
sS'basicLoop.thisRepN'
p104
I0
sg20
Nsg41
g42
sg43
VA
sS'basicLoop.thisN'
p105
I5
sS'basicLoop.thisIndex'
p106
I69
sa(dp107
g16
Nsg18
g73
sg59
S'./basicStim/34M_FE_O.jpg'
p108
sg21
Nsg19
F2.165
sg17
Nsg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p109
I6
sg44
g11
sS'basicLoop.thisRepN'
p110
I0
sg20
Nsg41
g42
sg43
VA
sS'basicLoop.thisN'
p111
I6
sS'basicLoop.thisIndex'
p112
I72
sa(dp113
g16
Nsg18
g73
sg59
S'./basicStim/23M_FE_O.jpg'
p114
sg21
Nsg19
F0.91000000000000003
sg17
Nsg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p115
I7
sg44
g11
sS'basicLoop.thisRepN'
p116
I0
sg20
Nsg41
g42
sg43
VA
sS'basicLoop.thisN'
p117
I7
sS'basicLoop.thisIndex'
p118
I51
sa(dp119
g16
g101
sg18
Nsg59
S'./basicStim/36M_SA_C.jpg'
p120
sg21
Nsg19
Nsg17
F1.8140000000000001
sg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p121
I8
sg44
g11
sS'basicLoop.thisRepN'
p122
I0
sg20
Nsg41
g42
sg43
VA
sS'basicLoop.thisN'
p123
I8
sS'basicLoop.thisIndex'
p124
I81
sa(dp125
g16
Nsg18
g73
sg59
S'./basicStim/07F_FE_O.jpg'
p126
sg21
Nsg19
F3.0880000000000001
sg17
Nsg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p127
I9
sg44
g11
sS'basicLoop.thisRepN'
p128
I0
sg20
Nsg41
g42
sg43
VA
sS'basicLoop.thisN'
p129
I9
sS'basicLoop.thisIndex'
p130
I30
sa(dp131
g16
Nsg18
g94
sg59
S'./basicStim/07F_AN_O.jpg'
p132
sg21
Nsg19
F1.2629999999999999
sg17
Nsg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p133
I10
sg44
g11
sS'basicLoop.thisRepN'
p134
I0
sg20
Nsg41
g42
sg43
VA
sS'basicLoop.thisN'
p135
I10
sS'basicLoop.thisIndex'
p136
I28
sa(dp137
g16
Nsg18
g94
sg59
S'./basicStim/01F_AN_O.jpg'
p138
sg21
Nsg19
F0.69199999999999995
sg17
Nsg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p139
I11
sg44
g11
sS'basicLoop.thisRepN'
p140
I0
sg20
Nsg41
g42
sg43
VA
sS'basicLoop.thisN'
p141
I11
sS'basicLoop.thisIndex'
p142
I0
sa(dp143
g16
Nsg18
Nsg59
S'./basicStim/03F_NE_C.jpg'
p144
sg21
Nsg19
Nsg17
Nsg45
V8
sg46
g50
sg23
F1.569
sg22
S'NTR'
p145
sS'basicLoop.thisTrialN'
p146
I12
sg44
g11
sS'basicLoop.thisRepN'
p147
I0
sg20
Nsg41
g42
sg43
VA
sS'basicLoop.thisN'
p148
I12
sS'basicLoop.thisIndex'
p149
I20
sa(dp150
g16
Nsg18
Nsg59
S'./basicStim/06F_NE_C.jpg'
p151
sg21
Nsg19
Nsg17
Nsg45
V8
sg46
g50
sg23
F0.81599999999999995
sg22
g145
sS'basicLoop.thisTrialN'
p152
I13
sg44
g11
sS'basicLoop.thisRepN'
p153
I0
sg20
Nsg41
g42
sg43
VA
sS'basicLoop.thisN'
p154
I13
sS'basicLoop.thisIndex'
p155
I27
sa(dp156
g16
g101
sg18
Nsg59
S'./basicStim/07F_SA_C.jpg'
p157
sg21
Nsg19
Nsg17
F1.1459999999999999
sg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p158
I14
sg44
g11
sS'basicLoop.thisRepN'
p159
I0
sg20
Nsg41
g42
sg43
VA
sS'basicLoop.thisN'
p160
I14
sS'basicLoop.thisIndex'
p161
I32
sa(dp162
g16
Nsg18
g73
sg59
S'./basicStim/21M_FE_O.jpg'
p163
sg21
Nsg19
F2.028
sg17
Nsg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p164
I15
sg44
g11
sS'basicLoop.thisRepN'
p165
I0
sg20
Nsg41
g42
sg43
VA
sS'basicLoop.thisN'
p166
I15
sS'basicLoop.thisIndex'
p167
I44
sa(dp168
g16
Nsg18
g73
sg59
S'./basicStim/06F_SP_O.jpg'
p169
sg21
Nsg19
F1.0609999999999999
sg17
Nsg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p170
I16
sg44
g11
sS'basicLoop.thisRepN'
p171
I0
sg20
Nsg41
g42
sg43
VA
sS'basicLoop.thisN'
p172
I16
sS'basicLoop.thisIndex'
p173
I26
sa(dp174
g16
Nsg18
Nsg59
S'./basicStim/06F_DI_O.jpg'
p175
sg21
F1.359
sg19
Nsg17
Nsg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p176
I17
sg44
g11
sS'basicLoop.thisRepN'
p177
I0
sg20
g69
sg41
g42
sg43
VA
sS'basicLoop.thisN'
p178
I17
sS'basicLoop.thisIndex'
p179
I22
sa(dp180
g16
Nsg18
g73
sg59
S'./basicStim/07F_SP_O.jpg'
p181
sg21
Nsg19
F1.4430000000000001
sg17
Nsg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p182
I18
sg44
g11
sS'basicLoop.thisRepN'
p183
I0
sg20
Nsg41
g42
sg43
VA
sS'basicLoop.thisN'
p184
I18
sS'basicLoop.thisIndex'
p185
I33
sa(dp186
g16
Nsg18
g94
sg59
S'./basicStim/21M_NE_C.jpg'
p187
sg21
Nsg19
F2.6560000000000001
sg17
Nsg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p188
I19
sg44
g11
sS'basicLoop.thisRepN'
p189
I0
sg20
Nsg41
g42
sg43
VA
sS'basicLoop.thisN'
p190
I19
sS'basicLoop.thisIndex'
p191
I48
sa(dp192
g16
g87
sg18
Nsg59
S'./basicStim/01F_HA_O.jpg'
p193
sg21
Nsg19
Nsg17
F1.8180000000000001
sg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p194
I20
sg44
g11
sS'basicLoop.thisRepN'
p195
I0
sg20
Nsg41
g42
sg43
VA
sS'basicLoop.thisN'
p196
I20
sS'basicLoop.thisIndex'
p197
I3
sa(dp198
g16
Nsg18
g73
sg59
S'./basicStim/02F_FE_O.jpg'
p199
sg21
Nsg19
F1.1259999999999999
sg17
Nsg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p200
I21
sg44
g11
sS'basicLoop.thisRepN'
p201
I0
sg20
Nsg41
g42
sg43
VA
sS'basicLoop.thisN'
p202
I21
sS'basicLoop.thisIndex'
p203
I9
sa(dp204
g16
Nsg18
Nsg59
S'./basicStim/21M_DI_O.jpg'
p205
sg21
F1.2789999999999999
sg19
Nsg17
Nsg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p206
I22
sg44
g11
sS'basicLoop.thisRepN'
p207
I0
sg20
g69
sg41
g42
sg43
VA
sS'basicLoop.thisN'
p208
I22
sS'basicLoop.thisIndex'
p209
I43
sa(dp210
g16
g101
sg18
Nsg59
S'./basicStim/06F_SA_C.jpg'
p211
sg21
Nsg19
Nsg17
F1.885
sg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p212
I23
sg44
g11
sS'basicLoop.thisRepN'
p213
I0
sg20
Nsg41
g42
sg43
VA
sS'basicLoop.thisN'
p214
I23
sS'basicLoop.thisIndex'
p215
I25
sa(dp216
g16
g87
sg18
Nsg59
S'./basicStim/03F_HA_O.jpg'
p217
sg21
Nsg19
Nsg17
F1.353
sg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p218
I24
sg44
g11
sS'basicLoop.thisRepN'
p219
I0
sg20
Nsg41
g42
sg43
VA
sS'basicLoop.thisN'
p220
I24
sS'basicLoop.thisIndex'
p221
I17
sa(dp222
g16
Nsg18
g94
sg59
S'./basicStim/09F_AN_O.jpg'
p223
sg21
Nsg19
F3.0699999999999998
sg17
Nsg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p224
I25
sg44
g11
sS'basicLoop.thisRepN'
p225
I0
sg20
Nsg41
g42
sg43
VA
sS'basicLoop.thisN'
p226
I25
sS'basicLoop.thisIndex'
p227
I35
sa(dp228
g16
Nsg18
Nsg59
S'./basicStim/09F_NE_C.jpg'
p229
sg21
Nsg19
Nsg17
Nsg45
V8
sg46
g50
sg23
F2.4860000000000002
sg22
g145
sS'basicLoop.thisTrialN'
p230
I26
sg44
g11
sS'basicLoop.thisRepN'
p231
I0
sg20
Nsg41
g42
sg43
VA
sS'basicLoop.thisN'
p232
I26
sS'basicLoop.thisIndex'
p233
I41
sa(dp234
g16
Nsg18
g94
sg59
S'./basicStim/02F_AN_O.jpg'
p235
sg21
Nsg19
F4.1079999999999997
sg17
Nsg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p236
I27
sg44
g11
sS'basicLoop.thisRepN'
p237
I0
sg20
Nsg41
g42
sg43
VA
sS'basicLoop.thisN'
p238
I27
sS'basicLoop.thisIndex'
p239
I7
sa(dp240
g16
Nsg18
Nsg59
S'./basicStim/34M_DI_O.jpg'
p241
sg21
F1.226
sg19
Nsg17
Nsg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p242
I28
sg44
g11
sS'basicLoop.thisRepN'
p243
I0
sg20
g69
sg41
g42
sg43
VA
sS'basicLoop.thisN'
p244
I28
sS'basicLoop.thisIndex'
p245
I71
sa(dp246
g16
Nsg18
Nsg59
S'./basicStim/02F_SP_O.jpg'
p247
sg21
F1.6439999999999999
sg19
Nsg17
Nsg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p248
I29
sg44
g11
sS'basicLoop.thisRepN'
p249
I0
sg20
g83
sg41
g42
sg43
VA
sS'basicLoop.thisN'
p250
I29
sS'basicLoop.thisIndex'
p251
I12
sa(dp252
g16
Nsg18
Nsg59
S'./basicStim/09F_SP_O.jpg'
p253
sg21
F9.0259999999999998
sg19
Nsg17
Nsg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p254
I30
sg44
g11
sS'basicLoop.thisRepN'
p255
I0
sg20
g83
sg41
g42
sg43
VA
sS'basicLoop.thisN'
p256
I30
sS'basicLoop.thisIndex'
p257
I40
sa(dp258
g16
Nsg18
Nsg59
S'./basicStim/09F_DI_O.jpg'
p259
sg21
F1.3420000000000001
sg19
Nsg17
Nsg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p260
I31
sg44
g11
sS'basicLoop.thisRepN'
p261
I0
sg20
g69
sg41
g42
sg43
VA
sS'basicLoop.thisN'
p262
I31
sS'basicLoop.thisIndex'
p263
I36
sa(dp264
g16
g101
sg18
Nsg59
S'./basicStim/02F_NE_C.jpg'
p265
sg21
Nsg19
Nsg17
F1.8480000000000001
sg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p266
I32
sg44
g11
sS'basicLoop.thisRepN'
p267
I0
sg20
Nsg41
g42
sg43
VA
sS'basicLoop.thisN'
p268
I32
sS'basicLoop.thisIndex'
p269
I13
sa(dp270
g16
Nsg18
g73
sg59
S'./basicStim/36M_FE_O.jpg'
p271
sg21
Nsg19
F2.016
sg17
Nsg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p272
I33
sg44
g11
sS'basicLoop.thisRepN'
p273
I0
sg20
Nsg41
g42
sg43
VA
sS'basicLoop.thisN'
p274
I33
sS'basicLoop.thisIndex'
p275
I79
sa(dp276
g16
g101
sg18
Nsg59
S'./basicStim/23M_DI_O.jpg'
p277
sg21
Nsg19
Nsg17
F4.0129999999999999
sg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p278
I34
sg44
g11
sS'basicLoop.thisRepN'
p279
I0
sg20
Nsg41
g42
sg43
VA
sS'basicLoop.thisN'
p280
I34
sS'basicLoop.thisIndex'
p281
I50
sa(dp282
g16
Nsg18
Nsg59
S'./basicStim/23M_NE_C.jpg'
p283
sg21
Nsg19
Nsg17
Nsg45
V8
sg46
g50
sg23
F1.837
sg22
g145
sS'basicLoop.thisTrialN'
p284
I35
sg44
g11
sS'basicLoop.thisRepN'
p285
I0
sg20
Nsg41
g42
sg43
VA
sS'basicLoop.thisN'
p286
I35
sS'basicLoop.thisIndex'
p287
I55
sa(dp288
g16
g101
sg18
Nsg59
S'./basicStim/09F_SA_C.jpg'
p289
sg21
Nsg19
Nsg17
F2.048
sg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p290
I36
sg44
g11
sS'basicLoop.thisRepN'
p291
I0
sg20
Nsg41
g42
sg43
VA
sS'basicLoop.thisN'
p292
I36
sS'basicLoop.thisIndex'
p293
I39
sa(dp294
g16
Nsg18
g94
sg59
S'./basicStim/03F_AN_O.jpg'
p295
sg21
Nsg19
F1.0609999999999999
sg17
Nsg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p296
I37
sg44
g11
sS'basicLoop.thisRepN'
p297
I0
sg20
Nsg41
g42
sg43
VA
sS'basicLoop.thisN'
p298
I37
sS'basicLoop.thisIndex'
p299
I14
sa(dp300
g16
Nsg18
g73
sg59
S'./basicStim/28M_FE_O.jpg'
p301
sg21
Nsg19
F1.649
sg17
Nsg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p302
I38
sg44
g11
sS'basicLoop.thisRepN'
p303
I0
sg20
Nsg41
g42
sg43
VA
sS'basicLoop.thisN'
p304
I38
sS'basicLoop.thisIndex'
p305
I65
sa(dp306
g16
g101
sg18
Nsg59
S'./basicStim/24M_SA_C.jpg'
p307
sg21
Nsg19
Nsg17
F1.2789999999999999
sg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p308
I39
sg44
g11
sS'basicLoop.thisRepN'
p309
I0
sg20
Nsg41
g42
sg43
VA
sS'basicLoop.thisN'
p310
I39
sS'basicLoop.thisIndex'
p311
I60
sa(dp312
g16
Nsg18
g73
sg59
S'./basicStim/03F_FE_O.jpg'
p313
sg21
Nsg19
F0.97999999999999998
sg17
Nsg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p314
I40
sg44
g11
sS'basicLoop.thisRepN'
p315
I0
sg20
Nsg41
g42
sg43
VA
sS'basicLoop.thisN'
p316
I40
sS'basicLoop.thisIndex'
p317
I16
sa(dp318
g16
Nsg18
Nsg59
S'./basicStim/07F_DI_O.jpg'
p319
sg21
F1.2729999999999999
sg19
Nsg17
Nsg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p320
I41
sg44
g11
sS'basicLoop.thisRepN'
p321
I0
sg20
g69
sg41
g42
sg43
VA
sS'basicLoop.thisN'
p322
I41
sS'basicLoop.thisIndex'
p323
I29
sa(dp324
g16
g87
sg18
Nsg59
S'./basicStim/36M_HA_O.jpg'
p325
sg21
Nsg19
Nsg17
F1.3660000000000001
sg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p326
I42
sg44
g11
sS'basicLoop.thisRepN'
p327
I0
sg20
Nsg41
g42
sg43
VA
sS'basicLoop.thisN'
p328
I42
sS'basicLoop.thisIndex'
p329
I80
sa(dp330
g16
Nsg18
Nsg59
S'./basicStim/23M_SP_O.jpg'
p331
sg21
F2.2200000000000002
sg19
Nsg17
Nsg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p332
I43
sg44
g11
sS'basicLoop.thisRepN'
p333
I0
sg20
g83
sg41
g42
sg43
VA
sS'basicLoop.thisN'
p334
I43
sS'basicLoop.thisIndex'
p335
I54
sa(dp336
g16
Nsg18
Nsg59
S'./basicStim/02F_DI_O.jpg'
p337
sg21
F4.8550000000000004
sg19
Nsg17
Nsg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p338
I44
sg44
g11
sS'basicLoop.thisRepN'
p339
I0
sg20
g69
sg41
g42
sg43
VA
sS'basicLoop.thisN'
p340
I44
sS'basicLoop.thisIndex'
p341
I8
sa(dp342
g16
Nsg18
g94
sg59
S'./basicStim/23M_AN_O.jpg'
p343
sg21
Nsg19
F0.89400000000000002
sg17
Nsg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p344
I45
sg44
g11
sS'basicLoop.thisRepN'
p345
I0
sg20
Nsg41
g42
sg43
VA
sS'basicLoop.thisN'
p346
I45
sS'basicLoop.thisIndex'
p347
I49
sa(dp348
g16
g101
sg18
Nsg59
S'./basicStim/01F_SA_C.jpg'
p349
sg21
Nsg19
Nsg17
F1.8169999999999999
sg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p350
I46
sg44
g11
sS'basicLoop.thisRepN'
p351
I0
sg20
Nsg41
g42
sg43
VA
sS'basicLoop.thisN'
p352
I46
sS'basicLoop.thisIndex'
p353
I4
sa(dp354
g16
g87
sg18
Nsg59
S'./basicStim/23M_HA_O.jpg'
p355
sg21
Nsg19
Nsg17
F1.5309999999999999
sg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p356
I47
sg44
g11
sS'basicLoop.thisRepN'
p357
I0
sg20
Nsg41
g42
sg43
VA
sS'basicLoop.thisN'
p358
I47
sS'basicLoop.thisIndex'
p359
I52
sa(dp360
g16
g101
sg18
Nsg59
S'./basicStim/23M_SA_C.jpg'
p361
sg21
Nsg19
Nsg17
F3.3580000000000001
sg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p362
I48
sg44
g11
sS'basicLoop.thisRepN'
p363
I0
sg20
Nsg41
g42
sg43
VA
sS'basicLoop.thisN'
p364
I48
sS'basicLoop.thisIndex'
p365
I53
sa(dp366
g16
g87
sg18
Nsg59
S'./basicStim/24M_HA_O.jpg'
p367
sg21
Nsg19
Nsg17
F1.2110000000000001
sg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p368
I49
sg44
g11
sS'basicLoop.thisRepN'
p369
I0
sg20
Nsg41
g42
sg43
VA
sS'basicLoop.thisN'
p370
I49
sS'basicLoop.thisIndex'
p371
I59
sa(dp372
g16
Nsg18
g73
sg59
S'./basicStim/24M_FE_O.jpg'
p373
sg21
Nsg19
F2.0019999999999998
sg17
Nsg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p374
I50
sg44
g11
sS'basicLoop.thisRepN'
p375
I0
sg20
Nsg41
g42
sg43
VA
sS'basicLoop.thisN'
p376
I50
sS'basicLoop.thisIndex'
p377
I58
sa(dp378
g16
Nsg18
Nsg59
S'./basicStim/21M_SP_O.jpg'
p379
sg21
F1.179
sg19
Nsg17
Nsg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p380
I51
sg44
g11
sS'basicLoop.thisRepN'
p381
I0
sg20
g83
sg41
g42
sg43
VA
sS'basicLoop.thisN'
p382
I51
sS'basicLoop.thisIndex'
p383
I47
sa(dp384
g16
g87
sg18
Nsg59
S'./basicStim/09F_HA_O.jpg'
p385
sg21
Nsg19
Nsg17
F2.052
sg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p386
I52
sg44
g11
sS'basicLoop.thisRepN'
p387
I0
sg20
Nsg41
g42
sg43
VA
sS'basicLoop.thisN'
p388
I52
sS'basicLoop.thisIndex'
p389
I38
sa(dp390
g16
g101
sg18
Nsg59
S'./basicStim/34M_SA_C.jpg'
p391
sg21
Nsg19
Nsg17
F1.167
sg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p392
I53
sg44
g11
sS'basicLoop.thisRepN'
p393
I0
sg20
Nsg41
g42
sg43
VA
sS'basicLoop.thisN'
p394
I53
sS'basicLoop.thisIndex'
p395
I74
sa(dp396
g16
Nsg18
g73
sg59
S'./basicStim/24M_DI_O.jpg'
p397
sg21
Nsg19
F3.2210000000000001
sg17
Nsg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p398
I54
sg44
g11
sS'basicLoop.thisRepN'
p399
I0
sg20
Nsg41
g42
sg43
VA
sS'basicLoop.thisN'
p400
I54
sS'basicLoop.thisIndex'
p401
I57
sa(dp402
g16
Nsg18
Nsg59
S'./basicStim/28M_DI_O.jpg'
p403
sg21
F1.677
sg19
Nsg17
Nsg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p404
I55
sg44
g11
sS'basicLoop.thisRepN'
p405
I0
sg20
g69
sg41
g42
sg43
VA
sS'basicLoop.thisN'
p406
I55
sS'basicLoop.thisIndex'
p407
I64
sa(dp408
g16
g87
sg18
Nsg59
S'./basicStim/02F_HA_O.jpg'
p409
sg21
Nsg19
Nsg17
F1.0669999999999999
sg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p410
I56
sg44
g11
sS'basicLoop.thisRepN'
p411
I0
sg20
Nsg41
g42
sg43
VA
sS'basicLoop.thisN'
p412
I56
sS'basicLoop.thisIndex'
p413
I10
sa(dp414
g16
g87
sg18
Nsg59
S'./basicStim/28M_HA_O.jpg'
p415
sg21
Nsg19
Nsg17
F1.0640000000000001
sg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p416
I57
sg44
g11
sS'basicLoop.thisRepN'
p417
I0
sg20
Nsg41
g42
sg43
VA
sS'basicLoop.thisN'
p418
I57
sS'basicLoop.thisIndex'
p419
I66
sa(dp420
g16
Nsg18
Nsg59
S'./basicStim/03F_SP_O.jpg'
p421
sg21
F2.7709999999999999
sg19
Nsg17
Nsg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p422
I58
sg44
g11
sS'basicLoop.thisRepN'
p423
I0
sg20
g83
sg41
g42
sg43
VA
sS'basicLoop.thisN'
p424
I58
sS'basicLoop.thisIndex'
p425
I19
sa(dp426
g16
Nsg18
Nsg59
S'./basicStim/34M_NE_C.jpg'
p427
sg21
Nsg19
Nsg17
Nsg45
V8
sg46
g50
sg23
F1.7629999999999999
sg22
g145
sS'basicLoop.thisTrialN'
p428
I59
sg44
g11
sS'basicLoop.thisRepN'
p429
I0
sg20
Nsg41
g42
sg43
VA
sS'basicLoop.thisN'
p430
I59
sS'basicLoop.thisIndex'
p431
I76
sa(dp432
g16
g101
sg18
Nsg59
S'./basicStim/21M_SA_C.jpg'
p433
sg21
Nsg19
Nsg17
F2.7549999999999999
sg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p434
I60
sg44
g11
sS'basicLoop.thisRepN'
p435
I0
sg20
Nsg41
g42
sg43
VA
sS'basicLoop.thisN'
p436
I60
sS'basicLoop.thisIndex'
p437
I46
sa(dp438
g16
Nsg18
Nsg59
S'./basicStim/36M_DI_O.jpg'
p439
sg21
F1.3959999999999999
sg19
Nsg17
Nsg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p440
I61
sg44
g11
sS'basicLoop.thisRepN'
p441
I0
sg20
g69
sg41
g42
sg43
VA
sS'basicLoop.thisN'
p442
I61
sS'basicLoop.thisIndex'
p443
I78
sa(dp444
g16
Nsg18
g94
sg59
S'./basicStim/01F_DI_O.jpg'
p445
sg21
Nsg19
F3.2869999999999999
sg17
Nsg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p446
I62
sg44
g11
sS'basicLoop.thisRepN'
p447
I0
sg20
Nsg41
g42
sg43
VA
sS'basicLoop.thisN'
p448
I62
sS'basicLoop.thisIndex'
p449
I1
sa(dp450
g16
g87
sg18
Nsg59
S'./basicStim/01F_NE_C.jpg'
p451
sg21
Nsg19
Nsg17
F1.413
sg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p452
I63
sg44
g11
sS'basicLoop.thisRepN'
p453
I0
sg20
Nsg41
g42
sg43
VA
sS'basicLoop.thisN'
p454
I63
sS'basicLoop.thisIndex'
p455
I6
sa(dp456
g16
g87
sg18
Nsg59
S'./basicStim/07F_HA_O.jpg'
p457
sg21
Nsg19
Nsg17
F4.1820000000000004
sg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p458
I64
sg44
g11
sS'basicLoop.thisRepN'
p459
I0
sg20
Nsg41
g42
sg43
VA
sS'basicLoop.thisN'
p460
I64
sS'basicLoop.thisIndex'
p461
I31
sa(dp462
g16
Nsg18
g94
sg59
S'./basicStim/21M_AN_O.jpg'
p463
sg21
Nsg19
F1.294
sg17
Nsg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p464
I65
sg44
g11
sS'basicLoop.thisRepN'
p465
I0
sg20
Nsg41
g42
sg43
VA
sS'basicLoop.thisN'
p466
I65
sS'basicLoop.thisIndex'
p467
I42
sa(dp468
g16
g101
sg18
Nsg59
S'./basicStim/03F_SA_C.jpg'
p469
sg21
Nsg19
Nsg17
F1.4630000000000001
sg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p470
I66
sg44
g11
sS'basicLoop.thisRepN'
p471
I0
sg20
Nsg41
g42
sg43
VA
sS'basicLoop.thisN'
p472
I66
sS'basicLoop.thisIndex'
p473
I18
sa(dp474
g16
Nsg18
g94
sg59
S'./basicStim/36M_AN_O.jpg'
p475
sg21
Nsg19
F1.5309999999999999
sg17
Nsg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p476
I67
sg44
g11
sS'basicLoop.thisRepN'
p477
I0
sg20
Nsg41
g42
sg43
VA
sS'basicLoop.thisN'
p478
I67
sS'basicLoop.thisIndex'
p479
I77
sa(dp480
g16
Nsg18
Nsg59
S'./basicStim/24M_SP_O.jpg'
p481
sg21
F5.8890000000000002
sg19
Nsg17
Nsg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p482
I68
sg44
g11
sS'basicLoop.thisRepN'
p483
I0
sg20
g83
sg41
g42
sg43
VA
sS'basicLoop.thisN'
p484
I68
sS'basicLoop.thisIndex'
p485
I61
sa(dp486
g16
Nsg18
Nsg59
S'./basicStim/28M_SP_O.jpg'
p487
sg21
F1.732
sg19
Nsg17
Nsg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p488
I69
sg44
g11
sS'basicLoop.thisRepN'
p489
I0
sg20
g83
sg41
g42
sg43
VA
sS'basicLoop.thisN'
p490
I69
sS'basicLoop.thisIndex'
p491
I68
sa(dp492
g16
g87
sg18
Nsg59
S'./basicStim/06F_HA_O.jpg'
p493
sg21
Nsg19
Nsg17
F1.722
sg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p494
I70
sg44
g11
sS'basicLoop.thisRepN'
p495
I0
sg20
Nsg41
g42
sg43
VA
sS'basicLoop.thisN'
p496
I70
sS'basicLoop.thisIndex'
p497
I24
sa(dp498
g16
Nsg18
Nsg59
S'./basicStim/01F_SP_O.jpg'
p499
sg21
F1.0449999999999999
sg19
Nsg17
Nsg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p500
I71
sg44
g11
sS'basicLoop.thisRepN'
p501
I0
sg20
g83
sg41
g42
sg43
VA
sS'basicLoop.thisN'
p502
I71
sS'basicLoop.thisIndex'
p503
I5
sa(dp504
g16
Nsg18
Nsg59
S'./basicStim/36M_SP_O.jpg'
p505
sg21
F2.569
sg19
Nsg17
Nsg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p506
I72
sg44
g11
sS'basicLoop.thisRepN'
p507
I0
sg20
g83
sg41
g42
sg43
VA
sS'basicLoop.thisN'
p508
I72
sS'basicLoop.thisIndex'
p509
I82
sa(dp510
g16
Nsg18
g94
sg59
S'./basicStim/28M_AN_O.jpg'
p511
sg21
Nsg19
F2.4630000000000001
sg17
Nsg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p512
I73
sg44
g11
sS'basicLoop.thisRepN'
p513
I0
sg20
Nsg41
g42
sg43
VA
sS'basicLoop.thisN'
p514
I73
sS'basicLoop.thisIndex'
p515
I63
sa(dp516
g16
Nsg18
Nsg59
S'./basicStim/03F_DI_O.jpg'
p517
sg21
F1.1950000000000001
sg19
Nsg17
Nsg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p518
I74
sg44
g11
sS'basicLoop.thisRepN'
p519
I0
sg20
g69
sg41
g42
sg43
VA
sS'basicLoop.thisN'
p520
I74
sS'basicLoop.thisIndex'
p521
I15
sa(dp522
g16
g87
sg18
Nsg59
S'./basicStim/21M_HA_O.jpg'
p523
sg21
Nsg19
Nsg17
F1.696
sg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p524
I75
sg44
g11
sS'basicLoop.thisRepN'
p525
I0
sg20
Nsg41
g42
sg43
VA
sS'basicLoop.thisN'
p526
I75
sS'basicLoop.thisIndex'
p527
I45
sa(dp528
g16
Nsg18
Nsg59
S'./basicStim/07F_NE_C.jpg'
p529
sg21
Nsg19
Nsg17
Nsg45
V8
sg46
g50
sg23
F2.1160000000000001
sg22
g145
sS'basicLoop.thisTrialN'
p530
I76
sg44
g11
sS'basicLoop.thisRepN'
p531
I0
sg20
Nsg41
g42
sg43
VA
sS'basicLoop.thisN'
p532
I76
sS'basicLoop.thisIndex'
p533
I34
sa(dp534
g16
Nsg18
g73
sg59
S'./basicStim/09F_FE_O.jpg'
p535
sg21
Nsg19
F1.899
sg17
Nsg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p536
I77
sg44
g11
sS'basicLoop.thisRepN'
p537
I0
sg20
Nsg41
g42
sg43
VA
sS'basicLoop.thisN'
p538
I77
sS'basicLoop.thisIndex'
p539
I37
sa(dp540
g16
Nsg18
g94
sg59
S'./basicStim/24M_AN_O.jpg'
p541
sg21
Nsg19
F0.75700000000000001
sg17
Nsg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p542
I78
sg44
g11
sS'basicLoop.thisRepN'
p543
I0
sg20
Nsg41
g42
sg43
VA
sS'basicLoop.thisN'
p544
I78
sS'basicLoop.thisIndex'
p545
I56
sa(dp546
g16
Nsg18
g73
sg59
S'./basicStim/06F_FE_O.jpg'
p547
sg21
Nsg19
F1.7869999999999999
sg17
Nsg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p548
I79
sg44
g11
sS'basicLoop.thisRepN'
p549
I0
sg20
Nsg41
g42
sg43
VA
sS'basicLoop.thisN'
p550
I79
sS'basicLoop.thisIndex'
p551
I23
sa(dp552
g16
g101
sg18
Nsg59
S'./basicStim/02F_SA_C.jpg'
p553
sg21
Nsg19
Nsg17
F1.1120000000000001
sg45
V8
sg46
g50
sg23
Nsg22
NsS'basicLoop.thisTrialN'
p554
I80
sg44
g11
sS'basicLoop.thisRepN'
p555
I0
sg20
Nsg41
g42
sg43
VA
sS'basicLoop.thisN'
p556
I80
sS'basicLoop.thisIndex'
p557
I11
sa(dp558
g16
Nsg18
Nsg59
S'./basicStim/36M_NE_C.jpg'
p559
sg21
Nsg19
Nsg17
Nsg45
V8
sg46
g50
sg23
F1.173
sg22
g145
sS'basicLoop.thisTrialN'
p560
I81
sg44
g11
sS'basicLoop.thisRepN'
p561
I0
sg20
Nsg41
g42
sg43
VA
sS'basicLoop.thisN'
p562
I81
sS'basicLoop.thisIndex'
p563
I83
sa(dp564
g16
Nsg18
Nsg59
S'./basicStim/28M_SA_C.jpg'
p565
sg21
Nsg19
Nsg17
Nsg45
V8
sg46
g50
sg23
F6.3819999999999997
sg22
g145
sS'basicLoop.thisTrialN'
p566
I82
sg44
g11
sS'basicLoop.thisRepN'
p567
I0
sg20
Nsg41
g42
sg43
VA
sS'basicLoop.thisN'
p568
I82
sS'basicLoop.thisIndex'
p569
I67
sa(dp570
g16
Nsg18
Nsg59
S'./basicStim/24M_NE_C.jpg'
p571
sg21
Nsg19
Nsg17
Nsg45
V8
sg46
g50
sg23
F1.829
sg22
g145
sS'basicLoop.thisTrialN'
p572
I83
sg44
g11
sS'basicLoop.thisRepN'
p573
I0
sg20
Nsg41
g42
sg43
VA
sS'basicLoop.thisN'
p574
I83
sS'basicLoop.thisIndex'
p575
I62
sa(dp576
g44
g11
sg43
VA
sg41
g42
sg24
S'return'
p577
sg45
V8
sg46
g50
sg25
F20.616042137145996
sa(dp578
g15
F4.0051009654998779
sg44
g11
sg43
VA
sg41
g42
sg45
V8
sg46
g50
sg14
S'return'
p579
sa(dp580
g44
g11
sg43
VA
sg41
g42
sg24
S'return'
p581
sg45
V8
sg46
g50
sg25
F15.753857135772705
sa(dp582
g41
g42
sg44
g11
sg27
F2.0782082080841064
sg26
S'return'
p583
sg43
VA
sg45
V8
sg46
g50
sa(dp584
g31
I0
sg44
g11
sg43
VA
sS'img'
p585
S'./stim/MorphM5_06_orig.jpg'
p586
sS'trials.thisIndex'
p587
g47
(g48
(S'i8'
I0
I1
tRp588
(I3
S'<'
NNNI-1
I-1
I0
tbS'\x00\x00\x00\x00\x00\x00\x00\x00'
tRp589
sS'trials.thisRepN'
p590
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00d4\xc0'
tRp591
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\n$@'
tRp592
sg30
I1
sg60
g47
(g588
S'\x00\x00\x00\x00\x00\x00\x00\x00'
tRp593
sS'trials.thisTrialN'
p594
I0
sg32
I0
sg41
g42
sg45
V8
sg33
F6.5173490047454834
sS'trials.thisN'
p595
I0
sa(dp596
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF7_00_orig.jpg'
p597
sS'trials.thisIndex'
p598
g47
(g588
S'\x01\x00\x00\x00\x00\x00\x00\x00'
tRp599
sS'trials.thisRepN'
p600
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80>4\xc0'
tRp601
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xde"@'
tRp602
sg30
I0
sg60
g47
(g588
S'\x01\x00\x00\x00\x00\x00\x00\x00'
tRp603
sS'trials.thisTrialN'
p604
I1
sg32
I1
sg41
g42
sg45
V8
sg33
F0.95367908477783203
sS'trials.thisN'
p605
I1
sa(dp606
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF5_03_orig.jpg'
p607
sS'trials.thisIndex'
p608
g47
(g588
S'\x02\x00\x00\x00\x00\x00\x00\x00'
tRp609
sS'trials.thisRepN'
p610
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\n4\xc0'
tRp611
sg29
g47
(g49
S'\x00\x00\x00\x00\x00W"@'
tRp612
sg30
I0
sg60
g47
(g588
S'\x02\x00\x00\x00\x00\x00\x00\x00'
tRp613
sS'trials.thisTrialN'
p614
I2
sg32
I1
sg41
g42
sg45
V8
sg33
F2.5105340480804443
sS'trials.thisN'
p615
I2
sa(dp616
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF2_08_orig.jpg'
p617
sS'trials.thisIndex'
p618
g47
(g588
S'\x03\x00\x00\x00\x00\x00\x00\x00'
tRp619
sS'trials.thisRepN'
p620
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00(4\xc0'
tRp621
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x1d @'
tRp622
sg30
I1
sg60
g47
(g588
S'\x03\x00\x00\x00\x00\x00\x00\x00'
tRp623
sS'trials.thisTrialN'
p624
I3
sg32
I0
sg41
g42
sg45
V8
sg33
F1.0879650115966797
sS'trials.thisN'
p625
I3
sa(dp626
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM10_07_orig.jpg'
p627
sS'trials.thisIndex'
p628
g47
(g588
S'\x04\x00\x00\x00\x00\x00\x00\x00'
tRp629
sS'trials.thisRepN'
p630
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x194\xc0'
tRp631
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x1d @'
tRp632
sg30
I1
sg60
g47
(g588
S'\x04\x00\x00\x00\x00\x00\x00\x00'
tRp633
sS'trials.thisTrialN'
p634
I4
sg32
I0
sg41
g42
sg45
V8
sg33
F0.81895208358764648
sS'trials.thisN'
p635
I4
sa(dp636
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF9_08_orig.jpg'
p637
sS'trials.thisIndex'
p638
g47
(g588
S'\x05\x00\x00\x00\x00\x00\x00\x00'
tRp639
sS'trials.thisRepN'
p640
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\n4\xc0'
tRp641
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x0e @'
tRp642
sg30
I1
sg60
g47
(g588
S'\x05\x00\x00\x00\x00\x00\x00\x00'
tRp643
sS'trials.thisTrialN'
p644
I5
sg32
I0
sg41
g42
sg45
V8
sg33
F2.3452050685882568
sS'trials.thisN'
p645
I5
sa(dp646
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF3_04_orig.jpg'
p647
sS'trials.thisIndex'
p648
g47
(g588
S'\x06\x00\x00\x00\x00\x00\x00\x00'
tRp649
sS'trials.thisRepN'
p650
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\n4\xc0'
tRp651
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x0e @'
tRp652
sg30
I0
sg60
g47
(g588
S'\x06\x00\x00\x00\x00\x00\x00\x00'
tRp653
sS'trials.thisTrialN'
p654
I6
sg32
I1
sg41
g42
sg45
V8
sg33
F0.90233302116394043
sS'trials.thisN'
p655
I6
sa(dp656
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF1_01_orig.jpg'
p657
sS'trials.thisIndex'
p658
g47
(g588
S'\x07\x00\x00\x00\x00\x00\x00\x00'
tRp659
sS'trials.thisRepN'
p660
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\n4\xc0'
tRp661
sg29
g47
(g49
S'\x00\x00\x00\x00\x00, @'
tRp662
sg30
I0
sg60
g47
(g588
S'\x07\x00\x00\x00\x00\x00\x00\x00'
tRp663
sS'trials.thisTrialN'
p664
I7
sg32
I1
sg41
g42
sg45
V8
sg33
F0.71730613708496094
sS'trials.thisN'
p665
I7
sa(dp666
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM5_08_orig.jpg'
p667
sS'trials.thisIndex'
p668
g47
(g588
S'\x08\x00\x00\x00\x00\x00\x00\x00'
tRp669
sS'trials.thisRepN'
p670
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80\x024\xc0'
tRp671
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xa4\x1f@'
tRp672
sg30
I1
sg60
g47
(g588
S'\x08\x00\x00\x00\x00\x00\x00\x00'
tRp673
sS'trials.thisTrialN'
p674
I8
sg32
I0
sg41
g42
sg45
V8
sg33
F1.1377990245819092
sS'trials.thisN'
p675
I8
sa(dp676
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM4_04_orig.jpg'
p677
sS'trials.thisIndex'
p678
g47
(g588
S'\t\x00\x00\x00\x00\x00\x00\x00'
tRp679
sS'trials.thisRepN'
p680
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80\x024\xc0'
tRp681
sg29
g47
(g49
S'\x00\x00\x00\x00\x00, @'
tRp682
sg30
I0
sg60
g47
(g588
S'\t\x00\x00\x00\x00\x00\x00\x00'
tRp683
sS'trials.thisTrialN'
p684
I9
sg32
I1
sg41
g42
sg45
V8
sg33
F1.1392359733581543
sS'trials.thisN'
p685
I9
sa(dp686
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF6_01_orig.jpg'
p687
sS'trials.thisIndex'
p688
g47
(g588
S'\n\x00\x00\x00\x00\x00\x00\x00'
tRp689
sS'trials.thisRepN'
p690
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80\x024\xc0'
tRp691
sg29
g47
(g49
S'\x00\x00\x00\x00\x00; @'
tRp692
sg30
I0
sg60
g47
(g588
S'\n\x00\x00\x00\x00\x00\x00\x00'
tRp693
sS'trials.thisTrialN'
p694
I10
sg32
I1
sg41
g42
sg45
V8
sg33
F1.0518028736114502
sS'trials.thisN'
p695
I10
sa(dp696
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF2_06_orig.jpg'
p697
sS'trials.thisIndex'
p698
g47
(g588
S'\x0b\x00\x00\x00\x00\x00\x00\x00'
tRp699
sS'trials.thisRepN'
p700
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xec3\xc0'
tRp701
sg29
g47
(g49
S'\x00\x00\x00\x00\x00J @'
tRp702
sg30
I0
sg60
g47
(g588
S'\x0b\x00\x00\x00\x00\x00\x00\x00'
tRp703
sS'trials.thisTrialN'
p704
I11
sg32
I1
sg41
g42
sg45
V8
sg33
F1.0529751777648926
sS'trials.thisN'
p705
I11
sa(dp706
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF6_08_orig.jpg'
p707
sS'trials.thisIndex'
p708
g47
(g588
S'\x0c\x00\x00\x00\x00\x00\x00\x00'
tRp709
sS'trials.thisRepN'
p710
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xec3\xc0'
tRp711
sg29
g47
(g49
S'\x00\x00\x00\x00\x00J @'
tRp712
sg30
I1
sg60
g47
(g588
S'\x0c\x00\x00\x00\x00\x00\x00\x00'
tRp713
sS'trials.thisTrialN'
p714
I12
sg32
I0
sg41
g42
sg45
V8
sg33
F1.1874020099639893
sS'trials.thisN'
p715
I12
sa(dp716
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF8_08_orig.jpg'
p717
sS'trials.thisIndex'
p718
g47
(g588
S'\r\x00\x00\x00\x00\x00\x00\x00'
tRp719
sS'trials.thisRepN'
p720
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xec3\xc0'
tRp721
sg29
g47
(g49
S'\x00\x00\x00\x00\x00J @'
tRp722
sg30
I0
sg60
g47
(g588
S'\r\x00\x00\x00\x00\x00\x00\x00'
tRp723
sS'trials.thisTrialN'
p724
I13
sg32
I1
sg41
g42
sg45
V8
sg33
F2.74839186668396
sS'trials.thisN'
p725
I13
sa(dp726
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF4_03_orig.jpg'
p727
sS'trials.thisIndex'
p728
g47
(g588
S'\x0e\x00\x00\x00\x00\x00\x00\x00'
tRp729
sS'trials.thisRepN'
p730
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xec3\xc0'
tRp731
sg29
g47
(g49
S'\x00\x00\x00\x00\x00Y @'
tRp732
sg30
I0
sg60
g47
(g588
S'\x0e\x00\x00\x00\x00\x00\x00\x00'
tRp733
sS'trials.thisTrialN'
p734
I14
sg32
I1
sg41
g42
sg45
V8
sg33
F0.65084195137023926
sS'trials.thisN'
p735
I14
sa(dp736
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF6_03_orig.jpg'
p737
sS'trials.thisIndex'
p738
g47
(g588
S'\x0f\x00\x00\x00\x00\x00\x00\x00'
tRp739
sS'trials.thisRepN'
p740
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80\xf33\xc0'
tRp741
sg29
g47
(g49
S'\x00\x00\x00\x00\x00h @'
tRp742
sg30
I0
sg60
g47
(g588
S'\x0f\x00\x00\x00\x00\x00\x00\x00'
tRp743
sS'trials.thisTrialN'
p744
I15
sg32
I1
sg41
g42
sg45
V8
sg33
F0.68313312530517578
sS'trials.thisN'
p745
I15
sa(dp746
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF9_06_orig.jpg'
p747
sS'trials.thisIndex'
p748
g47
(g588
S'\x10\x00\x00\x00\x00\x00\x00\x00'
tRp749
sS'trials.thisRepN'
p750
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xec3\xc0'
tRp751
sg29
g47
(g49
S'\x00\x00\x00\x00\x00w @'
tRp752
sg30
I0
sg60
g47
(g588
S'\x10\x00\x00\x00\x00\x00\x00\x00'
tRp753
sS'trials.thisTrialN'
p754
I16
sg32
I1
sg41
g42
sg45
V8
sg33
F1.6906759738922119
sS'trials.thisN'
p755
I16
sa(dp756
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF10_07_orig.jpg'
p757
sS'trials.thisIndex'
p758
g47
(g588
S'\x11\x00\x00\x00\x00\x00\x00\x00'
tRp759
sS'trials.thisRepN'
p760
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xec3\xc0'
tRp761
sg29
g47
(g49
S'\x00\x00\x00\x00\x00h @'
tRp762
sg30
I0
sg60
g47
(g588
S'\x11\x00\x00\x00\x00\x00\x00\x00'
tRp763
sS'trials.thisTrialN'
p764
I17
sg32
I1
sg41
g42
sg45
V8
sg33
F3.6165759563446045
sS'trials.thisN'
p765
I17
sa(dp766
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM9_03_orig.jpg'
p767
sS'trials.thisIndex'
p768
g47
(g588
S'\x12\x00\x00\x00\x00\x00\x00\x00'
tRp769
sS'trials.thisRepN'
p770
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xfb3\xc0'
tRp771
sg29
g47
(g49
S'\x00\x00\x00\x00\x00; @'
tRp772
sg30
I0
sg60
g47
(g588
S'\x12\x00\x00\x00\x00\x00\x00\x00'
tRp773
sS'trials.thisTrialN'
p774
I18
sg32
I1
sg41
g42
sg45
V8
sg33
F1.2706539630889893
sS'trials.thisN'
p775
I18
sa(dp776
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF4_08_orig.jpg'
p777
sS'trials.thisIndex'
p778
g47
(g588
S'\x13\x00\x00\x00\x00\x00\x00\x00'
tRp779
sS'trials.thisRepN'
p780
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\n4\xc0'
tRp781
sg29
g47
(g49
S'\x00\x00\x00\x00\x00; @'
tRp782
sg30
I1
sg60
g47
(g588
S'\x13\x00\x00\x00\x00\x00\x00\x00'
tRp783
sS'trials.thisTrialN'
p784
I19
sg32
I0
sg41
g42
sg45
V8
sg33
F1.4070990085601807
sS'trials.thisN'
p785
I19
sa(dp786
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF5_06_orig.jpg'
p787
sS'trials.thisIndex'
p788
g47
(g588
S'\x14\x00\x00\x00\x00\x00\x00\x00'
tRp789
sS'trials.thisRepN'
p790
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80\x024\xc0'
tRp791
sg29
g47
(g49
S'\x00\x00\x00\x00\x00Y @'
tRp792
sg30
I0
sg60
g47
(g588
S'\x14\x00\x00\x00\x00\x00\x00\x00'
tRp793
sS'trials.thisTrialN'
p794
I20
sg32
I1
sg41
g42
sg45
V8
sg33
F2.7133769989013672
sS'trials.thisN'
p795
I20
sa(dp796
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM7_01_orig.jpg'
p797
sS'trials.thisIndex'
p798
g47
(g588
S'\x15\x00\x00\x00\x00\x00\x00\x00'
tRp799
sS'trials.thisRepN'
p800
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80\xf33\xc0'
tRp801
sg29
g47
(g49
S'\x00\x00\x00\x00\x00; @'
tRp802
sg30
I1
sg60
g47
(g588
S'\x15\x00\x00\x00\x00\x00\x00\x00'
tRp803
sS'trials.thisTrialN'
p804
I21
sg32
I0
sg41
g42
sg45
V8
sg33
F1.087493896484375
sS'trials.thisN'
p805
I21
sa(dp806
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF3_03_orig.jpg'
p807
sS'trials.thisIndex'
p808
g47
(g588
S'\x16\x00\x00\x00\x00\x00\x00\x00'
tRp809
sS'trials.thisRepN'
p810
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80\xf33\xc0'
tRp811
sg29
g47
(g49
S'\x00\x00\x00\x00\x00J @'
tRp812
sg30
I0
sg60
g47
(g588
S'\x16\x00\x00\x00\x00\x00\x00\x00'
tRp813
sS'trials.thisTrialN'
p814
I22
sg32
I1
sg41
g42
sg45
V8
sg33
F0.80436897277832031
sS'trials.thisN'
p815
I22
sa(dp816
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM3_05_orig.jpg'
p817
sS'trials.thisIndex'
p818
g47
(g588
S'\x17\x00\x00\x00\x00\x00\x00\x00'
tRp819
sS'trials.thisRepN'
p820
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80\x024\xc0'
tRp821
sg29
g47
(g49
S'\x00\x00\x00\x00\x00, @'
tRp822
sg30
I1
sg60
g47
(g588
S'\x17\x00\x00\x00\x00\x00\x00\x00'
tRp823
sS'trials.thisTrialN'
p824
I23
sg32
I0
sg41
g42
sg45
V8
sg33
F1.9924929141998291
sS'trials.thisN'
p825
I23
sa(dp826
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM4_01_orig.jpg'
p827
sS'trials.thisIndex'
p828
g47
(g588
S'\x18\x00\x00\x00\x00\x00\x00\x00'
tRp829
sS'trials.thisRepN'
p830
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80\x024\xc0'
tRp831
sg29
g47
(g49
S'\x00\x00\x00\x00\x00; @'
tRp832
sg30
I0
sg60
g47
(g588
S'\x18\x00\x00\x00\x00\x00\x00\x00'
tRp833
sS'trials.thisTrialN'
p834
I24
sg32
I1
sg41
g42
sg45
V8
sg33
F1.0546419620513916
sS'trials.thisN'
p835
I24
sa(dp836
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF6_02_orig.jpg'
p837
sS'trials.thisIndex'
p838
g47
(g588
S'\x19\x00\x00\x00\x00\x00\x00\x00'
tRp839
sS'trials.thisRepN'
p840
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80\x024\xc0'
tRp841
sg29
g47
(g49
S'\x00\x00\x00\x00\x00; @'
tRp842
sg30
I0
sg60
g47
(g588
S'\x19\x00\x00\x00\x00\x00\x00\x00'
tRp843
sS'trials.thisTrialN'
p844
I25
sg32
I1
sg41
g42
sg45
V8
sg33
F0.83666515350341797
sS'trials.thisN'
p845
I25
sa(dp846
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF7_03_orig.jpg'
p847
sS'trials.thisIndex'
p848
g47
(g588
S'\x1a\x00\x00\x00\x00\x00\x00\x00'
tRp849
sS'trials.thisRepN'
p850
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\n4\xc0'
tRp851
sg29
g47
(g49
S'\x00\x00\x00\x00\x00J @'
tRp852
sg30
I0
sg60
g47
(g588
S'\x1a\x00\x00\x00\x00\x00\x00\x00'
tRp853
sS'trials.thisTrialN'
p854
I26
sg32
I1
sg41
g42
sg45
V8
sg33
F0.68559789657592773
sS'trials.thisN'
p855
I26
sa(dp856
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF2_02_orig.jpg'
p857
sS'trials.thisIndex'
p858
g47
(g588
S'\x1b\x00\x00\x00\x00\x00\x00\x00'
tRp859
sS'trials.thisRepN'
p860
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xec3\xc0'
tRp861
sg29
g47
(g49
S'\x00\x00\x00\x00\x00Y @'
tRp862
sg30
I0
sg60
g47
(g588
S'\x1b\x00\x00\x00\x00\x00\x00\x00'
tRp863
sS'trials.thisTrialN'
p864
I27
sg32
I1
sg41
g42
sg45
V8
sg33
F2.4787840843200684
sS'trials.thisN'
p865
I27
sa(dp866
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM9_00_orig.jpg'
p867
sS'trials.thisIndex'
p868
g47
(g588
S'\x1c\x00\x00\x00\x00\x00\x00\x00'
tRp869
sS'trials.thisRepN'
p870
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80\xe43\xc0'
tRp871
sg29
g47
(g49
S'\x00\x00\x00\x00\x00J @'
tRp872
sg30
I0
sg60
g47
(g588
S'\x1c\x00\x00\x00\x00\x00\x00\x00'
tRp873
sS'trials.thisTrialN'
p874
I28
sg32
I1
sg41
g42
sg45
V8
sg33
F1.8593950271606445
sS'trials.thisN'
p875
I28
sa(dp876
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF7_05_orig.jpg'
p877
sS'trials.thisIndex'
p878
g47
(g588
S'\x1d\x00\x00\x00\x00\x00\x00\x00'
tRp879
sS'trials.thisRepN'
p880
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80\xc63\xc0'
tRp881
sg29
g47
(g49
S'\x00\x00\x00\x00\x00Y @'
tRp882
sg30
I0
sg60
g47
(g588
S'\x1d\x00\x00\x00\x00\x00\x00\x00'
tRp883
sS'trials.thisTrialN'
p884
I29
sg32
I1
sg41
g42
sg45
V8
sg33
F2.8310859203338623
sS'trials.thisN'
p885
I29
sa(dp886
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF8_10_orig.jpg'
p887
sS'trials.thisIndex'
p888
g47
(g588
S'\x1e\x00\x00\x00\x00\x00\x00\x00'
tRp889
sS'trials.thisRepN'
p890
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80\xa83\xc0'
tRp891
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xa4 @'
tRp892
sg30
I1
sg60
g47
(g588
S'\x1e\x00\x00\x00\x00\x00\x00\x00'
tRp893
sS'trials.thisTrialN'
p894
I30
sg32
I0
sg41
g42
sg45
V8
sg33
F1.2055380344390869
sS'trials.thisN'
p895
I30
sa(dp896
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM6_08_orig.jpg'
p897
sS'trials.thisIndex'
p898
g47
(g588
S'\x1f\x00\x00\x00\x00\x00\x00\x00'
tRp899
sS'trials.thisRepN'
p900
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80\xa83\xc0'
tRp901
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xa4 @'
tRp902
sg30
I0
sg60
g47
(g588
S'\x1f\x00\x00\x00\x00\x00\x00\x00'
tRp903
sS'trials.thisTrialN'
p904
I31
sg32
I1
sg41
g42
sg45
V8
sg33
F7.8087320327758789
sS'trials.thisN'
p905
I31
sa(dp906
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM1_09_orig.jpg'
p907
sS'trials.thisIndex'
p908
g47
(g588
S' \x00\x00\x00\x00\x00\x00\x00'
tRp909
sS'trials.thisRepN'
p910
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xb03\xc0'
tRp911
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x95 @'
tRp912
sg30
I1
sg60
g47
(g588
S' \x00\x00\x00\x00\x00\x00\x00'
tRp913
sS'trials.thisTrialN'
p914
I32
sg32
I0
sg41
g42
sg45
V8
sg33
F1.154102087020874
sS'trials.thisN'
p915
I32
sa(dp916
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF9_01_orig.jpg'
p917
sS'trials.thisIndex'
p918
g47
(g588
S'!\x00\x00\x00\x00\x00\x00\x00'
tRp919
sS'trials.thisRepN'
p920
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xb03\xc0'
tRp921
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xc2 @'
tRp922
sg30
I0
sg60
g47
(g588
S'!\x00\x00\x00\x00\x00\x00\x00'
tRp923
sS'trials.thisTrialN'
p924
I33
sg32
I1
sg41
g42
sg45
V8
sg33
F3.4679839611053467
sS'trials.thisN'
p925
I33
sa(dp926
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM1_03_orig.jpg'
p927
sS'trials.thisIndex'
p928
g47
(g588
S'"\x00\x00\x00\x00\x00\x00\x00'
tRp929
sS'trials.thisRepN'
p930
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xbf3\xc0'
tRp931
sg29
g47
(g49
S'\x00\x00\x00\x00\x00w @'
tRp932
sg30
I0
sg60
g47
(g588
S'"\x00\x00\x00\x00\x00\x00\x00'
tRp933
sS'trials.thisTrialN'
p934
I34
sg32
I1
sg41
g42
sg45
V8
sg33
F3.5009808540344238
sS'trials.thisN'
p935
I34
sa(dp936
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM8_07_orig.jpg'
p937
sS'trials.thisIndex'
p938
g47
(g588
S'#\x00\x00\x00\x00\x00\x00\x00'
tRp939
sS'trials.thisRepN'
p940
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xce3\xc0'
tRp941
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xc2 @'
tRp942
sg30
I1
sg60
g47
(g588
S'#\x00\x00\x00\x00\x00\x00\x00'
tRp943
sS'trials.thisTrialN'
p944
I35
sg32
I0
sg41
g42
sg45
V8
sg33
F5.6283280849456787
sS'trials.thisN'
p945
I35
sa(dp946
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF8_03_orig.jpg'
p947
sS'trials.thisIndex'
p948
g47
(g588
S'$\x00\x00\x00\x00\x00\x00\x00'
tRp949
sS'trials.thisRepN'
p950
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xce3\xc0'
tRp951
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xc2 @'
tRp952
sg30
I0
sg60
g47
(g588
S'$\x00\x00\x00\x00\x00\x00\x00'
tRp953
sS'trials.thisTrialN'
p954
I36
sg32
I1
sg41
g42
sg45
V8
sg33
F3.6848042011260986
sS'trials.thisN'
p955
I36
sa(dp956
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM6_10_orig.jpg'
p957
sS'trials.thisIndex'
p958
g47
(g588
S'%\x00\x00\x00\x00\x00\x00\x00'
tRp959
sS'trials.thisRepN'
p960
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xbf3\xc0'
tRp961
sg29
g47
(g49
S'\x00\x00\x00\x00\x00w @'
tRp962
sg30
I1
sg60
g47
(g588
S'%\x00\x00\x00\x00\x00\x00\x00'
tRp963
sS'trials.thisTrialN'
p964
I37
sg32
I0
sg41
g42
sg45
V8
sg33
F6.7864382266998291
sS'trials.thisN'
p965
I37
sa(dp966
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM4_07_orig.jpg'
p967
sS'trials.thisIndex'
p968
g47
(g588
S'&\x00\x00\x00\x00\x00\x00\x00'
tRp969
sS'trials.thisRepN'
p970
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xb03\xc0'
tRp971
sg29
g47
(g49
S'\x00\x00\x00\x00\x00; @'
tRp972
sg30
I1
sg60
g47
(g588
S'&\x00\x00\x00\x00\x00\x00\x00'
tRp973
sS'trials.thisTrialN'
p974
I38
sg32
I0
sg41
g42
sg45
V8
sg33
F1.1887450218200684
sS'trials.thisN'
p975
I38
sa(dp976
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF3_09_orig.jpg'
p977
sS'trials.thisIndex'
p978
g47
(g588
S"'\x00\x00\x00\x00\x00\x00\x00"
tRp979
sS'trials.thisRepN'
p980
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xb03\xc0'
tRp981
sg29
g47
(g49
S'\x00\x00\x00\x00\x00J @'
tRp982
sg30
I0
sg60
g47
(g588
S"'\x00\x00\x00\x00\x00\x00\x00"
tRp983
sS'trials.thisTrialN'
p984
I39
sg32
I1
sg41
g42
sg45
V8
sg33
F1.4400019645690918
sS'trials.thisN'
p985
I39
sa(dp986
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM10_04_orig.jpg'
p987
sS'trials.thisIndex'
p988
g47
(g588
S'(\x00\x00\x00\x00\x00\x00\x00'
tRp989
sS'trials.thisRepN'
p990
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xb03\xc0'
tRp991
sg29
g47
(g49
S'\x00\x00\x00\x00\x00Y @'
tRp992
sg30
I0
sg60
g47
(g588
S'(\x00\x00\x00\x00\x00\x00\x00'
tRp993
sS'trials.thisTrialN'
p994
I40
sg32
I1
sg41
g42
sg45
V8
sg33
F1.1371719837188721
sS'trials.thisN'
p995
I40
sa(dp996
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM7_07_orig.jpg'
p997
sS'trials.thisIndex'
p998
g47
(g588
S')\x00\x00\x00\x00\x00\x00\x00'
tRp999
sS'trials.thisRepN'
p1000
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xb03\xc0'
tRp1001
sg29
g47
(g49
S'\x00\x00\x00\x00\x00Y @'
tRp1002
sg30
I1
sg60
g47
(g588
S')\x00\x00\x00\x00\x00\x00\x00'
tRp1003
sS'trials.thisTrialN'
p1004
I41
sg32
I0
sg41
g42
sg45
V8
sg33
F1.8769478797912598
sS'trials.thisN'
p1005
I41
sa(dp1006
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM8_00_orig.jpg'
p1007
sS'trials.thisIndex'
p1008
g47
(g588
S'*\x00\x00\x00\x00\x00\x00\x00'
tRp1009
sS'trials.thisRepN'
p1010
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xa13\xc0'
tRp1011
sg29
g47
(g49
S'\x00\x00\x00\x00\x00w @'
tRp1012
sg30
I0
sg60
g47
(g588
S'*\x00\x00\x00\x00\x00\x00\x00'
tRp1013
sS'trials.thisTrialN'
p1014
I42
sg32
I1
sg41
g42
sg45
V8
sg33
F3.1661558151245117
sS'trials.thisN'
p1015
I42
sa(dp1016
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF9_05_orig.jpg'
p1017
sS'trials.thisIndex'
p1018
g47
(g588
S'+\x00\x00\x00\x00\x00\x00\x00'
tRp1019
sS'trials.thisRepN'
p1020
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80\x993\xc0'
tRp1021
sg29
g47
(g49
S'\x00\x00\x00\x00\x00Y @'
tRp1022
sg30
I0
sg60
g47
(g588
S'+\x00\x00\x00\x00\x00\x00\x00'
tRp1023
sS'trials.thisTrialN'
p1024
I43
sg32
I1
sg41
g42
sg45
V8
sg33
F0.95411205291748047
sS'trials.thisN'
p1025
I43
sa(dp1026
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM2_04_orig.jpg'
p1027
sS'trials.thisIndex'
p1028
g47
(g588
S',\x00\x00\x00\x00\x00\x00\x00'
tRp1029
sS'trials.thisRepN'
p1030
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80\x993\xc0'
tRp1031
sg29
g47
(g49
S'\x00\x00\x00\x00\x00; @'
tRp1032
sg30
I0
sg60
g47
(g588
S',\x00\x00\x00\x00\x00\x00\x00'
tRp1033
sS'trials.thisTrialN'
p1034
I44
sg32
I1
sg41
g42
sg45
V8
sg33
F0.85326600074768066
sS'trials.thisN'
p1035
I44
sa(dp1036
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF5_01_orig.jpg'
p1037
sS'trials.thisIndex'
p1038
g47
(g588
S'-\x00\x00\x00\x00\x00\x00\x00'
tRp1039
sS'trials.thisRepN'
p1040
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x923\xc0'
tRp1041
sg29
g47
(g49
S'\x00\x00\x00\x00\x00w @'
tRp1042
sg30
I0
sg60
g47
(g588
S'-\x00\x00\x00\x00\x00\x00\x00'
tRp1043
sS'trials.thisTrialN'
p1044
I45
sg32
I1
sg41
g42
sg45
V8
sg33
F2.4947021007537842
sS'trials.thisN'
p1045
I45
sa(dp1046
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF1_03_orig.jpg'
p1047
sS'trials.thisIndex'
p1048
g47
(g588
S'.\x00\x00\x00\x00\x00\x00\x00'
tRp1049
sS'trials.thisRepN'
p1050
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x923\xc0'
tRp1051
sg29
g47
(g49
S'\x00\x00\x00\x00\x00w @'
tRp1052
sg30
I0
sg60
g47
(g588
S'.\x00\x00\x00\x00\x00\x00\x00'
tRp1053
sS'trials.thisTrialN'
p1054
I46
sg32
I1
sg41
g42
sg45
V8
sg33
F1.8085570335388184
sS'trials.thisN'
p1055
I46
sa(dp1056
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM9_08_orig.jpg'
p1057
sS'trials.thisIndex'
p1058
g47
(g588
S'/\x00\x00\x00\x00\x00\x00\x00'
tRp1059
sS'trials.thisRepN'
p1060
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x833\xc0'
tRp1061
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x86 @'
tRp1062
sg30
I0
sg60
g47
(g588
S'/\x00\x00\x00\x00\x00\x00\x00'
tRp1063
sS'trials.thisTrialN'
p1064
I47
sg32
I1
sg41
g42
sg45
V8
sg33
F4.9430811405181885
sS'trials.thisN'
p1065
I47
sa(dp1066
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM4_08_orig.jpg'
p1067
sS'trials.thisIndex'
p1068
g47
(g588
S'0\x00\x00\x00\x00\x00\x00\x00'
tRp1069
sS'trials.thisRepN'
p1070
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80\x8a3\xc0'
tRp1071
sg29
g47
(g49
S'\x00\x00\x00\x00\x00w @'
tRp1072
sg30
I1
sg60
g47
(g588
S'0\x00\x00\x00\x00\x00\x00\x00'
tRp1073
sS'trials.thisTrialN'
p1074
I48
sg32
I0
sg41
g42
sg45
V8
sg33
F0.91976714134216309
sS'trials.thisN'
p1075
I48
sa(dp1076
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM8_08_orig.jpg'
p1077
sS'trials.thisIndex'
p1078
g47
(g588
S'1\x00\x00\x00\x00\x00\x00\x00'
tRp1079
sS'trials.thisRepN'
p1080
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80\x8a3\xc0'
tRp1081
sg29
g47
(g49
S'\x00\x00\x00\x00\x00h @'
tRp1082
sg30
I1
sg60
g47
(g588
S'1\x00\x00\x00\x00\x00\x00\x00'
tRp1083
sS'trials.thisTrialN'
p1084
I49
sg32
I0
sg41
g42
sg45
V8
sg33
F1.0044021606445312
sS'trials.thisN'
p1085
I49
sa(dp1086
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF10_03_orig.jpg'
p1087
sS'trials.thisIndex'
p1088
g47
(g588
S'2\x00\x00\x00\x00\x00\x00\x00'
tRp1089
sS'trials.thisRepN'
p1090
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x923\xc0'
tRp1091
sg29
g47
(g49
S'\x00\x00\x00\x00\x00Y @'
tRp1092
sg30
I0
sg60
g47
(g588
S'2\x00\x00\x00\x00\x00\x00\x00'
tRp1093
sS'trials.thisTrialN'
p1094
I50
sg32
I1
sg41
g42
sg45
V8
sg33
F1.6746020317077637
sS'trials.thisN'
p1095
I50
sa(dp1096
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM5_07_orig.jpg'
p1097
sS'trials.thisIndex'
p1098
g47
(g588
S'3\x00\x00\x00\x00\x00\x00\x00'
tRp1099
sS'trials.thisRepN'
p1100
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xa13\xc0'
tRp1101
sg29
g47
(g49
S'\x00\x00\x00\x00\x00Y @'
tRp1102
sg30
I1
sg60
g47
(g588
S'3\x00\x00\x00\x00\x00\x00\x00'
tRp1103
sS'trials.thisTrialN'
p1104
I51
sg32
I0
sg41
g42
sg45
V8
sg33
F2.1274631023406982
sS'trials.thisN'
p1105
I51
sa(dp1106
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM4_05_orig.jpg'
p1107
sS'trials.thisIndex'
p1108
g47
(g588
S'4\x00\x00\x00\x00\x00\x00\x00'
tRp1109
sS'trials.thisRepN'
p1110
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xa13\xc0'
tRp1111
sg29
g47
(g49
S'\x00\x00\x00\x00\x00h @'
tRp1112
sg30
I1
sg60
g47
(g588
S'4\x00\x00\x00\x00\x00\x00\x00'
tRp1113
sS'trials.thisTrialN'
p1114
I52
sg32
I0
sg41
g42
sg45
V8
sg33
F1.0204169750213623
sS'trials.thisN'
p1115
I52
sa(dp1116
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM2_05_orig.jpg'
p1117
sS'trials.thisIndex'
p1118
g47
(g588
S'5\x00\x00\x00\x00\x00\x00\x00'
tRp1119
sS'trials.thisRepN'
p1120
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80\xa83\xc0'
tRp1121
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x86 @'
tRp1122
sg30
I0
sg60
g47
(g588
S'5\x00\x00\x00\x00\x00\x00\x00'
tRp1123
sS'trials.thisTrialN'
p1124
I53
sg32
I1
sg41
g42
sg45
V8
sg33
F1.2557270526885986
sS'trials.thisN'
p1125
I53
sa(dp1126
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM5_02_orig.jpg'
p1127
sS'trials.thisIndex'
p1128
g47
(g588
S'6\x00\x00\x00\x00\x00\x00\x00'
tRp1129
sS'trials.thisRepN'
p1130
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xb03\xc0'
tRp1131
sg29
g47
(g49
S'\x00\x00\x00\x00\x00Y @'
tRp1132
sg30
I1
sg60
g47
(g588
S'6\x00\x00\x00\x00\x00\x00\x00'
tRp1133
sS'trials.thisTrialN'
p1134
I54
sg32
I0
sg41
g42
sg45
V8
sg33
F0.93749403953552246
sS'trials.thisN'
p1135
I54
sa(dp1136
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM6_00_orig.jpg'
p1137
sS'trials.thisIndex'
p1138
g47
(g588
S'7\x00\x00\x00\x00\x00\x00\x00'
tRp1139
sS'trials.thisRepN'
p1140
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xb03\xc0'
tRp1141
sg29
g47
(g49
S'\x00\x00\x00\x00\x00h @'
tRp1142
sg30
I0
sg60
g47
(g588
S'7\x00\x00\x00\x00\x00\x00\x00'
tRp1143
sS'trials.thisTrialN'
p1144
I55
sg32
I1
sg41
g42
sg45
V8
sg33
F1.2894339561462402
sS'trials.thisN'
p1145
I55
sa(dp1146
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM3_07_orig.jpg'
p1147
sS'trials.thisIndex'
p1148
g47
(g588
S'8\x00\x00\x00\x00\x00\x00\x00'
tRp1149
sS'trials.thisRepN'
p1150
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xb03\xc0'
tRp1151
sg29
g47
(g49
S'\x00\x00\x00\x00\x00h @'
tRp1152
sg30
I1
sg60
g47
(g588
S'8\x00\x00\x00\x00\x00\x00\x00'
tRp1153
sS'trials.thisTrialN'
p1154
I56
sg32
I0
sg41
g42
sg45
V8
sg33
F1.253889799118042
sS'trials.thisN'
p1155
I56
sa(dp1156
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF3_05_orig.jpg'
p1157
sS'trials.thisIndex'
p1158
g47
(g588
S'9\x00\x00\x00\x00\x00\x00\x00'
tRp1159
sS'trials.thisRepN'
p1160
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80\xb73\xc0'
tRp1161
sg29
g47
(g49
S'\x00\x00\x00\x00\x00Y @'
tRp1162
sg30
I0
sg60
g47
(g588
S'9\x00\x00\x00\x00\x00\x00\x00'
tRp1163
sS'trials.thisTrialN'
p1164
I57
sg32
I1
sg41
g42
sg45
V8
sg33
F1.0542929172515869
sS'trials.thisN'
p1165
I57
sa(dp1166
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM3_06_orig.jpg'
p1167
sS'trials.thisIndex'
p1168
g47
(g588
S':\x00\x00\x00\x00\x00\x00\x00'
tRp1169
sS'trials.thisRepN'
p1170
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80\xb73\xc0'
tRp1171
sg29
g47
(g49
S'\x00\x00\x00\x00\x00J @'
tRp1172
sg30
I1
sg60
g47
(g588
S':\x00\x00\x00\x00\x00\x00\x00'
tRp1173
sS'trials.thisTrialN'
p1174
I58
sg32
I0
sg41
g42
sg45
V8
sg33
F0.75129199028015137
sS'trials.thisN'
p1175
I58
sa(dp1176
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF10_06_orig.jpg'
p1177
sS'trials.thisIndex'
p1178
g47
(g588
S';\x00\x00\x00\x00\x00\x00\x00'
tRp1179
sS'trials.thisRepN'
p1180
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80\xa83\xc0'
tRp1181
sg29
g47
(g49
S'\x00\x00\x00\x00\x00J @'
tRp1182
sg30
I0
sg60
g47
(g588
S';\x00\x00\x00\x00\x00\x00\x00'
tRp1183
sS'trials.thisTrialN'
p1184
I59
sg32
I1
sg41
g42
sg45
V8
sg33
F1.3898189067840576
sS'trials.thisN'
p1185
I59
sa(dp1186
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF1_10_orig.jpg'
p1187
sS'trials.thisIndex'
p1188
g47
(g588
S'<\x00\x00\x00\x00\x00\x00\x00'
tRp1189
sS'trials.thisRepN'
p1190
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xa13\xc0'
tRp1191
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x1d @'
tRp1192
sg30
I1
sg60
g47
(g588
S'<\x00\x00\x00\x00\x00\x00\x00'
tRp1193
sS'trials.thisTrialN'
p1194
I60
sg32
I0
sg41
g42
sg45
V8
sg33
F3.3507809638977051
sS'trials.thisN'
p1195
I60
sa(dp1196
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM4_09_orig.jpg'
p1197
sS'trials.thisIndex'
p1198
g47
(g588
S'=\x00\x00\x00\x00\x00\x00\x00'
tRp1199
sS'trials.thisRepN'
p1200
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xa13\xc0'
tRp1201
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x1d @'
tRp1202
sg30
I1
sg60
g47
(g588
S'=\x00\x00\x00\x00\x00\x00\x00'
tRp1203
sS'trials.thisTrialN'
p1204
I61
sg32
I0
sg41
g42
sg45
V8
sg33
F0.85400199890136719
sS'trials.thisN'
p1205
I61
sa(dp1206
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF5_07_orig.jpg'
p1207
sS'trials.thisIndex'
p1208
g47
(g588
S'>\x00\x00\x00\x00\x00\x00\x00'
tRp1209
sS'trials.thisRepN'
p1210
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xa13\xc0'
tRp1211
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x1d @'
tRp1212
sg30
I0
sg60
g47
(g588
S'>\x00\x00\x00\x00\x00\x00\x00'
tRp1213
sS'trials.thisTrialN'
p1214
I62
sg32
I1
sg41
g42
sg45
V8
sg33
F1.1190521717071533
sS'trials.thisN'
p1215
I62
sa(dp1216
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM10_02_orig.jpg'
p1217
sS'trials.thisIndex'
p1218
g47
(g588
S'?\x00\x00\x00\x00\x00\x00\x00'
tRp1219
sS'trials.thisRepN'
p1220
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x923\xc0'
tRp1221
sg29
g47
(g49
S'\x00\x00\x00\x00\x00, @'
tRp1222
sg30
I0
sg60
g47
(g588
S'?\x00\x00\x00\x00\x00\x00\x00'
tRp1223
sS'trials.thisTrialN'
p1224
I63
sg32
I1
sg41
g42
sg45
V8
sg33
F1.2715590000152588
sS'trials.thisN'
p1225
I63
sa(dp1226
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF1_02_orig.jpg'
p1227
sS'trials.thisIndex'
p1228
g47
(g588
S'@\x00\x00\x00\x00\x00\x00\x00'
tRp1229
sS'trials.thisRepN'
p1230
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80\x8a3\xc0'
tRp1231
sg29
g47
(g49
S'\x00\x00\x00\x00\x00; @'
tRp1232
sg30
I0
sg60
g47
(g588
S'@\x00\x00\x00\x00\x00\x00\x00'
tRp1233
sS'trials.thisTrialN'
p1234
I64
sg32
I1
sg41
g42
sg45
V8
sg33
F0.71946597099304199
sS'trials.thisN'
p1235
I64
sa(dp1236
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM9_02_orig.jpg'
p1237
sS'trials.thisIndex'
p1238
g47
(g588
S'A\x00\x00\x00\x00\x00\x00\x00'
tRp1239
sS'trials.thisRepN'
p1240
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80\x8a3\xc0'
tRp1241
sg29
g47
(g49
S'\x00\x00\x00\x00\x00J @'
tRp1242
sg30
I0
sg60
g47
(g588
S'A\x00\x00\x00\x00\x00\x00\x00'
tRp1243
sS'trials.thisTrialN'
p1244
I65
sg32
I1
sg41
g42
sg45
V8
sg33
F1.6749269962310791
sS'trials.thisN'
p1245
I65
sa(dp1246
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF4_01_orig.jpg'
p1247
sS'trials.thisIndex'
p1248
g47
(g588
S'B\x00\x00\x00\x00\x00\x00\x00'
tRp1249
sS'trials.thisRepN'
p1250
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80\x8a3\xc0'
tRp1251
sg29
g47
(g49
S'\x00\x00\x00\x00\x00J @'
tRp1252
sg30
I0
sg60
g47
(g588
S'B\x00\x00\x00\x00\x00\x00\x00'
tRp1253
sS'trials.thisTrialN'
p1254
I66
sg32
I1
sg41
g42
sg45
V8
sg33
F0.53562402725219727
sS'trials.thisN'
p1255
I66
sa(dp1256
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM6_03_orig.jpg'
p1257
sS'trials.thisIndex'
p1258
g47
(g588
S'C\x00\x00\x00\x00\x00\x00\x00'
tRp1259
sS'trials.thisRepN'
p1260
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x833\xc0'
tRp1261
sg29
g47
(g49
S'\x00\x00\x00\x00\x00h @'
tRp1262
sg30
I0
sg60
g47
(g588
S'C\x00\x00\x00\x00\x00\x00\x00'
tRp1263
sS'trials.thisTrialN'
p1264
I67
sg32
I1
sg41
g42
sg45
V8
sg33
F0.83606100082397461
sS'trials.thisN'
p1265
I67
sa(dp1266
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM4_06_orig.jpg'
p1267
sS'trials.thisIndex'
p1268
g47
(g588
S'D\x00\x00\x00\x00\x00\x00\x00'
tRp1269
sS'trials.thisRepN'
p1270
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80{3\xc0'
tRp1271
sg29
g47
(g49
S'\x00\x00\x00\x00\x00Y @'
tRp1272
sg30
I1
sg60
g47
(g588
S'D\x00\x00\x00\x00\x00\x00\x00'
tRp1273
sS'trials.thisTrialN'
p1274
I68
sg32
I0
sg41
g42
sg45
V8
sg33
F0.88525795936584473
sS'trials.thisN'
p1275
I68
sa(dp1276
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF6_05_orig.jpg'
p1277
sS'trials.thisIndex'
p1278
g47
(g588
S'E\x00\x00\x00\x00\x00\x00\x00'
tRp1279
sS'trials.thisRepN'
p1280
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00t3\xc0'
tRp1281
sg29
g47
(g49
S'\x00\x00\x00\x00\x00Y @'
tRp1282
sg30
I0
sg60
g47
(g588
S'E\x00\x00\x00\x00\x00\x00\x00'
tRp1283
sS'trials.thisTrialN'
p1284
I69
sg32
I1
sg41
g42
sg45
V8
sg33
F1.1037020683288574
sS'trials.thisN'
p1285
I69
sa(dp1286
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF5_04_orig.jpg'
p1287
sS'trials.thisIndex'
p1288
g47
(g588
S'F\x00\x00\x00\x00\x00\x00\x00'
tRp1289
sS'trials.thisRepN'
p1290
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00e3\xc0'
tRp1291
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x1d @'
tRp1292
sg30
I0
sg60
g47
(g588
S'F\x00\x00\x00\x00\x00\x00\x00'
tRp1293
sS'trials.thisTrialN'
p1294
I70
sg32
I1
sg41
g42
sg45
V8
sg33
F1.4394910335540771
sS'trials.thisN'
p1295
I70
sa(dp1296
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM3_10_orig.jpg'
p1297
sS'trials.thisIndex'
p1298
g47
(g588
S'G\x00\x00\x00\x00\x00\x00\x00'
tRp1299
sS'trials.thisRepN'
p1300
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80l3\xc0'
tRp1301
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x1d @'
tRp1302
sg30
I1
sg60
g47
(g588
S'G\x00\x00\x00\x00\x00\x00\x00'
tRp1303
sS'trials.thisTrialN'
p1304
I71
sg32
I0
sg41
g42
sg45
V8
sg33
F0.91965818405151367
sS'trials.thisN'
p1305
I71
sa(dp1306
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF10_04_orig.jpg'
p1307
sS'trials.thisIndex'
p1308
g47
(g588
S'H\x00\x00\x00\x00\x00\x00\x00'
tRp1309
sS'trials.thisRepN'
p1310
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00t3\xc0'
tRp1311
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xfe\x1f@'
tRp1312
sg30
I0
sg60
g47
(g588
S'H\x00\x00\x00\x00\x00\x00\x00'
tRp1313
sS'trials.thisTrialN'
p1314
I72
sg32
I1
sg41
g42
sg45
V8
sg33
F3.4346189498901367
sS'trials.thisN'
p1315
I72
sa(dp1316
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF6_00_orig.jpg'
p1317
sS'trials.thisIndex'
p1318
g47
(g588
S'I\x00\x00\x00\x00\x00\x00\x00'
tRp1319
sS'trials.thisRepN'
p1320
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80{3\xc0'
tRp1321
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xc2\x1f@'
tRp1322
sg30
I0
sg60
g47
(g588
S'I\x00\x00\x00\x00\x00\x00\x00'
tRp1323
sS'trials.thisTrialN'
p1324
I73
sg32
I1
sg41
g42
sg45
V8
sg33
F0.81986188888549805
sS'trials.thisN'
p1325
I73
sa(dp1326
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM8_04_orig.jpg'
p1327
sS'trials.thisIndex'
p1328
g47
(g588
S'J\x00\x00\x00\x00\x00\x00\x00'
tRp1329
sS'trials.thisRepN'
p1330
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80l3\xc0'
tRp1331
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xfe\x1f@'
tRp1332
sg30
I0
sg60
g47
(g588
S'J\x00\x00\x00\x00\x00\x00\x00'
tRp1333
sS'trials.thisTrialN'
p1334
I74
sg32
I1
sg41
g42
sg45
V8
sg33
F2.2276668548583984
sS'trials.thisN'
p1335
I74
sa(dp1336
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF1_09_orig.jpg'
p1337
sS'trials.thisIndex'
p1338
g47
(g588
S'K\x00\x00\x00\x00\x00\x00\x00'
tRp1339
sS'trials.thisRepN'
p1340
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80l3\xc0'
tRp1341
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xe0\x1f@'
tRp1342
sg30
I0
sg60
g47
(g588
S'K\x00\x00\x00\x00\x00\x00\x00'
tRp1343
sS'trials.thisTrialN'
p1344
I75
sg32
I1
sg41
g42
sg45
V8
sg33
F2.2773518562316895
sS'trials.thisN'
p1345
I75
sa(dp1346
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM7_09_orig.jpg'
p1347
sS'trials.thisIndex'
p1348
g47
(g588
S'L\x00\x00\x00\x00\x00\x00\x00'
tRp1349
sS'trials.thisRepN'
p1350
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00t3\xc0'
tRp1351
sg29
g47
(g49
S'\x00\x00\x00\x00\x00, @'
tRp1352
sg30
I1
sg60
g47
(g588
S'L\x00\x00\x00\x00\x00\x00\x00'
tRp1353
sS'trials.thisTrialN'
p1354
I76
sg32
I0
sg41
g42
sg45
V8
sg33
F0.70303821563720703
sS'trials.thisN'
p1355
I76
sa(dp1356
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM8_10_orig.jpg'
p1357
sS'trials.thisIndex'
p1358
g47
(g588
S'M\x00\x00\x00\x00\x00\x00\x00'
tRp1359
sS'trials.thisRepN'
p1360
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00t3\xc0'
tRp1361
sg29
g47
(g49
S'\x00\x00\x00\x00\x00, @'
tRp1362
sg30
I1
sg60
g47
(g588
S'M\x00\x00\x00\x00\x00\x00\x00'
tRp1363
sS'trials.thisTrialN'
p1364
I77
sg32
I0
sg41
g42
sg45
V8
sg33
F2.2612030506134033
sS'trials.thisN'
p1365
I77
sa(dp1366
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF5_09_orig.jpg'
p1367
sS'trials.thisIndex'
p1368
g47
(g588
S'N\x00\x00\x00\x00\x00\x00\x00'
tRp1369
sS'trials.thisRepN'
p1370
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00t3\xc0'
tRp1371
sg29
g47
(g49
S'\x00\x00\x00\x00\x00, @'
tRp1372
sg30
I1
sg60
g47
(g588
S'N\x00\x00\x00\x00\x00\x00\x00'
tRp1373
sS'trials.thisTrialN'
p1374
I78
sg32
I0
sg41
g42
sg45
V8
sg33
F1.3558290004730225
sS'trials.thisN'
p1375
I78
sa(dp1376
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM5_05_orig.jpg'
p1377
sS'trials.thisIndex'
p1378
g47
(g588
S'O\x00\x00\x00\x00\x00\x00\x00'
tRp1379
sS'trials.thisRepN'
p1380
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00t3\xc0'
tRp1381
sg29
g47
(g49
S'\x00\x00\x00\x00\x00, @'
tRp1382
sg30
I1
sg60
g47
(g588
S'O\x00\x00\x00\x00\x00\x00\x00'
tRp1383
sS'trials.thisTrialN'
p1384
I79
sg32
I0
sg41
g42
sg45
V8
sg33
F1.2729640007019043
sS'trials.thisN'
p1385
I79
sa(dp1386
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM10_01_orig.jpg'
p1387
sS'trials.thisIndex'
p1388
g47
(g588
S'P\x00\x00\x00\x00\x00\x00\x00'
tRp1389
sS'trials.thisRepN'
p1390
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00t3\xc0'
tRp1391
sg29
g47
(g49
S'\x00\x00\x00\x00\x00, @'
tRp1392
sg30
I0
sg60
g47
(g588
S'P\x00\x00\x00\x00\x00\x00\x00'
tRp1393
sS'trials.thisTrialN'
p1394
I80
sg32
I1
sg41
g42
sg45
V8
sg33
F0.73677706718444824
sS'trials.thisN'
p1395
I80
sa(dp1396
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF1_04_orig.jpg'
p1397
sS'trials.thisIndex'
p1398
g47
(g588
S'Q\x00\x00\x00\x00\x00\x00\x00'
tRp1399
sS'trials.thisRepN'
p1400
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80{3\xc0'
tRp1401
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x0e @'
tRp1402
sg30
I0
sg60
g47
(g588
S'Q\x00\x00\x00\x00\x00\x00\x00'
tRp1403
sS'trials.thisTrialN'
p1404
I81
sg32
I1
sg41
g42
sg45
V8
sg33
F0.98714780807495117
sS'trials.thisN'
p1405
I81
sa(dp1406
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM7_05_orig.jpg'
p1407
sS'trials.thisIndex'
p1408
g47
(g588
S'R\x00\x00\x00\x00\x00\x00\x00'
tRp1409
sS'trials.thisRepN'
p1410
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80{3\xc0'
tRp1411
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x0e @'
tRp1412
sg30
I1
sg60
g47
(g588
S'R\x00\x00\x00\x00\x00\x00\x00'
tRp1413
sS'trials.thisTrialN'
p1414
I82
sg32
I0
sg41
g42
sg45
V8
sg33
F0.86947894096374512
sS'trials.thisN'
p1415
I82
sa(dp1416
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM9_04_orig.jpg'
p1417
sS'trials.thisIndex'
p1418
g47
(g588
S'S\x00\x00\x00\x00\x00\x00\x00'
tRp1419
sS'trials.thisRepN'
p1420
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80{3\xc0'
tRp1421
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x0e @'
tRp1422
sg30
I0
sg60
g47
(g588
S'S\x00\x00\x00\x00\x00\x00\x00'
tRp1423
sS'trials.thisTrialN'
p1424
I83
sg32
I1
sg41
g42
sg45
V8
sg33
F1.1720609664916992
sS'trials.thisN'
p1425
I83
sa(dp1426
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM6_06_orig.jpg'
p1427
sS'trials.thisIndex'
p1428
g47
(g588
S'T\x00\x00\x00\x00\x00\x00\x00'
tRp1429
sS'trials.thisRepN'
p1430
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80{3\xc0'
tRp1431
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x0e @'
tRp1432
sg30
I0
sg60
g47
(g588
S'T\x00\x00\x00\x00\x00\x00\x00'
tRp1433
sS'trials.thisTrialN'
p1434
I84
sg32
I1
sg41
g42
sg45
V8
sg33
F0.81952285766601562
sS'trials.thisN'
p1435
I84
sa(dp1436
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM9_09_orig.jpg'
p1437
sS'trials.thisIndex'
p1438
g47
(g588
S'U\x00\x00\x00\x00\x00\x00\x00'
tRp1439
sS'trials.thisRepN'
p1440
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80{3\xc0'
tRp1441
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x0e @'
tRp1442
sg30
I1
sg60
g47
(g588
S'U\x00\x00\x00\x00\x00\x00\x00'
tRp1443
sS'trials.thisTrialN'
p1444
I85
sg32
I0
sg41
g42
sg45
V8
sg33
F0.93738198280334473
sS'trials.thisN'
p1445
I85
sa(dp1446
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF5_05_orig.jpg'
p1447
sS'trials.thisIndex'
p1448
g47
(g588
S'V\x00\x00\x00\x00\x00\x00\x00'
tRp1449
sS'trials.thisRepN'
p1450
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x833\xc0'
tRp1451
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x1d @'
tRp1452
sg30
I0
sg60
g47
(g588
S'V\x00\x00\x00\x00\x00\x00\x00'
tRp1453
sS'trials.thisTrialN'
p1454
I86
sg32
I1
sg41
g42
sg45
V8
sg33
F2.6134450435638428
sS'trials.thisN'
p1455
I86
sa(dp1456
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF8_01_orig.jpg'
p1457
sS'trials.thisIndex'
p1458
g47
(g588
S'W\x00\x00\x00\x00\x00\x00\x00'
tRp1459
sS'trials.thisRepN'
p1460
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00t3\xc0'
tRp1461
sg29
g47
(g49
S'\x00\x00\x00\x00\x00w @'
tRp1462
sg30
I0
sg60
g47
(g588
S'W\x00\x00\x00\x00\x00\x00\x00'
tRp1463
sS'trials.thisTrialN'
p1464
I87
sg32
I1
sg41
g42
sg45
V8
sg33
F2.9311020374298096
sS'trials.thisN'
p1465
I87
sa(dp1466
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM3_03_orig.jpg'
p1467
sS'trials.thisIndex'
p1468
g47
(g588
S'X\x00\x00\x00\x00\x00\x00\x00'
tRp1469
sS'trials.thisRepN'
p1470
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00t3\xc0'
tRp1471
sg29
g47
(g49
S'\x00\x00\x00\x00\x00w @'
tRp1472
sg30
I1
sg60
g47
(g588
S'X\x00\x00\x00\x00\x00\x00\x00'
tRp1473
sS'trials.thisTrialN'
p1474
I88
sg32
I0
sg41
g42
sg45
V8
sg33
F1.1044790744781494
sS'trials.thisN'
p1475
I88
sa(dp1476
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF4_06_orig.jpg'
p1477
sS'trials.thisIndex'
p1478
g47
(g588
S'Y\x00\x00\x00\x00\x00\x00\x00'
tRp1479
sS'trials.thisRepN'
p1480
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00t3\xc0'
tRp1481
sg29
g47
(g49
S'\x00\x00\x00\x00\x00w @'
tRp1482
sg30
I0
sg60
g47
(g588
S'Y\x00\x00\x00\x00\x00\x00\x00'
tRp1483
sS'trials.thisTrialN'
p1484
I89
sg32
I1
sg41
g42
sg45
V8
sg33
F0.7361149787902832
sS'trials.thisN'
p1485
I89
sa(dp1486
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF6_07_orig.jpg'
p1487
sS'trials.thisIndex'
p1488
g47
(g588
S'Z\x00\x00\x00\x00\x00\x00\x00'
tRp1489
sS'trials.thisRepN'
p1490
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80{3\xc0'
tRp1491
sg29
g47
(g49
S'\x00\x00\x00\x00\x00Y @'
tRp1492
sg30
I0
sg60
g47
(g588
S'Z\x00\x00\x00\x00\x00\x00\x00'
tRp1493
sS'trials.thisTrialN'
p1494
I90
sg32
I1
sg41
g42
sg45
V8
sg33
F0.77015900611877441
sS'trials.thisN'
p1495
I90
sa(dp1496
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF7_07_orig.jpg'
p1497
sS'trials.thisIndex'
p1498
g47
(g588
S'[\x00\x00\x00\x00\x00\x00\x00'
tRp1499
sS'trials.thisRepN'
p1500
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80{3\xc0'
tRp1501
sg29
g47
(g49
S'\x00\x00\x00\x00\x00Y @'
tRp1502
sg30
I0
sg60
g47
(g588
S'[\x00\x00\x00\x00\x00\x00\x00'
tRp1503
sS'trials.thisTrialN'
p1504
I91
sg32
I1
sg41
g42
sg45
V8
sg33
F3.4843621253967285
sS'trials.thisN'
p1505
I91
sa(dp1506
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF8_07_orig.jpg'
p1507
sS'trials.thisIndex'
p1508
g47
(g588
S'\\\x00\x00\x00\x00\x00\x00\x00'
tRp1509
sS'trials.thisRepN'
p1510
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x833\xc0'
tRp1511
sg29
g47
(g49
S'\x00\x00\x00\x00\x00J @'
tRp1512
sg30
I0
sg60
g47
(g588
S'\\\x00\x00\x00\x00\x00\x00\x00'
tRp1513
sS'trials.thisTrialN'
p1514
I92
sg32
I1
sg41
g42
sg45
V8
sg33
F0.6357879638671875
sS'trials.thisN'
p1515
I92
sa(dp1516
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM9_01_orig.jpg'
p1517
sS'trials.thisIndex'
p1518
g47
(g588
S']\x00\x00\x00\x00\x00\x00\x00'
tRp1519
sS'trials.thisRepN'
p1520
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x923\xc0'
tRp1521
sg29
g47
(g49
S'\x00\x00\x00\x00\x00, @'
tRp1522
sg30
I0
sg60
g47
(g588
S']\x00\x00\x00\x00\x00\x00\x00'
tRp1523
sS'trials.thisTrialN'
p1524
I93
sg32
I1
sg41
g42
sg45
V8
sg33
F1.6895380020141602
sS'trials.thisN'
p1525
I93
sa(dp1526
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF1_08_orig.jpg'
p1527
sS'trials.thisIndex'
p1528
g47
(g588
S'^\x00\x00\x00\x00\x00\x00\x00'
tRp1529
sS'trials.thisRepN'
p1530
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x923\xc0'
tRp1531
sg29
g47
(g49
S'\x00\x00\x00\x00\x00, @'
tRp1532
sg30
I0
sg60
g47
(g588
S'^\x00\x00\x00\x00\x00\x00\x00'
tRp1533
sS'trials.thisTrialN'
p1534
I94
sg32
I1
sg41
g42
sg45
V8
sg33
F0.82015609741210938
sS'trials.thisN'
p1535
I94
sa(dp1536
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF4_04_orig.jpg'
p1537
sS'trials.thisIndex'
p1538
g47
(g588
S'_\x00\x00\x00\x00\x00\x00\x00'
tRp1539
sS'trials.thisRepN'
p1540
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80\x993\xc0'
tRp1541
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x1d @'
tRp1542
sg30
I0
sg60
g47
(g588
S'_\x00\x00\x00\x00\x00\x00\x00'
tRp1543
sS'trials.thisTrialN'
p1544
I95
sg32
I1
sg41
g42
sg45
V8
sg33
F0.70277309417724609
sS'trials.thisN'
p1545
I95
sa(dp1546
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM6_02_orig.jpg'
p1547
sS'trials.thisIndex'
p1548
g47
(g588
S'`\x00\x00\x00\x00\x00\x00\x00'
tRp1549
sS'trials.thisRepN'
p1550
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80\x993\xc0'
tRp1551
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x1d @'
tRp1552
sg30
I0
sg60
g47
(g588
S'`\x00\x00\x00\x00\x00\x00\x00'
tRp1553
sS'trials.thisTrialN'
p1554
I96
sg32
I1
sg41
g42
sg45
V8
sg33
F4.22235107421875
sS'trials.thisN'
p1555
I96
sa(dp1556
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM5_10_orig.jpg'
p1557
sS'trials.thisIndex'
p1558
g47
(g588
S'a\x00\x00\x00\x00\x00\x00\x00'
tRp1559
sS'trials.thisRepN'
p1560
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80\x8a3\xc0'
tRp1561
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x1d @'
tRp1562
sg30
I1
sg60
g47
(g588
S'a\x00\x00\x00\x00\x00\x00\x00'
tRp1563
sS'trials.thisTrialN'
p1564
I97
sg32
I0
sg41
g42
sg45
V8
sg33
F0.90289592742919922
sS'trials.thisN'
p1565
I97
sa(dp1566
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF3_06_orig.jpg'
p1567
sS'trials.thisIndex'
p1568
g47
(g588
S'b\x00\x00\x00\x00\x00\x00\x00'
tRp1569
sS'trials.thisRepN'
p1570
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80\x8a3\xc0'
tRp1571
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x1d @'
tRp1572
sg30
I0
sg60
g47
(g588
S'b\x00\x00\x00\x00\x00\x00\x00'
tRp1573
sS'trials.thisTrialN'
p1574
I98
sg32
I1
sg41
g42
sg45
V8
sg33
F1.0543529987335205
sS'trials.thisN'
p1575
I98
sa(dp1576
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF10_01_orig.jpg'
p1577
sS'trials.thisIndex'
p1578
g47
(g588
S'c\x00\x00\x00\x00\x00\x00\x00'
tRp1579
sS'trials.thisRepN'
p1580
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x833\xc0'
tRp1581
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x0e @'
tRp1582
sg30
I0
sg60
g47
(g588
S'c\x00\x00\x00\x00\x00\x00\x00'
tRp1583
sS'trials.thisTrialN'
p1584
I99
sg32
I1
sg41
g42
sg45
V8
sg33
F2.6636009216308594
sS'trials.thisN'
p1585
I99
sa(dp1586
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM4_02_orig.jpg'
p1587
sS'trials.thisIndex'
p1588
g47
(g588
S'd\x00\x00\x00\x00\x00\x00\x00'
tRp1589
sS'trials.thisRepN'
p1590
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00t3\xc0'
tRp1591
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xfe\x1f@'
tRp1592
sg30
I1
sg60
g47
(g588
S'd\x00\x00\x00\x00\x00\x00\x00'
tRp1593
sS'trials.thisTrialN'
p1594
I100
sg32
I0
sg41
g42
sg45
V8
sg33
F5.4460551738739014
sS'trials.thisN'
p1595
I100
sa(dp1596
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM1_07_orig.jpg'
p1597
sS'trials.thisIndex'
p1598
g47
(g588
S'e\x00\x00\x00\x00\x00\x00\x00'
tRp1599
sS'trials.thisRepN'
p1600
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00t3\xc0'
tRp1601
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xfe\x1f@'
tRp1602
sg30
I1
sg60
g47
(g588
S'e\x00\x00\x00\x00\x00\x00\x00'
tRp1603
sS'trials.thisTrialN'
p1604
I101
sg32
I0
sg41
g42
sg45
V8
sg33
F0.71870303153991699
sS'trials.thisN'
p1605
I101
sa(dp1606
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM4_00_orig.jpg'
p1607
sS'trials.thisIndex'
p1608
g47
(g588
S'f\x00\x00\x00\x00\x00\x00\x00'
tRp1609
sS'trials.thisRepN'
p1610
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00t3\xc0'
tRp1611
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xfe\x1f@'
tRp1612
sg30
I1
sg60
g47
(g588
S'f\x00\x00\x00\x00\x00\x00\x00'
tRp1613
sS'trials.thisTrialN'
p1614
I102
sg32
I0
sg41
g42
sg45
V8
sg33
F0.86993408203125
sS'trials.thisN'
p1615
I102
sa(dp1616
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF6_09_orig.jpg'
p1617
sS'trials.thisIndex'
p1618
g47
(g588
S'g\x00\x00\x00\x00\x00\x00\x00'
tRp1619
sS'trials.thisRepN'
p1620
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00t3\xc0'
tRp1621
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xfe\x1f@'
tRp1622
sg30
I0
sg60
g47
(g588
S'g\x00\x00\x00\x00\x00\x00\x00'
tRp1623
sS'trials.thisTrialN'
p1624
I103
sg32
I1
sg41
g42
sg45
V8
sg33
F0.5852210521697998
sS'trials.thisN'
p1625
I103
sa(dp1626
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM7_08_orig.jpg'
p1627
sS'trials.thisIndex'
p1628
g47
(g588
S'h\x00\x00\x00\x00\x00\x00\x00'
tRp1629
sS'trials.thisRepN'
p1630
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80l3\xc0'
tRp1631
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xe0\x1f@'
tRp1632
sg30
I1
sg60
g47
(g588
S'h\x00\x00\x00\x00\x00\x00\x00'
tRp1633
sS'trials.thisTrialN'
p1634
I104
sg32
I0
sg41
g42
sg45
V8
sg33
F0.75283002853393555
sS'trials.thisN'
p1635
I104
sa(dp1636
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF3_02_orig.jpg'
p1637
sS'trials.thisIndex'
p1638
g47
(g588
S'i\x00\x00\x00\x00\x00\x00\x00'
tRp1639
sS'trials.thisRepN'
p1640
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80l3\xc0'
tRp1641
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xe0\x1f@'
tRp1642
sg30
I0
sg60
g47
(g588
S'i\x00\x00\x00\x00\x00\x00\x00'
tRp1643
sS'trials.thisTrialN'
p1644
I105
sg32
I1
sg41
g42
sg45
V8
sg33
F0.78639984130859375
sS'trials.thisN'
p1645
I105
sa(dp1646
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM2_06_orig.jpg'
p1647
sS'trials.thisIndex'
p1648
g47
(g588
S'j\x00\x00\x00\x00\x00\x00\x00'
tRp1649
sS'trials.thisRepN'
p1650
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80l3\xc0'
tRp1651
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xe0\x1f@'
tRp1652
sg30
I0
sg60
g47
(g588
S'j\x00\x00\x00\x00\x00\x00\x00'
tRp1653
sS'trials.thisTrialN'
p1654
I106
sg32
I1
sg41
g42
sg45
V8
sg33
F0.90398693084716797
sS'trials.thisN'
p1655
I106
sa(dp1656
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF6_04_orig.jpg'
p1657
sS'trials.thisIndex'
p1658
g47
(g588
S'k\x00\x00\x00\x00\x00\x00\x00'
tRp1659
sS'trials.thisRepN'
p1660
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00t3\xc0'
tRp1661
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xc2\x1f@'
tRp1662
sg30
I0
sg60
g47
(g588
S'k\x00\x00\x00\x00\x00\x00\x00'
tRp1663
sS'trials.thisTrialN'
p1664
I107
sg32
I1
sg41
g42
sg45
V8
sg33
F0.68457603454589844
sS'trials.thisN'
p1665
I107
sa(dp1666
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF7_04_orig.jpg'
p1667
sS'trials.thisIndex'
p1668
g47
(g588
S'l\x00\x00\x00\x00\x00\x00\x00'
tRp1669
sS'trials.thisRepN'
p1670
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00t3\xc0'
tRp1671
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xc2\x1f@'
tRp1672
sg30
I0
sg60
g47
(g588
S'l\x00\x00\x00\x00\x00\x00\x00'
tRp1673
sS'trials.thisTrialN'
p1674
I108
sg32
I1
sg41
g42
sg45
V8
sg33
F0.58521103858947754
sS'trials.thisN'
p1675
I108
sa(dp1676
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM1_02_orig.jpg'
p1677
sS'trials.thisIndex'
p1678
g47
(g588
S'm\x00\x00\x00\x00\x00\x00\x00'
tRp1679
sS'trials.thisRepN'
p1680
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00t3\xc0'
tRp1681
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xc2\x1f@'
tRp1682
sg30
I0
sg60
g47
(g588
S'm\x00\x00\x00\x00\x00\x00\x00'
tRp1683
sS'trials.thisTrialN'
p1684
I109
sg32
I1
sg41
g42
sg45
V8
sg33
F1.624521017074585
sS'trials.thisN'
p1685
I109
sa(dp1686
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM5_03_orig.jpg'
p1687
sS'trials.thisIndex'
p1688
g47
(g588
S'n\x00\x00\x00\x00\x00\x00\x00'
tRp1689
sS'trials.thisRepN'
p1690
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00t3\xc0'
tRp1691
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xc2\x1f@'
tRp1692
sg30
I1
sg60
g47
(g588
S'n\x00\x00\x00\x00\x00\x00\x00'
tRp1693
sS'trials.thisTrialN'
p1694
I110
sg32
I0
sg41
g42
sg45
V8
sg33
F0.87058806419372559
sS'trials.thisN'
p1695
I110
sa(dp1696
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF6_10_orig.jpg'
p1697
sS'trials.thisIndex'
p1698
g47
(g588
S'o\x00\x00\x00\x00\x00\x00\x00'
tRp1699
sS'trials.thisRepN'
p1700
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80l3\xc0'
tRp1701
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xfe\x1f@'
tRp1702
sg30
I0
sg60
g47
(g588
S'o\x00\x00\x00\x00\x00\x00\x00'
tRp1703
sS'trials.thisTrialN'
p1704
I111
sg32
I1
sg41
g42
sg45
V8
sg33
F1.741814136505127
sS'trials.thisN'
p1705
I111
sa(dp1706
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF2_01_orig.jpg'
p1707
sS'trials.thisIndex'
p1708
g47
(g588
S'p\x00\x00\x00\x00\x00\x00\x00'
tRp1709
sS'trials.thisRepN'
p1710
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80!3\xc0'
tRp1711
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x0e @'
tRp1712
sg30
I0
sg60
g47
(g588
S'p\x00\x00\x00\x00\x00\x00\x00'
tRp1713
sS'trials.thisTrialN'
p1714
I112
sg32
I1
sg41
g42
sg45
V8
sg33
F0.60204505920410156
sS'trials.thisN'
p1715
I112
sa(dp1716
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM6_09_orig.jpg'
p1717
sS'trials.thisIndex'
p1718
g47
(g588
S'q\x00\x00\x00\x00\x00\x00\x00'
tRp1719
sS'trials.thisRepN'
p1720
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xcf2\xc0'
tRp1721
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xc2\x1f@'
tRp1722
sg30
I0
sg60
g47
(g588
S'q\x00\x00\x00\x00\x00\x00\x00'
tRp1723
sS'trials.thisTrialN'
p1724
I113
sg32
I1
sg41
g42
sg45
V8
sg33
F6.7025229930877686
sS'trials.thisN'
p1725
I113
sa(dp1726
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF7_08_orig.jpg'
p1727
sS'trials.thisIndex'
p1728
g47
(g588
S'r\x00\x00\x00\x00\x00\x00\x00'
tRp1729
sS'trials.thisRepN'
p1730
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xcf2\xc0'
tRp1731
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xc2\x1f@'
tRp1732
sg30
I0
sg60
g47
(g588
S'r\x00\x00\x00\x00\x00\x00\x00'
tRp1733
sS'trials.thisTrialN'
p1734
I114
sg32
I1
sg41
g42
sg45
V8
sg33
F0.55145096778869629
sS'trials.thisN'
p1735
I114
sa(dp1736
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF1_07_orig.jpg'
p1737
sS'trials.thisIndex'
p1738
g47
(g588
S's\x00\x00\x00\x00\x00\x00\x00'
tRp1739
sS'trials.thisRepN'
p1740
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xcf2\xc0'
tRp1741
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xc2\x1f@'
tRp1742
sg30
I0
sg60
g47
(g588
S's\x00\x00\x00\x00\x00\x00\x00'
tRp1743
sS'trials.thisTrialN'
p1744
I115
sg32
I1
sg41
g42
sg45
V8
sg33
F1.1219308376312256
sS'trials.thisN'
p1745
I115
sa(dp1746
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM5_09_orig.jpg'
p1747
sS'trials.thisIndex'
p1748
g47
(g588
S't\x00\x00\x00\x00\x00\x00\x00'
tRp1749
sS'trials.thisRepN'
p1750
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xcf2\xc0'
tRp1751
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xc2\x1f@'
tRp1752
sg30
I1
sg60
g47
(g588
S't\x00\x00\x00\x00\x00\x00\x00'
tRp1753
sS'trials.thisTrialN'
p1754
I116
sg32
I0
sg41
g42
sg45
V8
sg33
F0.80414915084838867
sS'trials.thisN'
p1755
I116
sa(dp1756
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF9_02_orig.jpg'
p1757
sS'trials.thisIndex'
p1758
g47
(g588
S'u\x00\x00\x00\x00\x00\x00\x00'
tRp1759
sS'trials.thisRepN'
p1760
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xcf2\xc0'
tRp1761
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xa4\x1f@'
tRp1762
sg30
I0
sg60
g47
(g588
S'u\x00\x00\x00\x00\x00\x00\x00'
tRp1763
sS'trials.thisTrialN'
p1764
I117
sg32
I1
sg41
g42
sg45
V8
sg33
F2.8306808471679688
sS'trials.thisN'
p1765
I117
sa(dp1766
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM9_10_orig.jpg'
p1767
sS'trials.thisIndex'
p1768
g47
(g588
S'v\x00\x00\x00\x00\x00\x00\x00'
tRp1769
sS'trials.thisRepN'
p1770
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xc02\xc0'
tRp1771
sg29
g47
(g49
S'\x00\x00\x00\x00\x00h\x1f@'
tRp1772
sg30
I1
sg60
g47
(g588
S'v\x00\x00\x00\x00\x00\x00\x00'
tRp1773
sS'trials.thisTrialN'
p1774
I118
sg32
I0
sg41
g42
sg45
V8
sg33
F5.6459450721740723
sS'trials.thisN'
p1775
I118
sa(dp1776
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF8_09_orig.jpg'
p1777
sS'trials.thisIndex'
p1778
g47
(g588
S'w\x00\x00\x00\x00\x00\x00\x00'
tRp1779
sS'trials.thisRepN'
p1780
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xc02\xc0'
tRp1781
sg29
g47
(g49
S'\x00\x00\x00\x00\x00h\x1f@'
tRp1782
sg30
I0
sg60
g47
(g588
S'w\x00\x00\x00\x00\x00\x00\x00'
tRp1783
sS'trials.thisTrialN'
p1784
I119
sg32
I1
sg41
g42
sg45
V8
sg33
F0.58539700508117676
sS'trials.thisN'
p1785
I119
sa(dp1786
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM10_09_orig.jpg'
p1787
sS'trials.thisIndex'
p1788
g47
(g588
S'x\x00\x00\x00\x00\x00\x00\x00'
tRp1789
sS'trials.thisRepN'
p1790
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xc02\xc0'
tRp1791
sg29
g47
(g49
S'\x00\x00\x00\x00\x00h\x1f@'
tRp1792
sg30
I1
sg60
g47
(g588
S'x\x00\x00\x00\x00\x00\x00\x00'
tRp1793
sS'trials.thisTrialN'
p1794
I120
sg32
I0
sg41
g42
sg45
V8
sg33
F1.0363399982452393
sS'trials.thisN'
p1795
I120
sa(dp1796
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM3_09_orig.jpg'
p1797
sS'trials.thisIndex'
p1798
g47
(g588
S'y\x00\x00\x00\x00\x00\x00\x00'
tRp1799
sS'trials.thisRepN'
p1800
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xc02\xc0'
tRp1801
sg29
g47
(g49
S'\x00\x00\x00\x00\x00h\x1f@'
tRp1802
sg30
I1
sg60
g47
(g588
S'y\x00\x00\x00\x00\x00\x00\x00'
tRp1803
sS'trials.thisTrialN'
p1804
I121
sg32
I0
sg41
g42
sg45
V8
sg33
F0.66821694374084473
sS'trials.thisN'
p1805
I121
sa(dp1806
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM10_06_orig.jpg'
p1807
sS'trials.thisIndex'
p1808
g47
(g588
S'z\x00\x00\x00\x00\x00\x00\x00'
tRp1809
sS'trials.thisRepN'
p1810
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xc02\xc0'
tRp1811
sg29
g47
(g49
S'\x00\x00\x00\x00\x00h\x1f@'
tRp1812
sg30
I1
sg60
g47
(g588
S'z\x00\x00\x00\x00\x00\x00\x00'
tRp1813
sS'trials.thisTrialN'
p1814
I122
sg32
I0
sg41
g42
sg45
V8
sg33
F0.6352841854095459
sS'trials.thisN'
p1815
I122
sa(dp1816
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM8_02_orig.jpg'
p1817
sS'trials.thisIndex'
p1818
g47
(g588
S'{\x00\x00\x00\x00\x00\x00\x00'
tRp1819
sS'trials.thisRepN'
p1820
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xc02\xc0'
tRp1821
sg29
g47
(g49
S'\x00\x00\x00\x00\x00h\x1f@'
tRp1822
sg30
I0
sg60
g47
(g588
S'{\x00\x00\x00\x00\x00\x00\x00'
tRp1823
sS'trials.thisTrialN'
p1824
I123
sg32
I1
sg41
g42
sg45
V8
sg33
F3.0326359272003174
sS'trials.thisN'
p1825
I123
sa(dp1826
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF10_08_orig.jpg'
p1827
sS'trials.thisIndex'
p1828
g47
(g588
S'|\x00\x00\x00\x00\x00\x00\x00'
tRp1829
sS'trials.thisRepN'
p1830
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xc02\xc0'
tRp1831
sg29
g47
(g49
S'\x00\x00\x00\x00\x00h\x1f@'
tRp1832
sg30
I1
sg60
g47
(g588
S'|\x00\x00\x00\x00\x00\x00\x00'
tRp1833
sS'trials.thisTrialN'
p1834
I124
sg32
I0
sg41
g42
sg45
V8
sg33
F1.253633975982666
sS'trials.thisN'
p1835
I124
sa(dp1836
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM2_08_orig.jpg'
p1837
sS'trials.thisIndex'
p1838
g47
(g588
S'}\x00\x00\x00\x00\x00\x00\x00'
tRp1839
sS'trials.thisRepN'
p1840
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xc02\xc0'
tRp1841
sg29
g47
(g49
S'\x00\x00\x00\x00\x00h\x1f@'
tRp1842
sg30
I0
sg60
g47
(g588
S'}\x00\x00\x00\x00\x00\x00\x00'
tRp1843
sS'trials.thisTrialN'
p1844
I125
sg32
I1
sg41
g42
sg45
V8
sg33
F1.5409121513366699
sS'trials.thisN'
p1845
I125
sa(dp1846
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF3_10_orig.jpg'
p1847
sS'trials.thisIndex'
p1848
g47
(g588
S'~\x00\x00\x00\x00\x00\x00\x00'
tRp1849
sS'trials.thisRepN'
p1850
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xc02\xc0'
tRp1851
sg29
g47
(g49
S'\x00\x00\x00\x00\x00h\x1f@'
tRp1852
sg30
I0
sg60
g47
(g588
S'~\x00\x00\x00\x00\x00\x00\x00'
tRp1853
sS'trials.thisTrialN'
p1854
I126
sg32
I1
sg41
g42
sg45
V8
sg33
F0.71839189529418945
sS'trials.thisN'
p1855
I126
sa(dp1856
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF4_10_orig.jpg'
p1857
sS'trials.thisIndex'
p1858
g47
(g588
S'\x7f\x00\x00\x00\x00\x00\x00\x00'
tRp1859
sS'trials.thisRepN'
p1860
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xc02\xc0'
tRp1861
sg29
g47
(g49
S'\x00\x00\x00\x00\x00h\x1f@'
tRp1862
sg30
I0
sg60
g47
(g588
S'\x7f\x00\x00\x00\x00\x00\x00\x00'
tRp1863
sS'trials.thisTrialN'
p1864
I127
sg32
I1
sg41
g42
sg45
V8
sg33
F0.66873407363891602
sS'trials.thisN'
p1865
I127
sa(dp1866
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM7_00_orig.jpg'
p1867
sS'trials.thisIndex'
p1868
g47
(g588
S'\x80\x00\x00\x00\x00\x00\x00\x00'
tRp1869
sS'trials.thisRepN'
p1870
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xb12\xc0'
tRp1871
sg29
g47
(g49
S'\x00\x00\x00\x00\x00J\x1f@'
tRp1872
sg30
I0
sg60
g47
(g588
S'\x80\x00\x00\x00\x00\x00\x00\x00'
tRp1873
sS'trials.thisTrialN'
p1874
I128
sg32
I1
sg41
g42
sg45
V8
sg33
F2.2106759548187256
sS'trials.thisN'
p1875
I128
sa(dp1876
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF9_04_orig.jpg'
p1877
sS'trials.thisIndex'
p1878
g47
(g588
S'\x81\x00\x00\x00\x00\x00\x00\x00'
tRp1879
sS'trials.thisRepN'
p1880
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xa22\xc0'
tRp1881
sg29
g47
(g49
S'\x00\x00\x00\x00\x00J\x1f@'
tRp1882
sg30
I0
sg60
g47
(g588
S'\x81\x00\x00\x00\x00\x00\x00\x00'
tRp1883
sS'trials.thisTrialN'
p1884
I129
sg32
I1
sg41
g42
sg45
V8
sg33
F0.80349588394165039
sS'trials.thisN'
p1885
I129
sa(dp1886
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF3_00_orig.jpg'
p1887
sS'trials.thisIndex'
p1888
g47
(g588
S'\x82\x00\x00\x00\x00\x00\x00\x00'
tRp1889
sS'trials.thisRepN'
p1890
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xa22\xc0'
tRp1891
sg29
g47
(g49
S'\x00\x00\x00\x00\x00J\x1f@'
tRp1892
sg30
I0
sg60
g47
(g588
S'\x82\x00\x00\x00\x00\x00\x00\x00'
tRp1893
sS'trials.thisTrialN'
p1894
I130
sg32
I1
sg41
g42
sg45
V8
sg33
F0.70274090766906738
sS'trials.thisN'
p1895
I130
sa(dp1896
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF6_06_orig.jpg'
p1897
sS'trials.thisIndex'
p1898
g47
(g588
S'\x83\x00\x00\x00\x00\x00\x00\x00'
tRp1899
sS'trials.thisRepN'
p1900
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xa22\xc0'
tRp1901
sg29
g47
(g49
S'\x00\x00\x00\x00\x00J\x1f@'
tRp1902
sg30
I0
sg60
g47
(g588
S'\x83\x00\x00\x00\x00\x00\x00\x00'
tRp1903
sS'trials.thisTrialN'
p1904
I131
sg32
I1
sg41
g42
sg45
V8
sg33
F0.58523797988891602
sS'trials.thisN'
p1905
I131
sa(dp1906
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF9_09_orig.jpg'
p1907
sS'trials.thisIndex'
p1908
g47
(g588
S'\x84\x00\x00\x00\x00\x00\x00\x00'
tRp1909
sS'trials.thisRepN'
p1910
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xa22\xc0'
tRp1911
sg29
g47
(g49
S'\x00\x00\x00\x00\x00J\x1f@'
tRp1912
sg30
I0
sg60
g47
(g588
S'\x84\x00\x00\x00\x00\x00\x00\x00'
tRp1913
sS'trials.thisTrialN'
p1914
I132
sg32
I1
sg41
g42
sg45
V8
sg33
F0.55223917961120605
sS'trials.thisN'
p1915
I132
sa(dp1916
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM1_01_orig.jpg'
p1917
sS'trials.thisIndex'
p1918
g47
(g588
S'\x85\x00\x00\x00\x00\x00\x00\x00'
tRp1919
sS'trials.thisRepN'
p1920
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xa22\xc0'
tRp1921
sg29
g47
(g49
S'\x00\x00\x00\x00\x00J\x1f@'
tRp1922
sg30
I0
sg60
g47
(g588
S'\x85\x00\x00\x00\x00\x00\x00\x00'
tRp1923
sS'trials.thisTrialN'
p1924
I133
sg32
I1
sg41
g42
sg45
V8
sg33
F2.5969381332397461
sS'trials.thisN'
p1925
I133
sa(dp1926
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF1_05_orig.jpg'
p1927
sS'trials.thisIndex'
p1928
g47
(g588
S'\x86\x00\x00\x00\x00\x00\x00\x00'
tRp1929
sS'trials.thisRepN'
p1930
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xa22\xc0'
tRp1931
sg29
g47
(g49
S'\x00\x00\x00\x00\x00J\x1f@'
tRp1932
sg30
I0
sg60
g47
(g588
S'\x86\x00\x00\x00\x00\x00\x00\x00'
tRp1933
sS'trials.thisTrialN'
p1934
I134
sg32
I1
sg41
g42
sg45
V8
sg33
F0.80062103271484375
sS'trials.thisN'
p1935
I134
sa(dp1936
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM4_10_orig.jpg'
p1937
sS'trials.thisIndex'
p1938
g47
(g588
S'\x87\x00\x00\x00\x00\x00\x00\x00'
tRp1939
sS'trials.thisRepN'
p1940
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xa22\xc0'
tRp1941
sg29
g47
(g49
S'\x00\x00\x00\x00\x00J\x1f@'
tRp1942
sg30
I1
sg60
g47
(g588
S'\x87\x00\x00\x00\x00\x00\x00\x00'
tRp1943
sS'trials.thisTrialN'
p1944
I135
sg32
I0
sg41
g42
sg45
V8
sg33
F2.5798690319061279
sS'trials.thisN'
p1945
I135
sa(dp1946
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF10_10_orig.jpg'
p1947
sS'trials.thisIndex'
p1948
g47
(g588
S'\x88\x00\x00\x00\x00\x00\x00\x00'
tRp1949
sS'trials.thisRepN'
p1950
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xa22\xc0'
tRp1951
sg29
g47
(g49
S'\x00\x00\x00\x00\x00J\x1f@'
tRp1952
sg30
I0
sg60
g47
(g588
S'\x88\x00\x00\x00\x00\x00\x00\x00'
tRp1953
sS'trials.thisTrialN'
p1954
I136
sg32
I1
sg41
g42
sg45
V8
sg33
F0.73592114448547363
sS'trials.thisN'
p1955
I136
sa(dp1956
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM1_05_orig.jpg'
p1957
sS'trials.thisIndex'
p1958
g47
(g588
S'\x89\x00\x00\x00\x00\x00\x00\x00'
tRp1959
sS'trials.thisRepN'
p1960
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xa22\xc0'
tRp1961
sg29
g47
(g49
S'\x00\x00\x00\x00\x00J\x1f@'
tRp1962
sg30
I0
sg60
g47
(g588
S'\x89\x00\x00\x00\x00\x00\x00\x00'
tRp1963
sS'trials.thisTrialN'
p1964
I137
sg32
I1
sg41
g42
sg45
V8
sg33
F1.523576021194458
sS'trials.thisN'
p1965
I137
sa(dp1966
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM2_02_orig.jpg'
p1967
sS'trials.thisIndex'
p1968
g47
(g588
S'\x8a\x00\x00\x00\x00\x00\x00\x00'
tRp1969
sS'trials.thisRepN'
p1970
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xa22\xc0'
tRp1971
sg29
g47
(g49
S'\x00\x00\x00\x00\x00J\x1f@'
tRp1972
sg30
I0
sg60
g47
(g588
S'\x8a\x00\x00\x00\x00\x00\x00\x00'
tRp1973
sS'trials.thisTrialN'
p1974
I138
sg32
I1
sg41
g42
sg45
V8
sg33
F0.9522249698638916
sS'trials.thisN'
p1975
I138
sa(dp1976
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF2_03_orig.jpg'
p1977
sS'trials.thisIndex'
p1978
g47
(g588
S'\x8b\x00\x00\x00\x00\x00\x00\x00'
tRp1979
sS'trials.thisRepN'
p1980
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xa22\xc0'
tRp1981
sg29
g47
(g49
S'\x00\x00\x00\x00\x00J\x1f@'
tRp1982
sg30
I0
sg60
g47
(g588
S'\x8b\x00\x00\x00\x00\x00\x00\x00'
tRp1983
sS'trials.thisTrialN'
p1984
I139
sg32
I1
sg41
g42
sg45
V8
sg33
F0.63482403755187988
sS'trials.thisN'
p1985
I139
sa(dp1986
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM2_10_orig.jpg'
p1987
sS'trials.thisIndex'
p1988
g47
(g588
S'\x8c\x00\x00\x00\x00\x00\x00\x00'
tRp1989
sS'trials.thisRepN'
p1990
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xa22\xc0'
tRp1991
sg29
g47
(g49
S'\x00\x00\x00\x00\x00J\x1f@'
tRp1992
sg30
I0
sg60
g47
(g588
S'\x8c\x00\x00\x00\x00\x00\x00\x00'
tRp1993
sS'trials.thisTrialN'
p1994
I140
sg32
I1
sg41
g42
sg45
V8
sg33
F1.1528539657592773
sS'trials.thisN'
p1995
I140
sa(dp1996
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM1_06_orig.jpg'
p1997
sS'trials.thisIndex'
p1998
g47
(g588
S'\x8d\x00\x00\x00\x00\x00\x00\x00'
tRp1999
sS'trials.thisRepN'
p2000
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xa22\xc0'
tRp2001
sg29
g47
(g49
S'\x00\x00\x00\x00\x00J\x1f@'
tRp2002
sg30
I0
sg60
g47
(g588
S'\x8d\x00\x00\x00\x00\x00\x00\x00'
tRp2003
sS'trials.thisTrialN'
p2004
I141
sg32
I1
sg41
g42
sg45
V8
sg33
F2.9991581439971924
sS'trials.thisN'
p2005
I141
sa(dp2006
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM3_04_orig.jpg'
p2007
sS'trials.thisIndex'
p2008
g47
(g588
S'\x8e\x00\x00\x00\x00\x00\x00\x00'
tRp2009
sS'trials.thisRepN'
p2010
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x932\xc0'
tRp2011
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xf0\x1e@'
tRp2012
sg30
I1
sg60
g47
(g588
S'\x8e\x00\x00\x00\x00\x00\x00\x00'
tRp2013
sS'trials.thisTrialN'
p2014
I142
sg32
I0
sg41
g42
sg45
V8
sg33
F0.85330414772033691
sS'trials.thisN'
p2015
I142
sa(dp2016
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM1_04_orig.jpg'
p2017
sS'trials.thisIndex'
p2018
g47
(g588
S'\x8f\x00\x00\x00\x00\x00\x00\x00'
tRp2019
sS'trials.thisRepN'
p2020
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x932\xc0'
tRp2021
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xf0\x1e@'
tRp2022
sg30
I0
sg60
g47
(g588
S'\x8f\x00\x00\x00\x00\x00\x00\x00'
tRp2023
sS'trials.thisTrialN'
p2024
I143
sg32
I1
sg41
g42
sg45
V8
sg33
F0.71802306175231934
sS'trials.thisN'
p2025
I143
sa(dp2026
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF1_00_orig.jpg'
p2027
sS'trials.thisIndex'
p2028
g47
(g588
S'\x90\x00\x00\x00\x00\x00\x00\x00'
tRp2029
sS'trials.thisRepN'
p2030
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x932\xc0'
tRp2031
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xf0\x1e@'
tRp2032
sg30
I0
sg60
g47
(g588
S'\x90\x00\x00\x00\x00\x00\x00\x00'
tRp2033
sS'trials.thisTrialN'
p2034
I144
sg32
I1
sg41
g42
sg45
V8
sg33
F0.75071907043457031
sS'trials.thisN'
p2035
I144
sa(dp2036
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF2_00_orig.jpg'
p2037
sS'trials.thisIndex'
p2038
g47
(g588
S'\x91\x00\x00\x00\x00\x00\x00\x00'
tRp2039
sS'trials.thisRepN'
p2040
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80\x8b2\xc0'
tRp2041
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xb4\x1e@'
tRp2042
sg30
I0
sg60
g47
(g588
S'\x91\x00\x00\x00\x00\x00\x00\x00'
tRp2043
sS'trials.thisTrialN'
p2044
I145
sg32
I1
sg41
g42
sg45
V8
sg33
F3.6856579780578613
sS'trials.thisN'
p2045
I145
sa(dp2046
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM9_06_orig.jpg'
p2047
sS'trials.thisIndex'
p2048
g47
(g588
S'\x92\x00\x00\x00\x00\x00\x00\x00'
tRp2049
sS'trials.thisRepN'
p2050
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80\x8b2\xc0'
tRp2051
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xb4\x1e@'
tRp2052
sg30
I0
sg60
g47
(g588
S'\x92\x00\x00\x00\x00\x00\x00\x00'
tRp2053
sS'trials.thisTrialN'
p2054
I146
sg32
I1
sg41
g42
sg45
V8
sg33
F1.2892460823059082
sS'trials.thisN'
p2055
I146
sa(dp2056
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM2_01_orig.jpg'
p2057
sS'trials.thisIndex'
p2058
g47
(g588
S'\x93\x00\x00\x00\x00\x00\x00\x00'
tRp2059
sS'trials.thisRepN'
p2060
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80\x8b2\xc0'
tRp2061
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xb4\x1e@'
tRp2062
sg30
I0
sg60
g47
(g588
S'\x93\x00\x00\x00\x00\x00\x00\x00'
tRp2063
sS'trials.thisTrialN'
p2064
I147
sg32
I1
sg41
g42
sg45
V8
sg33
F0.80218100547790527
sS'trials.thisN'
p2065
I147
sa(dp2066
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF10_02_orig.jpg'
p2067
sS'trials.thisIndex'
p2068
g47
(g588
S'\x94\x00\x00\x00\x00\x00\x00\x00'
tRp2069
sS'trials.thisRepN'
p2070
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80\x8b2\xc0'
tRp2071
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xb4\x1e@'
tRp2072
sg30
I0
sg60
g47
(g588
S'\x94\x00\x00\x00\x00\x00\x00\x00'
tRp2073
sS'trials.thisTrialN'
p2074
I148
sg32
I1
sg41
g42
sg45
V8
sg33
F0.53244400024414062
sS'trials.thisN'
p2075
I148
sa(dp2076
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF7_01_orig.jpg'
p2077
sS'trials.thisIndex'
p2078
g47
(g588
S'\x95\x00\x00\x00\x00\x00\x00\x00'
tRp2079
sS'trials.thisRepN'
p2080
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80\x8b2\xc0'
tRp2081
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xb4\x1e@'
tRp2082
sg30
I0
sg60
g47
(g588
S'\x95\x00\x00\x00\x00\x00\x00\x00'
tRp2083
sS'trials.thisTrialN'
p2084
I149
sg32
I1
sg41
g42
sg45
V8
sg33
F0.58554601669311523
sS'trials.thisN'
p2085
I149
sa(dp2086
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF5_10_orig.jpg'
p2087
sS'trials.thisIndex'
p2088
g47
(g588
S'\x96\x00\x00\x00\x00\x00\x00\x00'
tRp2089
sS'trials.thisRepN'
p2090
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x842\xc0'
tRp2091
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xb4\x1e@'
tRp2092
sg30
I1
sg60
g47
(g588
S'\x96\x00\x00\x00\x00\x00\x00\x00'
tRp2093
sS'trials.thisTrialN'
p2094
I150
sg32
I0
sg41
g42
sg45
V8
sg33
F3.1656768321990967
sS'trials.thisN'
p2095
I150
sa(dp2096
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM2_00_orig.jpg'
p2097
sS'trials.thisIndex'
p2098
g47
(g588
S'\x97\x00\x00\x00\x00\x00\x00\x00'
tRp2099
sS'trials.thisRepN'
p2100
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x842\xc0'
tRp2101
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x96\x1e@'
tRp2102
sg30
I0
sg60
g47
(g588
S'\x97\x00\x00\x00\x00\x00\x00\x00'
tRp2103
sS'trials.thisTrialN'
p2104
I151
sg32
I1
sg41
g42
sg45
V8
sg33
F1.2891690731048584
sS'trials.thisN'
p2105
I151
sa(dp2106
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF4_02_orig.jpg'
p2107
sS'trials.thisIndex'
p2108
g47
(g588
S'\x98\x00\x00\x00\x00\x00\x00\x00'
tRp2109
sS'trials.thisRepN'
p2110
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80\x8b2\xc0'
tRp2111
sg29
g47
(g49
S'\x00\x00\x00\x00\x00x\x1e@'
tRp2112
sg30
I0
sg60
g47
(g588
S'\x98\x00\x00\x00\x00\x00\x00\x00'
tRp2113
sS'trials.thisTrialN'
p2114
I152
sg32
I1
sg41
g42
sg45
V8
sg33
F0.66818094253540039
sS'trials.thisN'
p2115
I152
sa(dp2116
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF2_10_orig.jpg'
p2117
sS'trials.thisIndex'
p2118
g47
(g588
S'\x99\x00\x00\x00\x00\x00\x00\x00'
tRp2119
sS'trials.thisRepN'
p2120
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80\x8b2\xc0'
tRp2121
sg29
g47
(g49
S'\x00\x00\x00\x00\x00x\x1e@'
tRp2122
sg30
I1
sg60
g47
(g588
S'\x99\x00\x00\x00\x00\x00\x00\x00'
tRp2123
sS'trials.thisTrialN'
p2124
I153
sg32
I0
sg41
g42
sg45
V8
sg33
F1.3896238803863525
sS'trials.thisN'
p2125
I153
sa(dp2126
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM10_03_orig.jpg'
p2127
sS'trials.thisIndex'
p2128
g47
(g588
S'\x9a\x00\x00\x00\x00\x00\x00\x00'
tRp2129
sS'trials.thisRepN'
p2130
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80|2\xc0'
tRp2131
sg29
g47
(g49
S'\x00\x00\x00\x00\x00<\x1e@'
tRp2132
sg30
I0
sg60
g47
(g588
S'\x9a\x00\x00\x00\x00\x00\x00\x00'
tRp2133
sS'trials.thisTrialN'
p2134
I154
sg32
I1
sg41
g42
sg45
V8
sg33
F7.0713739395141602
sS'trials.thisN'
p2135
I154
sa(dp2136
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM7_02_orig.jpg'
p2137
sS'trials.thisIndex'
p2138
g47
(g588
S'\x9b\x00\x00\x00\x00\x00\x00\x00'
tRp2139
sS'trials.thisRepN'
p2140
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x842\xc0'
tRp2141
sg29
g47
(g49
S'\x00\x00\x00\x00\x00x\x1e@'
tRp2142
sg30
I1
sg60
g47
(g588
S'\x9b\x00\x00\x00\x00\x00\x00\x00'
tRp2143
sS'trials.thisTrialN'
p2144
I155
sg32
I0
sg41
g42
sg45
V8
sg33
F4.456873893737793
sS'trials.thisN'
p2145
I155
sa(dp2146
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF8_04_orig.jpg'
p2147
sS'trials.thisIndex'
p2148
g47
(g588
S'\x9c\x00\x00\x00\x00\x00\x00\x00'
tRp2149
sS'trials.thisRepN'
p2150
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x842\xc0'
tRp2151
sg29
g47
(g49
S'\x00\x00\x00\x00\x00x\x1e@'
tRp2152
sg30
I0
sg60
g47
(g588
S'\x9c\x00\x00\x00\x00\x00\x00\x00'
tRp2153
sS'trials.thisTrialN'
p2154
I156
sg32
I1
sg41
g42
sg45
V8
sg33
F0.65191102027893066
sS'trials.thisN'
p2155
I156
sa(dp2156
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF5_00_orig.jpg'
p2157
sS'trials.thisIndex'
p2158
g47
(g588
S'\x9d\x00\x00\x00\x00\x00\x00\x00'
tRp2159
sS'trials.thisRepN'
p2160
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x842\xc0'
tRp2161
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x96\x1e@'
tRp2162
sg30
I0
sg60
g47
(g588
S'\x9d\x00\x00\x00\x00\x00\x00\x00'
tRp2163
sS'trials.thisTrialN'
p2164
I157
sg32
I1
sg41
g42
sg45
V8
sg33
F1.1216449737548828
sS'trials.thisN'
p2165
I157
sa(dp2166
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF7_10_orig.jpg'
p2167
sS'trials.thisIndex'
p2168
g47
(g588
S'\x9e\x00\x00\x00\x00\x00\x00\x00'
tRp2169
sS'trials.thisRepN'
p2170
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x842\xc0'
tRp2171
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xb4\x1e@'
tRp2172
sg30
I1
sg60
g47
(g588
S'\x9e\x00\x00\x00\x00\x00\x00\x00'
tRp2173
sS'trials.thisTrialN'
p2174
I158
sg32
I0
sg41
g42
sg45
V8
sg33
F1.4062380790710449
sS'trials.thisN'
p2175
I158
sa(dp2176
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM3_00_orig.jpg'
p2177
sS'trials.thisIndex'
p2178
g47
(g588
S'\x9f\x00\x00\x00\x00\x00\x00\x00'
tRp2179
sS'trials.thisRepN'
p2180
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x842\xc0'
tRp2181
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xb4\x1e@'
tRp2182
sg30
I1
sg60
g47
(g588
S'\x9f\x00\x00\x00\x00\x00\x00\x00'
tRp2183
sS'trials.thisTrialN'
p2184
I159
sg32
I0
sg41
g42
sg45
V8
sg33
F1.4236359596252441
sS'trials.thisN'
p2185
I159
sa(dp2186
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF2_04_orig.jpg'
p2187
sS'trials.thisIndex'
p2188
g47
(g588
S'\xa0\x00\x00\x00\x00\x00\x00\x00'
tRp2189
sS'trials.thisRepN'
p2190
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x842\xc0'
tRp2191
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xf0\x1e@'
tRp2192
sg30
I0
sg60
g47
(g588
S'\xa0\x00\x00\x00\x00\x00\x00\x00'
tRp2193
sS'trials.thisTrialN'
p2194
I160
sg32
I1
sg41
g42
sg45
V8
sg33
F1.4400780200958252
sS'trials.thisN'
p2195
I160
sa(dp2196
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF10_05_orig.jpg'
p2197
sS'trials.thisIndex'
p2198
g47
(g588
S'\xa1\x00\x00\x00\x00\x00\x00\x00'
tRp2199
sS'trials.thisRepN'
p2200
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x842\xc0'
tRp2201
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xf0\x1e@'
tRp2202
sg30
I0
sg60
g47
(g588
S'\xa1\x00\x00\x00\x00\x00\x00\x00'
tRp2203
sS'trials.thisTrialN'
p2204
I161
sg32
I1
sg41
g42
sg45
V8
sg33
F0.76833200454711914
sS'trials.thisN'
p2205
I161
sa(dp2206
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF7_06_orig.jpg'
p2207
sS'trials.thisIndex'
p2208
g47
(g588
S'\xa2\x00\x00\x00\x00\x00\x00\x00'
tRp2209
sS'trials.thisRepN'
p2210
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x842\xc0'
tRp2211
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xf0\x1e@'
tRp2212
sg30
I0
sg60
g47
(g588
S'\xa2\x00\x00\x00\x00\x00\x00\x00'
tRp2213
sS'trials.thisTrialN'
p2214
I162
sg32
I1
sg41
g42
sg45
V8
sg33
F0.53491497039794922
sS'trials.thisN'
p2215
I162
sa(dp2216
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF5_02_orig.jpg'
p2217
sS'trials.thisIndex'
p2218
g47
(g588
S'\xa3\x00\x00\x00\x00\x00\x00\x00'
tRp2219
sS'trials.thisRepN'
p2220
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x842\xc0'
tRp2221
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xf0\x1e@'
tRp2222
sg30
I0
sg60
g47
(g588
S'\xa3\x00\x00\x00\x00\x00\x00\x00'
tRp2223
sS'trials.thisTrialN'
p2224
I163
sg32
I1
sg41
g42
sg45
V8
sg33
F1.3894510269165039
sS'trials.thisN'
p2225
I163
sa(dp2226
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM6_07_orig.jpg'
p2227
sS'trials.thisIndex'
p2228
g47
(g588
S'\xa4\x00\x00\x00\x00\x00\x00\x00'
tRp2229
sS'trials.thisRepN'
p2230
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80m2\xc0'
tRp2231
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x96\x1e@'
tRp2232
sg30
I0
sg60
g47
(g588
S'\xa4\x00\x00\x00\x00\x00\x00\x00'
tRp2233
sS'trials.thisTrialN'
p2234
I164
sg32
I1
sg41
g42
sg45
V8
sg33
F1.2057981491088867
sS'trials.thisN'
p2235
I164
sa(dp2236
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF8_00_orig.jpg'
p2237
sS'trials.thisIndex'
p2238
g47
(g588
S'\xa5\x00\x00\x00\x00\x00\x00\x00'
tRp2239
sS'trials.thisRepN'
p2240
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00f2\xc0'
tRp2241
sg29
g47
(g49
S'\x00\x00\x00\x00\x00x\x1e@'
tRp2242
sg30
I0
sg60
g47
(g588
S'\xa5\x00\x00\x00\x00\x00\x00\x00'
tRp2243
sS'trials.thisTrialN'
p2244
I165
sg32
I1
sg41
g42
sg45
V8
sg33
F1.9601850509643555
sS'trials.thisN'
p2245
I165
sa(dp2246
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF7_02_orig.jpg'
p2247
sS'trials.thisIndex'
p2248
g47
(g588
S'\xa6\x00\x00\x00\x00\x00\x00\x00'
tRp2249
sS'trials.thisRepN'
p2250
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00H2\xc0'
tRp2251
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x1e\x1e@'
tRp2252
sg30
I0
sg60
g47
(g588
S'\xa6\x00\x00\x00\x00\x00\x00\x00'
tRp2253
sS'trials.thisTrialN'
p2254
I166
sg32
I1
sg41
g42
sg45
V8
sg33
F0.7027888298034668
sS'trials.thisN'
p2255
I166
sa(dp2256
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM8_01_orig.jpg'
p2257
sS'trials.thisIndex'
p2258
g47
(g588
S'\xa7\x00\x00\x00\x00\x00\x00\x00'
tRp2259
sS'trials.thisRepN'
p2260
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80@2\xc0'
tRp2261
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x1e\x1e@'
tRp2262
sg30
I0
sg60
g47
(g588
S'\xa7\x00\x00\x00\x00\x00\x00\x00'
tRp2263
sS'trials.thisTrialN'
p2264
I167
sg32
I1
sg41
g42
sg45
V8
sg33
F1.4068849086761475
sS'trials.thisN'
p2265
I167
sa(dp2266
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM1_08_orig.jpg'
p2267
sS'trials.thisIndex'
p2268
g47
(g588
S'\xa8\x00\x00\x00\x00\x00\x00\x00'
tRp2269
sS'trials.thisRepN'
p2270
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80@2\xc0'
tRp2271
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x1e\x1e@'
tRp2272
sg30
I0
sg60
g47
(g588
S'\xa8\x00\x00\x00\x00\x00\x00\x00'
tRp2273
sS'trials.thisTrialN'
p2274
I168
sg32
I1
sg41
g42
sg45
V8
sg33
F1.8253870010375977
sS'trials.thisN'
p2275
I168
sa(dp2276
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF2_09_orig.jpg'
p2277
sS'trials.thisIndex'
p2278
g47
(g588
S'\xa9\x00\x00\x00\x00\x00\x00\x00'
tRp2279
sS'trials.thisRepN'
p2280
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x8012\xc0'
tRp2281
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xe2\x1d@'
tRp2282
sg30
I1
sg60
g47
(g588
S'\xa9\x00\x00\x00\x00\x00\x00\x00'
tRp2283
sS'trials.thisTrialN'
p2284
I169
sg32
I0
sg41
g42
sg45
V8
sg33
F0.96982502937316895
sS'trials.thisN'
p2285
I169
sa(dp2286
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM1_10_orig.jpg'
p2287
sS'trials.thisIndex'
p2288
g47
(g588
S'\xaa\x00\x00\x00\x00\x00\x00\x00'
tRp2289
sS'trials.thisRepN'
p2290
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x8012\xc0'
tRp2291
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xe2\x1d@'
tRp2292
sg30
I1
sg60
g47
(g588
S'\xaa\x00\x00\x00\x00\x00\x00\x00'
tRp2293
sS'trials.thisTrialN'
p2294
I170
sg32
I0
sg41
g42
sg45
V8
sg33
F1.0197141170501709
sS'trials.thisN'
p2295
I170
sa(dp2296
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF4_00_orig.jpg'
p2297
sS'trials.thisIndex'
p2298
g47
(g588
S'\xab\x00\x00\x00\x00\x00\x00\x00'
tRp2299
sS'trials.thisRepN'
p2300
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x8012\xc0'
tRp2301
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xc4\x1d@'
tRp2302
sg30
I0
sg60
g47
(g588
S'\xab\x00\x00\x00\x00\x00\x00\x00'
tRp2303
sS'trials.thisTrialN'
p2304
I171
sg32
I1
sg41
g42
sg45
V8
sg33
F0.85337996482849121
sS'trials.thisN'
p2305
I171
sa(dp2306
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM7_06_orig.jpg'
p2307
sS'trials.thisIndex'
p2308
g47
(g588
S'\xac\x00\x00\x00\x00\x00\x00\x00'
tRp2309
sS'trials.thisRepN'
p2310
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x8012\xc0'
tRp2311
sg29
g47
(g49
S'\x00\x00\x00\x00\x00L\x1d@'
tRp2312
sg30
I1
sg60
g47
(g588
S'\xac\x00\x00\x00\x00\x00\x00\x00'
tRp2313
sS'trials.thisTrialN'
p2314
I172
sg32
I0
sg41
g42
sg45
V8
sg33
F1.1210498809814453
sS'trials.thisN'
p2315
I172
sa(dp2316
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF2_05_orig.jpg'
p2317
sS'trials.thisIndex'
p2318
g47
(g588
S'\xad\x00\x00\x00\x00\x00\x00\x00'
tRp2319
sS'trials.thisRepN'
p2320
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00*2\xc0'
tRp2321
sg29
g47
(g49
S'\x00\x00\x00\x00\x00j\x1d@'
tRp2322
sg30
I0
sg60
g47
(g588
S'\xad\x00\x00\x00\x00\x00\x00\x00'
tRp2323
sS'trials.thisTrialN'
p2324
I173
sg32
I1
sg41
g42
sg45
V8
sg33
F0.77005290985107422
sS'trials.thisN'
p2325
I173
sa(dp2326
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF3_01_orig.jpg'
p2327
sS'trials.thisIndex'
p2328
g47
(g588
S'\xae\x00\x00\x00\x00\x00\x00\x00'
tRp2329
sS'trials.thisRepN'
p2330
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00*2\xc0'
tRp2331
sg29
g47
(g49
S'\x00\x00\x00\x00\x00j\x1d@'
tRp2332
sg30
I0
sg60
g47
(g588
S'\xae\x00\x00\x00\x00\x00\x00\x00'
tRp2333
sS'trials.thisTrialN'
p2334
I174
sg32
I1
sg41
g42
sg45
V8
sg33
F0.92093396186828613
sS'trials.thisN'
p2335
I174
sa(dp2336
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM3_08_orig.jpg'
p2337
sS'trials.thisIndex'
p2338
g47
(g588
S'\xaf\x00\x00\x00\x00\x00\x00\x00'
tRp2339
sS'trials.thisRepN'
p2340
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x8012\xc0'
tRp2341
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x88\x1d@'
tRp2342
sg30
I1
sg60
g47
(g588
S'\xaf\x00\x00\x00\x00\x00\x00\x00'
tRp2343
sS'trials.thisTrialN'
p2344
I175
sg32
I0
sg41
g42
sg45
V8
sg33
F0.87077188491821289
sS'trials.thisN'
p2345
I175
sa(dp2346
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM2_03_orig.jpg'
p2347
sS'trials.thisIndex'
p2348
g47
(g588
S'\xb0\x00\x00\x00\x00\x00\x00\x00'
tRp2349
sS'trials.thisRepN'
p2350
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x8012\xc0'
tRp2351
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x88\x1d@'
tRp2352
sg30
I0
sg60
g47
(g588
S'\xb0\x00\x00\x00\x00\x00\x00\x00'
tRp2353
sS'trials.thisTrialN'
p2354
I176
sg32
I1
sg41
g42
sg45
V8
sg33
F0.71954607963562012
sS'trials.thisN'
p2355
I176
sa(dp2356
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF9_10_orig.jpg'
p2357
sS'trials.thisIndex'
p2358
g47
(g588
S'\xb1\x00\x00\x00\x00\x00\x00\x00'
tRp2359
sS'trials.thisRepN'
p2360
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x8012\xc0'
tRp2361
sg29
g47
(g49
S'\x00\x00\x00\x00\x00j\x1d@'
tRp2362
sg30
I0
sg60
g47
(g588
S'\xb1\x00\x00\x00\x00\x00\x00\x00'
tRp2363
sS'trials.thisTrialN'
p2364
I177
sg32
I1
sg41
g42
sg45
V8
sg33
F1.1220710277557373
sS'trials.thisN'
p2365
I177
sa(dp2366
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM8_09_orig.jpg'
p2367
sS'trials.thisIndex'
p2368
g47
(g588
S'\xb2\x00\x00\x00\x00\x00\x00\x00'
tRp2369
sS'trials.thisRepN'
p2370
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x8012\xc0'
tRp2371
sg29
g47
(g49
S'\x00\x00\x00\x00\x00j\x1d@'
tRp2372
sg30
I0
sg60
g47
(g588
S'\xb2\x00\x00\x00\x00\x00\x00\x00'
tRp2373
sS'trials.thisTrialN'
p2374
I178
sg32
I1
sg41
g42
sg45
V8
sg33
F0.77060699462890625
sS'trials.thisN'
p2375
I178
sa(dp2376
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF9_00_orig.jpg'
p2377
sS'trials.thisIndex'
p2378
g47
(g588
S'\xb3\x00\x00\x00\x00\x00\x00\x00'
tRp2379
sS'trials.thisRepN'
p2380
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x8012\xc0'
tRp2381
sg29
g47
(g49
S'\x00\x00\x00\x00\x00j\x1d@'
tRp2382
sg30
I0
sg60
g47
(g588
S'\xb3\x00\x00\x00\x00\x00\x00\x00'
tRp2383
sS'trials.thisTrialN'
p2384
I179
sg32
I1
sg41
g42
sg45
V8
sg33
F0.90368390083312988
sS'trials.thisN'
p2385
I179
sa(dp2386
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM10_00_orig.jpg'
p2387
sS'trials.thisIndex'
p2388
g47
(g588
S'\xb4\x00\x00\x00\x00\x00\x00\x00'
tRp2389
sS'trials.thisRepN'
p2390
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80@2\xc0'
tRp2391
sg29
g47
(g49
S'\x00\x00\x00\x00\x00.\x1d@'
tRp2392
sg30
I0
sg60
g47
(g588
S'\xb4\x00\x00\x00\x00\x00\x00\x00'
tRp2393
sS'trials.thisTrialN'
p2394
I180
sg32
I1
sg41
g42
sg45
V8
sg33
F1.0384831428527832
sS'trials.thisN'
p2395
I180
sa(dp2396
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF8_06_orig.jpg'
p2397
sS'trials.thisIndex'
p2398
g47
(g588
S'\xb5\x00\x00\x00\x00\x00\x00\x00'
tRp2399
sS'trials.thisRepN'
p2400
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x0092\xc0'
tRp2401
sg29
g47
(g49
S'\x00\x00\x00\x00\x00L\x1d@'
tRp2402
sg30
I0
sg60
g47
(g588
S'\xb5\x00\x00\x00\x00\x00\x00\x00'
tRp2403
sS'trials.thisTrialN'
p2404
I181
sg32
I1
sg41
g42
sg45
V8
sg33
F0.56901216506958008
sS'trials.thisN'
p2405
I181
sa(dp2406
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM7_04_orig.jpg'
p2407
sS'trials.thisIndex'
p2408
g47
(g588
S'\xb6\x00\x00\x00\x00\x00\x00\x00'
tRp2409
sS'trials.thisRepN'
p2410
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x0092\xc0'
tRp2411
sg29
g47
(g49
S'\x00\x00\x00\x00\x00L\x1d@'
tRp2412
sg30
I1
sg60
g47
(g588
S'\xb6\x00\x00\x00\x00\x00\x00\x00'
tRp2413
sS'trials.thisTrialN'
p2414
I182
sg32
I0
sg41
g42
sg45
V8
sg33
F0.85375285148620605
sS'trials.thisN'
p2415
I182
sa(dp2416
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM2_09_orig.jpg'
p2417
sS'trials.thisIndex'
p2418
g47
(g588
S'\xb7\x00\x00\x00\x00\x00\x00\x00'
tRp2419
sS'trials.thisRepN'
p2420
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x0092\xc0'
tRp2421
sg29
g47
(g49
S'\x00\x00\x00\x00\x00L\x1d@'
tRp2422
sg30
I0
sg60
g47
(g588
S'\xb7\x00\x00\x00\x00\x00\x00\x00'
tRp2423
sS'trials.thisTrialN'
p2424
I183
sg32
I1
sg41
g42
sg45
V8
sg33
F0.5844571590423584
sS'trials.thisN'
p2425
I183
sa(dp2426
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM8_06_orig.jpg'
p2427
sS'trials.thisIndex'
p2428
g47
(g588
S'\xb8\x00\x00\x00\x00\x00\x00\x00'
tRp2429
sS'trials.thisRepN'
p2430
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x8012\xc0'
tRp2431
sg29
g47
(g49
S'\x00\x00\x00\x00\x00.\x1d@'
tRp2432
sg30
I0
sg60
g47
(g588
S'\xb8\x00\x00\x00\x00\x00\x00\x00'
tRp2433
sS'trials.thisTrialN'
p2434
I184
sg32
I1
sg41
g42
sg45
V8
sg33
F2.1774718761444092
sS'trials.thisN'
p2435
I184
sa(dp2436
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF10_00_orig.jpg'
p2437
sS'trials.thisIndex'
p2438
g47
(g588
S'\xb9\x00\x00\x00\x00\x00\x00\x00'
tRp2439
sS'trials.thisRepN'
p2440
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x8012\xc0'
tRp2441
sg29
g47
(g49
S'\x00\x00\x00\x00\x00.\x1d@'
tRp2442
sg30
I0
sg60
g47
(g588
S'\xb9\x00\x00\x00\x00\x00\x00\x00'
tRp2443
sS'trials.thisTrialN'
p2444
I185
sg32
I1
sg41
g42
sg45
V8
sg33
F1.0212209224700928
sS'trials.thisN'
p2445
I185
sa(dp2446
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM10_05_orig.jpg'
p2447
sS'trials.thisIndex'
p2448
g47
(g588
S'\xba\x00\x00\x00\x00\x00\x00\x00'
tRp2449
sS'trials.thisRepN'
p2450
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x0092\xc0'
tRp2451
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x10\x1d@'
tRp2452
sg30
I1
sg60
g47
(g588
S'\xba\x00\x00\x00\x00\x00\x00\x00'
tRp2453
sS'trials.thisTrialN'
p2454
I186
sg32
I0
sg41
g42
sg45
V8
sg33
F0.93735384941101074
sS'trials.thisN'
p2455
I186
sa(dp2456
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF5_08_orig.jpg'
p2457
sS'trials.thisIndex'
p2458
g47
(g588
S'\xbb\x00\x00\x00\x00\x00\x00\x00'
tRp2459
sS'trials.thisRepN'
p2460
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x0092\xc0'
tRp2461
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x10\x1d@'
tRp2462
sg30
I0
sg60
g47
(g588
S'\xbb\x00\x00\x00\x00\x00\x00\x00'
tRp2463
sS'trials.thisTrialN'
p2464
I187
sg32
I1
sg41
g42
sg45
V8
sg33
F0.58542418479919434
sS'trials.thisN'
p2465
I187
sa(dp2466
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF3_08_orig.jpg'
p2467
sS'trials.thisIndex'
p2468
g47
(g588
S'\xbc\x00\x00\x00\x00\x00\x00\x00'
tRp2469
sS'trials.thisRepN'
p2470
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80@2\xc0'
tRp2471
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xd4\x1c@'
tRp2472
sg30
I0
sg60
g47
(g588
S'\xbc\x00\x00\x00\x00\x00\x00\x00'
tRp2473
sS'trials.thisTrialN'
p2474
I188
sg32
I1
sg41
g42
sg45
V8
sg33
F1.8568689823150635
sS'trials.thisN'
p2475
I188
sa(dp2476
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM9_05_orig.jpg'
p2477
sS'trials.thisIndex'
p2478
g47
(g588
S'\xbd\x00\x00\x00\x00\x00\x00\x00'
tRp2479
sS'trials.thisRepN'
p2480
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80\xb91\xc0'
tRp2481
sg29
g47
(g49
S'\x00\x00\x00\x00\x00>\x1c@'
tRp2482
sg30
I0
sg60
g47
(g588
S'\xbd\x00\x00\x00\x00\x00\x00\x00'
tRp2483
sS'trials.thisTrialN'
p2484
I189
sg32
I1
sg41
g42
sg45
V8
sg33
F1.8925168514251709
sS'trials.thisN'
p2485
I189
sa(dp2486
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM5_01_orig.jpg'
p2487
sS'trials.thisIndex'
p2488
g47
(g588
S'\xbe\x00\x00\x00\x00\x00\x00\x00'
tRp2489
sS'trials.thisRepN'
p2490
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80\x9b1\xc0'
tRp2491
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xa8\x1b@'
tRp2492
sg30
I1
sg60
g47
(g588
S'\xbe\x00\x00\x00\x00\x00\x00\x00'
tRp2493
sS'trials.thisTrialN'
p2494
I190
sg32
I0
sg41
g42
sg45
V8
sg33
F0.92032718658447266
sS'trials.thisN'
p2495
I190
sa(dp2496
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF8_05_orig.jpg'
p2497
sS'trials.thisIndex'
p2498
g47
(g588
S'\xbf\x00\x00\x00\x00\x00\x00\x00'
tRp2499
sS'trials.thisRepN'
p2500
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x941\xc0'
tRp2501
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xc6\x1b@'
tRp2502
sg30
I0
sg60
g47
(g588
S'\xbf\x00\x00\x00\x00\x00\x00\x00'
tRp2503
sS'trials.thisTrialN'
p2504
I191
sg32
I1
sg41
g42
sg45
V8
sg33
F2.1750731468200684
sS'trials.thisN'
p2505
I191
sa(dp2506
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM6_01_orig.jpg'
p2507
sS'trials.thisIndex'
p2508
g47
(g588
S'\xc0\x00\x00\x00\x00\x00\x00\x00'
tRp2509
sS'trials.thisRepN'
p2510
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x941\xc0'
tRp2511
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xc6\x1b@'
tRp2512
sg30
I0
sg60
g47
(g588
S'\xc0\x00\x00\x00\x00\x00\x00\x00'
tRp2513
sS'trials.thisTrialN'
p2514
I192
sg32
I1
sg41
g42
sg45
V8
sg33
F0.8873291015625
sS'trials.thisN'
p2515
I192
sa(dp2516
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM5_04_orig.jpg'
p2517
sS'trials.thisIndex'
p2518
g47
(g588
S'\xc1\x00\x00\x00\x00\x00\x00\x00'
tRp2519
sS'trials.thisRepN'
p2520
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x941\xc0'
tRp2521
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xc6\x1b@'
tRp2522
sg30
I1
sg60
g47
(g588
S'\xc1\x00\x00\x00\x00\x00\x00\x00'
tRp2523
sS'trials.thisTrialN'
p2524
I193
sg32
I0
sg41
g42
sg45
V8
sg33
F0.93764901161193848
sS'trials.thisN'
p2525
I193
sa(dp2526
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF4_05_orig.jpg'
p2527
sS'trials.thisIndex'
p2528
g47
(g588
S'\xc2\x00\x00\x00\x00\x00\x00\x00'
tRp2529
sS'trials.thisRepN'
p2530
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80\x9b1\xc0'
tRp2531
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xc6\x1b@'
tRp2532
sg30
I0
sg60
g47
(g588
S'\xc2\x00\x00\x00\x00\x00\x00\x00'
tRp2533
sS'trials.thisTrialN'
p2534
I194
sg32
I1
sg41
g42
sg45
V8
sg33
F0.7529759407043457
sS'trials.thisN'
p2535
I194
sa(dp2536
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM10_08_orig.jpg'
p2537
sS'trials.thisIndex'
p2538
g47
(g588
S'\xc3\x00\x00\x00\x00\x00\x00\x00'
tRp2539
sS'trials.thisRepN'
p2540
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xa31\xc0'
tRp2541
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xa8\x1b@'
tRp2542
sg30
I1
sg60
g47
(g588
S'\xc3\x00\x00\x00\x00\x00\x00\x00'
tRp2543
sS'trials.thisTrialN'
p2544
I195
sg32
I0
sg41
g42
sg45
V8
sg33
F0.78456211090087891
sS'trials.thisN'
p2545
I195
sa(dp2546
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM8_03_orig.jpg'
p2547
sS'trials.thisIndex'
p2548
g47
(g588
S'\xc4\x00\x00\x00\x00\x00\x00\x00'
tRp2549
sS'trials.thisRepN'
p2550
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xa31\xc0'
tRp2551
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xa8\x1b@'
tRp2552
sg30
I0
sg60
g47
(g588
S'\xc4\x00\x00\x00\x00\x00\x00\x00'
tRp2553
sS'trials.thisTrialN'
p2554
I196
sg32
I1
sg41
g42
sg45
V8
sg33
F0.78450703620910645
sS'trials.thisN'
p2555
I196
sa(dp2556
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM5_00_orig.jpg'
p2557
sS'trials.thisIndex'
p2558
g47
(g588
S'\xc5\x00\x00\x00\x00\x00\x00\x00'
tRp2559
sS'trials.thisRepN'
p2560
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xa31\xc0'
tRp2561
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xa8\x1b@'
tRp2562
sg30
I1
sg60
g47
(g588
S'\xc5\x00\x00\x00\x00\x00\x00\x00'
tRp2563
sS'trials.thisTrialN'
p2564
I197
sg32
I0
sg41
g42
sg45
V8
sg33
F0.91925883293151855
sS'trials.thisN'
p2565
I197
sa(dp2566
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM7_03_orig.jpg'
p2567
sS'trials.thisIndex'
p2568
g47
(g588
S'\xc6\x00\x00\x00\x00\x00\x00\x00'
tRp2569
sS'trials.thisRepN'
p2570
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xa31\xc0'
tRp2571
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xc6\x1b@'
tRp2572
sg30
I1
sg60
g47
(g588
S'\xc6\x00\x00\x00\x00\x00\x00\x00'
tRp2573
sS'trials.thisTrialN'
p2574
I198
sg32
I0
sg41
g42
sg45
V8
sg33
F4.3224470615386963
sS'trials.thisN'
p2575
I198
sa(dp2576
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF9_07_orig.jpg'
p2577
sS'trials.thisIndex'
p2578
g47
(g588
S'\xc7\x00\x00\x00\x00\x00\x00\x00'
tRp2579
sS'trials.thisRepN'
p2580
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xa31\xc0'
tRp2581
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xc6\x1b@'
tRp2582
sg30
I0
sg60
g47
(g588
S'\xc7\x00\x00\x00\x00\x00\x00\x00'
tRp2583
sS'trials.thisTrialN'
p2584
I199
sg32
I1
sg41
g42
sg45
V8
sg33
F0.68754792213439941
sS'trials.thisN'
p2585
I199
sa(dp2586
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM8_05_orig.jpg'
p2587
sS'trials.thisIndex'
p2588
g47
(g588
S'\xc8\x00\x00\x00\x00\x00\x00\x00'
tRp2589
sS'trials.thisRepN'
p2590
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xa31\xc0'
tRp2591
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xc6\x1b@'
tRp2592
sg30
I0
sg60
g47
(g588
S'\xc8\x00\x00\x00\x00\x00\x00\x00'
tRp2593
sS'trials.thisTrialN'
p2594
I200
sg32
I1
sg41
g42
sg45
V8
sg33
F0.85272598266601562
sS'trials.thisN'
p2595
I200
sa(dp2596
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM3_02_orig.jpg'
p2597
sS'trials.thisIndex'
p2598
g47
(g588
S'\xc9\x00\x00\x00\x00\x00\x00\x00'
tRp2599
sS'trials.thisRepN'
p2600
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80\xaa1\xc0'
tRp2601
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xc6\x1b@'
tRp2602
sg30
I1
sg60
g47
(g588
S'\xc9\x00\x00\x00\x00\x00\x00\x00'
tRp2603
sS'trials.thisTrialN'
p2604
I201
sg32
I0
sg41
g42
sg45
V8
sg33
F2.2607438564300537
sS'trials.thisN'
p2605
I201
sa(dp2606
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF8_02_orig.jpg'
p2607
sS'trials.thisIndex'
p2608
g47
(g588
S'\xca\x00\x00\x00\x00\x00\x00\x00'
tRp2609
sS'trials.thisRepN'
p2610
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80\xaa1\xc0'
tRp2611
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xc6\x1b@'
tRp2612
sg30
I0
sg60
g47
(g588
S'\xca\x00\x00\x00\x00\x00\x00\x00'
tRp2613
sS'trials.thisTrialN'
p2614
I202
sg32
I1
sg41
g42
sg45
V8
sg33
F1.2727730274200439
sS'trials.thisN'
p2615
I202
sa(dp2616
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM6_05_orig.jpg'
p2617
sS'trials.thisIndex'
p2618
g47
(g588
S'\xcb\x00\x00\x00\x00\x00\x00\x00'
tRp2619
sS'trials.thisRepN'
p2620
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xb21\xc0'
tRp2621
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xc6\x1b@'
tRp2622
sg30
I0
sg60
g47
(g588
S'\xcb\x00\x00\x00\x00\x00\x00\x00'
tRp2623
sS'trials.thisTrialN'
p2624
I203
sg32
I1
sg41
g42
sg45
V8
sg33
F0.82059097290039062
sS'trials.thisN'
p2625
I203
sa(dp2626
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM4_03_orig.jpg'
p2627
sS'trials.thisIndex'
p2628
g47
(g588
S'\xcc\x00\x00\x00\x00\x00\x00\x00'
tRp2629
sS'trials.thisRepN'
p2630
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xc11\xc0'
tRp2631
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xa8\x1b@'
tRp2632
sg30
I0
sg60
g47
(g588
S'\xcc\x00\x00\x00\x00\x00\x00\x00'
tRp2633
sS'trials.thisTrialN'
p2634
I204
sg32
I1
sg41
g42
sg45
V8
sg33
F2.7137610912322998
sS'trials.thisN'
p2635
I204
sa(dp2636
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF2_07_orig.jpg'
p2637
sS'trials.thisIndex'
p2638
g47
(g588
S'\xcd\x00\x00\x00\x00\x00\x00\x00'
tRp2639
sS'trials.thisRepN'
p2640
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xc11\xc0'
tRp2641
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xa8\x1b@'
tRp2642
sg30
I1
sg60
g47
(g588
S'\xcd\x00\x00\x00\x00\x00\x00\x00'
tRp2643
sS'trials.thisTrialN'
p2644
I205
sg32
I0
sg41
g42
sg45
V8
sg33
F1.7086710929870605
sS'trials.thisN'
p2645
I205
sa(dp2646
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM7_10_orig.jpg'
p2647
sS'trials.thisIndex'
p2648
g47
(g588
S'\xce\x00\x00\x00\x00\x00\x00\x00'
tRp2649
sS'trials.thisRepN'
p2650
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xc11\xc0'
tRp2651
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xa8\x1b@'
tRp2652
sg30
I1
sg60
g47
(g588
S'\xce\x00\x00\x00\x00\x00\x00\x00'
tRp2653
sS'trials.thisTrialN'
p2654
I206
sg32
I0
sg41
g42
sg45
V8
sg33
F0.90392518043518066
sS'trials.thisN'
p2655
I206
sa(dp2656
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF4_09_orig.jpg'
p2657
sS'trials.thisIndex'
p2658
g47
(g588
S'\xcf\x00\x00\x00\x00\x00\x00\x00'
tRp2659
sS'trials.thisRepN'
p2660
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xc11\xc0'
tRp2661
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xa8\x1b@'
tRp2662
sg30
I1
sg60
g47
(g588
S'\xcf\x00\x00\x00\x00\x00\x00\x00'
tRp2663
sS'trials.thisTrialN'
p2664
I207
sg32
I0
sg41
g42
sg45
V8
sg33
F1.1381630897521973
sS'trials.thisN'
p2665
I207
sa(dp2666
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM1_00_orig.jpg'
p2667
sS'trials.thisIndex'
p2668
g47
(g588
S'\xd0\x00\x00\x00\x00\x00\x00\x00'
tRp2669
sS'trials.thisRepN'
p2670
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xc11\xc0'
tRp2671
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xa8\x1b@'
tRp2672
sg30
I0
sg60
g47
(g588
S'\xd0\x00\x00\x00\x00\x00\x00\x00'
tRp2673
sS'trials.thisTrialN'
p2674
I208
sg32
I1
sg41
g42
sg45
V8
sg33
F2.3617298603057861
sS'trials.thisN'
p2675
I208
sa(dp2676
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF7_09_orig.jpg'
p2677
sS'trials.thisIndex'
p2678
g47
(g588
S'\xd1\x00\x00\x00\x00\x00\x00\x00'
tRp2679
sS'trials.thisRepN'
p2680
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80\xc81\xc0'
tRp2681
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x8a\x1b@'
tRp2682
sg30
I1
sg60
g47
(g588
S'\xd1\x00\x00\x00\x00\x00\x00\x00'
tRp2683
sS'trials.thisTrialN'
p2684
I209
sg32
I0
sg41
g42
sg45
V8
sg33
F2.1607508659362793
sS'trials.thisN'
p2685
I209
sa(dp2686
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF3_07_orig.jpg'
p2687
sS'trials.thisIndex'
p2688
g47
(g588
S'\xd2\x00\x00\x00\x00\x00\x00\x00'
tRp2689
sS'trials.thisRepN'
p2690
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80\xc81\xc0'
tRp2691
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x8a\x1b@'
tRp2692
sg30
I0
sg60
g47
(g588
S'\xd2\x00\x00\x00\x00\x00\x00\x00'
tRp2693
sS'trials.thisTrialN'
p2694
I210
sg32
I1
sg41
g42
sg45
V8
sg33
F0.63534402847290039
sS'trials.thisN'
p2695
I210
sa(dp2696
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM2_07_orig.jpg'
p2697
sS'trials.thisIndex'
p2698
g47
(g588
S'\xd3\x00\x00\x00\x00\x00\x00\x00'
tRp2699
sS'trials.thisRepN'
p2700
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80\xd71\xc0'
tRp2701
sg29
g47
(g49
S'\x00\x00\x00\x00\x00N\x1b@'
tRp2702
sg30
I0
sg60
g47
(g588
S'\xd3\x00\x00\x00\x00\x00\x00\x00'
tRp2703
sS'trials.thisTrialN'
p2704
I211
sg32
I1
sg41
g42
sg45
V8
sg33
F0.75094795227050781
sS'trials.thisN'
p2705
I211
sa(dp2706
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF10_09_orig.jpg'
p2707
sS'trials.thisIndex'
p2708
g47
(g588
S'\xd4\x00\x00\x00\x00\x00\x00\x00'
tRp2709
sS'trials.thisRepN'
p2710
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80\xd71\xc0'
tRp2711
sg29
g47
(g49
S'\x00\x00\x00\x00\x00N\x1b@'
tRp2712
sg30
I1
sg60
g47
(g588
S'\xd4\x00\x00\x00\x00\x00\x00\x00'
tRp2713
sS'trials.thisTrialN'
p2714
I212
sg32
I0
sg41
g42
sg45
V8
sg33
F1.189312219619751
sS'trials.thisN'
p2715
I212
sa(dp2716
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM10_10_orig.jpg'
p2717
sS'trials.thisIndex'
p2718
g47
(g588
S'\xd5\x00\x00\x00\x00\x00\x00\x00'
tRp2719
sS'trials.thisRepN'
p2720
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80\xd71\xc0'
tRp2721
sg29
g47
(g49
S'\x00\x00\x00\x00\x00N\x1b@'
tRp2722
sg30
I1
sg60
g47
(g588
S'\xd5\x00\x00\x00\x00\x00\x00\x00'
tRp2723
sS'trials.thisTrialN'
p2724
I213
sg32
I0
sg41
g42
sg45
V8
sg33
F0.70069503784179688
sS'trials.thisN'
p2725
I213
sa(dp2726
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF4_07_orig.jpg'
p2727
sS'trials.thisIndex'
p2728
g47
(g588
S'\xd6\x00\x00\x00\x00\x00\x00\x00'
tRp2729
sS'trials.thisRepN'
p2730
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80\xc81\xc0'
tRp2731
sg29
g47
(g49
S'\x00\x00\x00\x00\x00l\x1b@'
tRp2732
sg30
I0
sg60
g47
(g588
S'\xd6\x00\x00\x00\x00\x00\x00\x00'
tRp2733
sS'trials.thisTrialN'
p2734
I214
sg32
I1
sg41
g42
sg45
V8
sg33
F0.75087594985961914
sS'trials.thisN'
p2735
I214
sa(dp2736
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM6_04_orig.jpg'
p2737
sS'trials.thisIndex'
p2738
g47
(g588
S'\xd7\x00\x00\x00\x00\x00\x00\x00'
tRp2739
sS'trials.thisRepN'
p2740
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80\xc81\xc0'
tRp2741
sg29
g47
(g49
S'\x00\x00\x00\x00\x00l\x1b@'
tRp2742
sg30
I0
sg60
g47
(g588
S'\xd7\x00\x00\x00\x00\x00\x00\x00'
tRp2743
sS'trials.thisTrialN'
p2744
I215
sg32
I1
sg41
g42
sg45
V8
sg33
F1.1718480587005615
sS'trials.thisN'
p2745
I215
sa(dp2746
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF1_06_orig.jpg'
p2747
sS'trials.thisIndex'
p2748
g47
(g588
S'\xd8\x00\x00\x00\x00\x00\x00\x00'
tRp2749
sS'trials.thisRepN'
p2750
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80\xc81\xc0'
tRp2751
sg29
g47
(g49
S'\x00\x00\x00\x00\x000\x1b@'
tRp2752
sg30
I0
sg60
g47
(g588
S'\xd8\x00\x00\x00\x00\x00\x00\x00'
tRp2753
sS'trials.thisTrialN'
p2754
I216
sg32
I1
sg41
g42
sg45
V8
sg33
F1.1206331253051758
sS'trials.thisN'
p2755
I216
sa(dp2756
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM3_01_orig.jpg'
p2757
sS'trials.thisIndex'
p2758
g47
(g588
S'\xd9\x00\x00\x00\x00\x00\x00\x00'
tRp2759
sS'trials.thisRepN'
p2760
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xc11\xc0'
tRp2761
sg29
g47
(g49
S'\x00\x00\x00\x00\x00N\x1b@'
tRp2762
sg30
I0
sg60
g47
(g588
S'\xd9\x00\x00\x00\x00\x00\x00\x00'
tRp2763
sS'trials.thisTrialN'
p2764
I217
sg32
I1
sg41
g42
sg45
V8
sg33
F2.4792981147766113
sS'trials.thisN'
p2765
I217
sa(dp2766
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphF9_03_orig.jpg'
p2767
sS'trials.thisIndex'
p2768
g47
(g588
S'\xda\x00\x00\x00\x00\x00\x00\x00'
tRp2769
sS'trials.thisRepN'
p2770
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xc11\xc0'
tRp2771
sg29
g47
(g49
S'\x00\x00\x00\x00\x00N\x1b@'
tRp2772
sg30
I0
sg60
g47
(g588
S'\xda\x00\x00\x00\x00\x00\x00\x00'
tRp2773
sS'trials.thisTrialN'
p2774
I218
sg32
I1
sg41
g42
sg45
V8
sg33
F0.68541598320007324
sS'trials.thisN'
p2775
I218
sa(dp2776
g31
I0
sg44
g11
sg43
VA
sg585
S'./stim/MorphM9_07_orig.jpg'
p2777
sS'trials.thisIndex'
p2778
g47
(g588
S'\xdb\x00\x00\x00\x00\x00\x00\x00'
tRp2779
sS'trials.thisRepN'
p2780
I0
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x80\xb91\xc0'
tRp2781
sg29
g47
(g49
S'\x00\x00\x00\x00\x00l\x1b@'
tRp2782
sg30
I1
sg60
g47
(g588
S'\xdb\x00\x00\x00\x00\x00\x00\x00'
tRp2783
sS'trials.thisTrialN'
p2784
I219
sg32
I0
sg41
g42
sg45
V8
sg33
F1.8593349456787109
sS'trials.thisN'
p2785
I219
sa(dp2786
g44
g11
sg34
S'return'
p2787
sg43
VA
sg41
g42
sg45
V8
sg46
g50
sg35
F28.15629506111145
sa(dp2788
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p2789
g47
(g588
S'\x00\x00\x00\x00\x00\x00\x00\x00'
tRp2790
sS'trials2.thisRepN'
p2791
I0
sS'trials2.thisTrialN'
p2792
I0
sS'img'
p2793
S'./stim/MorphF1_06_orig.jpg'
p2794
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xa2"\xc0'
tRp2795
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xf6(@'
tRp2796
sg30
I0
sS'num'
p2797
g47
(g588
S'\x00\x00\x00\x00\x00\x00\x00\x00'
tRp2798
sg32
I1
sg41
g42
sg45
V8
sg33
F3.4474170207977295
sS'trials2.thisN'
p2799
I0
sa(dp2800
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p2801
g47
(g588
S'\x01\x00\x00\x00\x00\x00\x00\x00'
tRp2802
sS'trials2.thisRepN'
p2803
I0
sS'trials2.thisTrialN'
p2804
I1
sg2793
S'./stim/MorphF7_08_orig.jpg'
p2805
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x93"\xc0'
tRp2806
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xd8(@'
tRp2807
sg30
I0
sg2797
g47
(g588
S'\x01\x00\x00\x00\x00\x00\x00\x00'
tRp2808
sg32
I1
sg41
g42
sg45
V8
sg33
F1.739081859588623
sS'trials2.thisN'
p2809
I1
sa(dp2810
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p2811
g47
(g588
S'\x02\x00\x00\x00\x00\x00\x00\x00'
tRp2812
sS'trials2.thisRepN'
p2813
I0
sS'trials2.thisTrialN'
p2814
I2
sg2793
S'./stim/MorphF1_08_orig.jpg'
p2815
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x93"\xc0'
tRp2816
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xc9(@'
tRp2817
sg30
I0
sg2797
g47
(g588
S'\x02\x00\x00\x00\x00\x00\x00\x00'
tRp2818
sg32
I1
sg41
g42
sg45
V8
sg33
F0.65301704406738281
sS'trials2.thisN'
p2819
I2
sa(dp2820
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p2821
g47
(g588
S'\x03\x00\x00\x00\x00\x00\x00\x00'
tRp2822
sS'trials2.thisRepN'
p2823
I0
sS'trials2.thisTrialN'
p2824
I3
sg2793
S'./stim/MorphM3_01_orig.jpg'
p2825
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x93"\xc0'
tRp2826
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x9c(@'
tRp2827
sg30
I0
sg2797
g47
(g588
S'\x03\x00\x00\x00\x00\x00\x00\x00'
tRp2828
sg32
I1
sg41
g42
sg45
V8
sg33
F2.9145679473876953
sS'trials2.thisN'
p2829
I3
sa(dp2830
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p2831
g47
(g588
S'\x04\x00\x00\x00\x00\x00\x00\x00'
tRp2832
sS'trials2.thisRepN'
p2833
I0
sS'trials2.thisTrialN'
p2834
I4
sg2793
S'./stim/MorphM4_04_orig.jpg'
p2835
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x93"\xc0'
tRp2836
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x8d(@'
tRp2837
sg30
I0
sg2797
g47
(g588
S'\x04\x00\x00\x00\x00\x00\x00\x00'
tRp2838
sg32
I1
sg41
g42
sg45
V8
sg33
F1.2219350337982178
sS'trials2.thisN'
p2839
I4
sa(dp2840
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p2841
g47
(g588
S'\x05\x00\x00\x00\x00\x00\x00\x00'
tRp2842
sS'trials2.thisRepN'
p2843
I0
sS'trials2.thisTrialN'
p2844
I5
sg2793
S'./stim/MorphM10_01_orig.jpg'
p2845
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x93"\xc0'
tRp2846
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x8d(@'
tRp2847
sg30
I0
sg2797
g47
(g588
S'\x05\x00\x00\x00\x00\x00\x00\x00'
tRp2848
sg32
I1
sg41
g42
sg45
V8
sg33
F0.73425388336181641
sS'trials2.thisN'
p2849
I5
sa(dp2850
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p2851
g47
(g588
S'\x06\x00\x00\x00\x00\x00\x00\x00'
tRp2852
sS'trials2.thisRepN'
p2853
I0
sS'trials2.thisTrialN'
p2854
I6
sg2793
S'./stim/MorphM2_01_orig.jpg'
p2855
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xa2"\xc0'
tRp2856
sg29
g47
(g49
S'\x00\x00\x00\x00\x00o(@'
tRp2857
sg30
I0
sg2797
g47
(g588
S'\x06\x00\x00\x00\x00\x00\x00\x00'
tRp2858
sg32
I1
sg41
g42
sg45
V8
sg33
F0.68588614463806152
sS'trials2.thisN'
p2859
I6
sa(dp2860
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p2861
g47
(g588
S'\x07\x00\x00\x00\x00\x00\x00\x00'
tRp2862
sS'trials2.thisRepN'
p2863
I0
sS'trials2.thisTrialN'
p2864
I7
sg2793
S'./stim/MorphF9_06_orig.jpg'
p2865
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xb1"\xc0'
tRp2866
sg29
g47
(g49
S'\x00\x00\x00\x00\x00Q(@'
tRp2867
sg30
I0
sg2797
g47
(g588
S'\x07\x00\x00\x00\x00\x00\x00\x00'
tRp2868
sg32
I1
sg41
g42
sg45
V8
sg33
F0.75270199775695801
sS'trials2.thisN'
p2869
I7
sa(dp2870
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p2871
g47
(g588
S'\x08\x00\x00\x00\x00\x00\x00\x00'
tRp2872
sS'trials2.thisRepN'
p2873
I0
sS'trials2.thisTrialN'
p2874
I8
sg2793
S'./stim/MorphM10_09_orig.jpg'
p2875
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xb1"\xc0'
tRp2876
sg29
g47
(g49
S'\x00\x00\x00\x00\x00Q(@'
tRp2877
sg30
I1
sg2797
g47
(g588
S'\x08\x00\x00\x00\x00\x00\x00\x00'
tRp2878
sg32
I0
sg41
g42
sg45
V8
sg33
F0.71991491317749023
sS'trials2.thisN'
p2879
I8
sa(dp2880
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p2881
g47
(g588
S'\t\x00\x00\x00\x00\x00\x00\x00'
tRp2882
sS'trials2.thisRepN'
p2883
I0
sS'trials2.thisTrialN'
p2884
I9
sg2793
S'./stim/MorphM6_03_orig.jpg'
p2885
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xa2"\xc0'
tRp2886
sg29
g47
(g49
S'\x00\x00\x00\x00\x00`(@'
tRp2887
sg30
I0
sg2797
g47
(g588
S'\t\x00\x00\x00\x00\x00\x00\x00'
tRp2888
sg32
I1
sg41
g42
sg45
V8
sg33
F0.75175595283508301
sS'trials2.thisN'
p2889
I9
sa(dp2890
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p2891
g47
(g588
S'\n\x00\x00\x00\x00\x00\x00\x00'
tRp2892
sS'trials2.thisRepN'
p2893
I0
sS'trials2.thisTrialN'
p2894
I10
sg2793
S'./stim/MorphF2_07_orig.jpg'
p2895
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x84"\xc0'
tRp2896
sg29
g47
(g49
S'\x00\x00\x00\x00\x00o(@'
tRp2897
sg30
I1
sg2797
g47
(g588
S'\n\x00\x00\x00\x00\x00\x00\x00'
tRp2898
sg32
I0
sg41
g42
sg45
V8
sg33
F0.87005090713500977
sS'trials2.thisN'
p2899
I10
sa(dp2900
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p2901
g47
(g588
S'\x0b\x00\x00\x00\x00\x00\x00\x00'
tRp2902
sS'trials2.thisRepN'
p2903
I0
sS'trials2.thisTrialN'
p2904
I11
sg2793
S'./stim/MorphM9_03_orig.jpg'
p2905
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00u"\xc0'
tRp2906
sg29
g47
(g49
S'\x00\x00\x00\x00\x00~(@'
tRp2907
sg30
I0
sg2797
g47
(g588
S'\x0b\x00\x00\x00\x00\x00\x00\x00'
tRp2908
sg32
I1
sg41
g42
sg45
V8
sg33
F4.6744852066040039
sS'trials2.thisN'
p2909
I11
sa(dp2910
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p2911
g47
(g588
S'\x0c\x00\x00\x00\x00\x00\x00\x00'
tRp2912
sS'trials2.thisRepN'
p2913
I0
sS'trials2.thisTrialN'
p2914
I12
sg2793
S'./stim/MorphM7_02_orig.jpg'
p2915
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00u"\xc0'
tRp2916
sg29
g47
(g49
S'\x00\x00\x00\x00\x00~(@'
tRp2917
sg30
I1
sg2797
g47
(g588
S'\x0c\x00\x00\x00\x00\x00\x00\x00'
tRp2918
sg32
I0
sg41
g42
sg45
V8
sg33
F2.1105058193206787
sS'trials2.thisN'
p2919
I12
sa(dp2920
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p2921
g47
(g588
S'\r\x00\x00\x00\x00\x00\x00\x00'
tRp2922
sS'trials2.thisRepN'
p2923
I0
sS'trials2.thisTrialN'
p2924
I13
sg2793
S'./stim/MorphF8_06_orig.jpg'
p2925
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00u"\xc0'
tRp2926
sg29
g47
(g49
S'\x00\x00\x00\x00\x00o(@'
tRp2927
sg30
I0
sg2797
g47
(g588
S'\r\x00\x00\x00\x00\x00\x00\x00'
tRp2928
sg32
I1
sg41
g42
sg45
V8
sg33
F3.8876240253448486
sS'trials2.thisN'
p2929
I13
sa(dp2930
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p2931
g47
(g588
S'\x0e\x00\x00\x00\x00\x00\x00\x00'
tRp2932
sS'trials2.thisRepN'
p2933
I0
sS'trials2.thisTrialN'
p2934
I14
sg2793
S'./stim/MorphM5_05_orig.jpg'
p2935
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x93"\xc0'
tRp2936
sg29
g47
(g49
S'\x00\x00\x00\x00\x00Q(@'
tRp2937
sg30
I1
sg2797
g47
(g588
S'\x0e\x00\x00\x00\x00\x00\x00\x00'
tRp2938
sg32
I0
sg41
g42
sg45
V8
sg33
F0.81955409049987793
sS'trials2.thisN'
p2939
I14
sa(dp2940
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p2941
g47
(g588
S'\x0f\x00\x00\x00\x00\x00\x00\x00'
tRp2942
sS'trials2.thisRepN'
p2943
I0
sS'trials2.thisTrialN'
p2944
I15
sg2793
S'./stim/MorphM10_04_orig.jpg'
p2945
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x93"\xc0'
tRp2946
sg29
g47
(g49
S'\x00\x00\x00\x00\x00Q(@'
tRp2947
sg30
I1
sg2797
g47
(g588
S'\x0f\x00\x00\x00\x00\x00\x00\x00'
tRp2948
sg32
I0
sg41
g42
sg45
V8
sg33
F4.2866470813751221
sS'trials2.thisN'
p2949
I15
sa(dp2950
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p2951
g47
(g588
S'\x10\x00\x00\x00\x00\x00\x00\x00'
tRp2952
sS'trials2.thisRepN'
p2953
I0
sS'trials2.thisTrialN'
p2954
I16
sg2793
S'./stim/MorphM7_10_orig.jpg'
p2955
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x93"\xc0'
tRp2956
sg29
g47
(g49
S'\x00\x00\x00\x00\x00Q(@'
tRp2957
sg30
I1
sg2797
g47
(g588
S'\x10\x00\x00\x00\x00\x00\x00\x00'
tRp2958
sg32
I0
sg41
g42
sg45
V8
sg33
F0.76990008354187012
sS'trials2.thisN'
p2959
I16
sa(dp2960
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p2961
g47
(g588
S'\x11\x00\x00\x00\x00\x00\x00\x00'
tRp2962
sS'trials2.thisRepN'
p2963
I0
sS'trials2.thisTrialN'
p2964
I17
sg2793
S'./stim/MorphF1_07_orig.jpg'
p2965
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x93"\xc0'
tRp2966
sg29
g47
(g49
S'\x00\x00\x00\x00\x00Q(@'
tRp2967
sg30
I0
sg2797
g47
(g588
S'\x11\x00\x00\x00\x00\x00\x00\x00'
tRp2968
sg32
I1
sg41
g42
sg45
V8
sg33
F0.68440485000610352
sS'trials2.thisN'
p2969
I17
sa(dp2970
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p2971
g47
(g588
S'\x12\x00\x00\x00\x00\x00\x00\x00'
tRp2972
sS'trials2.thisRepN'
p2973
I0
sS'trials2.thisTrialN'
p2974
I18
sg2793
S'./stim/MorphM9_10_orig.jpg'
p2975
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x93"\xc0'
tRp2976
sg29
g47
(g49
S'\x00\x00\x00\x00\x00Q(@'
tRp2977
sg30
I1
sg2797
g47
(g588
S'\x12\x00\x00\x00\x00\x00\x00\x00'
tRp2978
sg32
I0
sg41
g42
sg45
V8
sg33
F1.1055188179016113
sS'trials2.thisN'
p2979
I18
sa(dp2980
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p2981
g47
(g588
S'\x13\x00\x00\x00\x00\x00\x00\x00'
tRp2982
sS'trials2.thisRepN'
p2983
I0
sS'trials2.thisTrialN'
p2984
I19
sg2793
S'./stim/MorphM3_09_orig.jpg'
p2985
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x93"\xc0'
tRp2986
sg29
g47
(g49
S'\x00\x00\x00\x00\x00Q(@'
tRp2987
sg30
I1
sg2797
g47
(g588
S'\x13\x00\x00\x00\x00\x00\x00\x00'
tRp2988
sg32
I0
sg41
g42
sg45
V8
sg33
F0.88692879676818848
sS'trials2.thisN'
p2989
I19
sa(dp2990
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p2991
g47
(g588
S'\x14\x00\x00\x00\x00\x00\x00\x00'
tRp2992
sS'trials2.thisRepN'
p2993
I0
sS'trials2.thisTrialN'
p2994
I20
sg2793
S'./stim/MorphF5_05_orig.jpg'
p2995
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x93"\xc0'
tRp2996
sg29
g47
(g49
S'\x00\x00\x00\x00\x00Q(@'
tRp2997
sg30
I0
sg2797
g47
(g588
S'\x14\x00\x00\x00\x00\x00\x00\x00'
tRp2998
sg32
I1
sg41
g42
sg45
V8
sg33
F1.4565858840942383
sS'trials2.thisN'
p2999
I20
sa(dp3000
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3001
g47
(g588
S'\x15\x00\x00\x00\x00\x00\x00\x00'
tRp3002
sS'trials2.thisRepN'
p3003
I0
sS'trials2.thisTrialN'
p3004
I21
sg2793
S'./stim/MorphF4_10_orig.jpg'
p3005
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x93"\xc0'
tRp3006
sg29
g47
(g49
S'\x00\x00\x00\x00\x00Q(@'
tRp3007
sg30
I1
sg2797
g47
(g588
S'\x15\x00\x00\x00\x00\x00\x00\x00'
tRp3008
sg32
I0
sg41
g42
sg45
V8
sg33
F1.1881000995635986
sS'trials2.thisN'
p3009
I21
sa(dp3010
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3011
g47
(g588
S'\x16\x00\x00\x00\x00\x00\x00\x00'
tRp3012
sS'trials2.thisRepN'
p3013
I0
sS'trials2.thisTrialN'
p3014
I22
sg2793
S'./stim/MorphF5_03_orig.jpg'
p3015
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x93"\xc0'
tRp3016
sg29
g47
(g49
S'\x00\x00\x00\x00\x00Q(@'
tRp3017
sg30
I0
sg2797
g47
(g588
S'\x16\x00\x00\x00\x00\x00\x00\x00'
tRp3018
sg32
I1
sg41
g42
sg45
V8
sg33
F0.85408711433410645
sS'trials2.thisN'
p3019
I22
sa(dp3020
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3021
g47
(g588
S'\x17\x00\x00\x00\x00\x00\x00\x00'
tRp3022
sS'trials2.thisRepN'
p3023
I0
sS'trials2.thisTrialN'
p3024
I23
sg2793
S'./stim/MorphM1_06_orig.jpg'
p3025
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x93"\xc0'
tRp3026
sg29
g47
(g49
S'\x00\x00\x00\x00\x00Q(@'
tRp3027
sg30
I0
sg2797
g47
(g588
S'\x17\x00\x00\x00\x00\x00\x00\x00'
tRp3028
sg32
I1
sg41
g42
sg45
V8
sg33
F1.9926559925079346
sS'trials2.thisN'
p3029
I23
sa(dp3030
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3031
g47
(g588
S'\x18\x00\x00\x00\x00\x00\x00\x00'
tRp3032
sS'trials2.thisRepN'
p3033
I0
sS'trials2.thisTrialN'
p3034
I24
sg2793
S'./stim/MorphF10_03_orig.jpg'
p3035
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x93"\xc0'
tRp3036
sg29
g47
(g49
S'\x00\x00\x00\x00\x00B(@'
tRp3037
sg30
I0
sg2797
g47
(g588
S'\x18\x00\x00\x00\x00\x00\x00\x00'
tRp3038
sg32
I1
sg41
g42
sg45
V8
sg33
F1.5410590171813965
sS'trials2.thisN'
p3039
I24
sa(dp3040
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3041
g47
(g588
S'\x19\x00\x00\x00\x00\x00\x00\x00'
tRp3042
sS'trials2.thisRepN'
p3043
I0
sS'trials2.thisTrialN'
p3044
I25
sg2793
S'./stim/MorphF8_08_orig.jpg'
p3045
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xa2"\xc0'
tRp3046
sg29
g47
(g49
S'\x00\x00\x00\x00\x003(@'
tRp3047
sg30
I1
sg2797
g47
(g588
S'\x19\x00\x00\x00\x00\x00\x00\x00'
tRp3048
sg32
I0
sg41
g42
sg45
V8
sg33
F1.1377410888671875
sS'trials2.thisN'
p3049
I25
sa(dp3050
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3051
g47
(g588
S'\x1a\x00\x00\x00\x00\x00\x00\x00'
tRp3052
sS'trials2.thisRepN'
p3053
I0
sS'trials2.thisTrialN'
p3054
I26
sg2793
S'./stim/MorphM8_10_orig.jpg'
p3055
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xa2"\xc0'
tRp3056
sg29
g47
(g49
S'\x00\x00\x00\x00\x003(@'
tRp3057
sg30
I1
sg2797
g47
(g588
S'\x1a\x00\x00\x00\x00\x00\x00\x00'
tRp3058
sg32
I0
sg41
g42
sg45
V8
sg33
F1.0704331398010254
sS'trials2.thisN'
p3059
I26
sa(dp3060
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3061
g47
(g588
S'\x1b\x00\x00\x00\x00\x00\x00\x00'
tRp3062
sS'trials2.thisRepN'
p3063
I0
sS'trials2.thisTrialN'
p3064
I27
sg2793
S'./stim/MorphM4_02_orig.jpg'
p3065
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xa2"\xc0'
tRp3066
sg29
g47
(g49
S'\x00\x00\x00\x00\x003(@'
tRp3067
sg30
I0
sg2797
g47
(g588
S'\x1b\x00\x00\x00\x00\x00\x00\x00'
tRp3068
sg32
I1
sg41
g42
sg45
V8
sg33
F3.4845938682556152
sS'trials2.thisN'
p3069
I27
sa(dp3070
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3071
g47
(g588
S'\x1c\x00\x00\x00\x00\x00\x00\x00'
tRp3072
sS'trials2.thisRepN'
p3073
I0
sS'trials2.thisTrialN'
p3074
I28
sg2793
S'./stim/MorphM5_07_orig.jpg'
p3075
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xa2"\xc0'
tRp3076
sg29
g47
(g49
S'\x00\x00\x00\x00\x003(@'
tRp3077
sg30
I1
sg2797
g47
(g588
S'\x1c\x00\x00\x00\x00\x00\x00\x00'
tRp3078
sg32
I0
sg41
g42
sg45
V8
sg33
F0.73600506782531738
sS'trials2.thisN'
p3079
I28
sa(dp3080
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3081
g47
(g588
S'\x1d\x00\x00\x00\x00\x00\x00\x00'
tRp3082
sS'trials2.thisRepN'
p3083
I0
sS'trials2.thisTrialN'
p3084
I29
sg2793
S'./stim/MorphF10_07_orig.jpg'
p3085
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xa2"\xc0'
tRp3086
sg29
g47
(g49
S'\x00\x00\x00\x00\x003(@'
tRp3087
sg30
I1
sg2797
g47
(g588
S'\x1d\x00\x00\x00\x00\x00\x00\x00'
tRp3088
sg32
I0
sg41
g42
sg45
V8
sg33
F1.9247710704803467
sS'trials2.thisN'
p3089
I29
sa(dp3090
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3091
g47
(g588
S'\x1e\x00\x00\x00\x00\x00\x00\x00'
tRp3092
sS'trials2.thisRepN'
p3093
I0
sS'trials2.thisTrialN'
p3094
I30
sg2793
S'./stim/MorphF6_05_orig.jpg'
p3095
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xa2"\xc0'
tRp3096
sg29
g47
(g49
S'\x00\x00\x00\x00\x003(@'
tRp3097
sg30
I0
sg2797
g47
(g588
S'\x1e\x00\x00\x00\x00\x00\x00\x00'
tRp3098
sg32
I1
sg41
g42
sg45
V8
sg33
F0.90313601493835449
sS'trials2.thisN'
p3099
I30
sa(dp3100
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3101
g47
(g588
S'\x1f\x00\x00\x00\x00\x00\x00\x00'
tRp3102
sS'trials2.thisRepN'
p3103
I0
sS'trials2.thisTrialN'
p3104
I31
sg2793
S'./stim/MorphM1_07_orig.jpg'
p3105
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xa2"\xc0'
tRp3106
sg29
g47
(g49
S'\x00\x00\x00\x00\x003(@'
tRp3107
sg30
I1
sg2797
g47
(g588
S'\x1f\x00\x00\x00\x00\x00\x00\x00'
tRp3108
sg32
I0
sg41
g42
sg45
V8
sg33
F2.8310518264770508
sS'trials2.thisN'
p3109
I31
sa(dp3110
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3111
g47
(g588
S' \x00\x00\x00\x00\x00\x00\x00'
tRp3112
sS'trials2.thisRepN'
p3113
I0
sS'trials2.thisTrialN'
p3114
I32
sg2793
S'./stim/MorphF5_07_orig.jpg'
p3115
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xa2"\xc0'
tRp3116
sg29
g47
(g49
S'\x00\x00\x00\x00\x003(@'
tRp3117
sg30
I1
sg2797
g47
(g588
S' \x00\x00\x00\x00\x00\x00\x00'
tRp3118
sg32
I0
sg41
g42
sg45
V8
sg33
F1.2558550834655762
sS'trials2.thisN'
p3119
I32
sa(dp3120
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3121
g47
(g588
S'!\x00\x00\x00\x00\x00\x00\x00'
tRp3122
sS'trials2.thisRepN'
p3123
I0
sS'trials2.thisTrialN'
p3124
I33
sg2793
S'./stim/MorphF2_06_orig.jpg'
p3125
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xa2"\xc0'
tRp3126
sg29
g47
(g49
S'\x00\x00\x00\x00\x003(@'
tRp3127
sg30
I1
sg2797
g47
(g588
S'!\x00\x00\x00\x00\x00\x00\x00'
tRp3128
sg32
I0
sg41
g42
sg45
V8
sg33
F0.9036710262298584
sS'trials2.thisN'
p3129
I33
sa(dp3130
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3131
g47
(g588
S'"\x00\x00\x00\x00\x00\x00\x00'
tRp3132
sS'trials2.thisRepN'
p3133
I0
sS'trials2.thisTrialN'
p3134
I34
sg2793
S'./stim/MorphF6_06_orig.jpg'
p3135
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xa2"\xc0'
tRp3136
sg29
g47
(g49
S'\x00\x00\x00\x00\x003(@'
tRp3137
sg30
I1
sg2797
g47
(g588
S'"\x00\x00\x00\x00\x00\x00\x00'
tRp3138
sg32
I0
sg41
g42
sg45
V8
sg33
F1.1552410125732422
sS'trials2.thisN'
p3139
I34
sa(dp3140
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3141
g47
(g588
S'#\x00\x00\x00\x00\x00\x00\x00'
tRp3142
sS'trials2.thisRepN'
p3143
I0
sS'trials2.thisTrialN'
p3144
I35
sg2793
S'./stim/MorphF9_02_orig.jpg'
p3145
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xa2"\xc0'
tRp3146
sg29
g47
(g49
S'\x00\x00\x00\x00\x003(@'
tRp3147
sg30
I0
sg2797
g47
(g588
S'#\x00\x00\x00\x00\x00\x00\x00'
tRp3148
sg32
I1
sg41
g42
sg45
V8
sg33
F1.1548519134521484
sS'trials2.thisN'
p3149
I35
sa(dp3150
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3151
g47
(g588
S'$\x00\x00\x00\x00\x00\x00\x00'
tRp3152
sS'trials2.thisRepN'
p3153
I0
sS'trials2.thisTrialN'
p3154
I36
sg2793
S'./stim/MorphM9_01_orig.jpg'
p3155
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xa2"\xc0'
tRp3156
sg29
g47
(g49
S'\x00\x00\x00\x00\x003(@'
tRp3157
sg30
I0
sg2797
g47
(g588
S'$\x00\x00\x00\x00\x00\x00\x00'
tRp3158
sg32
I1
sg41
g42
sg45
V8
sg33
F0.80216884613037109
sS'trials2.thisN'
p3159
I36
sa(dp3160
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3161
g47
(g588
S'%\x00\x00\x00\x00\x00\x00\x00'
tRp3162
sS'trials2.thisRepN'
p3163
I0
sS'trials2.thisTrialN'
p3164
I37
sg2793
S'./stim/MorphF7_07_orig.jpg'
p3165
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xa2"\xc0'
tRp3166
sg29
g47
(g49
S'\x00\x00\x00\x00\x003(@'
tRp3167
sg30
I0
sg2797
g47
(g588
S'%\x00\x00\x00\x00\x00\x00\x00'
tRp3168
sg32
I1
sg41
g42
sg45
V8
sg33
F0.5672299861907959
sS'trials2.thisN'
p3169
I37
sa(dp3170
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3171
g47
(g588
S'&\x00\x00\x00\x00\x00\x00\x00'
tRp3172
sS'trials2.thisRepN'
p3173
I0
sS'trials2.thisTrialN'
p3174
I38
sg2793
S'./stim/MorphF5_09_orig.jpg'
p3175
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xa2"\xc0'
tRp3176
sg29
g47
(g49
S'\x00\x00\x00\x00\x003(@'
tRp3177
sg30
I1
sg2797
g47
(g588
S'&\x00\x00\x00\x00\x00\x00\x00'
tRp3178
sg32
I0
sg41
g42
sg45
V8
sg33
F0.81975412368774414
sS'trials2.thisN'
p3179
I38
sa(dp3180
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3181
g47
(g588
S"'\x00\x00\x00\x00\x00\x00\x00"
tRp3182
sS'trials2.thisRepN'
p3183
I0
sS'trials2.thisTrialN'
p3184
I39
sg2793
S'./stim/MorphM5_10_orig.jpg'
p3185
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x93"\xc0'
tRp3186
sg29
g47
(g49
S'\x00\x00\x00\x00\x00B(@'
tRp3187
sg30
I1
sg2797
g47
(g588
S"'\x00\x00\x00\x00\x00\x00\x00"
tRp3188
sg32
I0
sg41
g42
sg45
V8
sg33
F0.71915292739868164
sS'trials2.thisN'
p3189
I39
sa(dp3190
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3191
g47
(g588
S'(\x00\x00\x00\x00\x00\x00\x00'
tRp3192
sS'trials2.thisRepN'
p3193
I0
sS'trials2.thisTrialN'
p3194
I40
sg2793
S'./stim/MorphM8_03_orig.jpg'
p3195
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x93"\xc0'
tRp3196
sg29
g47
(g49
S'\x00\x00\x00\x00\x00B(@'
tRp3197
sg30
I0
sg2797
g47
(g588
S'(\x00\x00\x00\x00\x00\x00\x00'
tRp3198
sg32
I1
sg41
g42
sg45
V8
sg33
F0.98587608337402344
sS'trials2.thisN'
p3199
I40
sa(dp3200
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3201
g47
(g588
S')\x00\x00\x00\x00\x00\x00\x00'
tRp3202
sS'trials2.thisRepN'
p3203
I0
sS'trials2.thisTrialN'
p3204
I41
sg2793
S'./stim/MorphM5_04_orig.jpg'
p3205
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x84"\xc0'
tRp3206
sg29
g47
(g49
S'\x00\x00\x00\x00\x00B(@'
tRp3207
sg30
I1
sg2797
g47
(g588
S')\x00\x00\x00\x00\x00\x00\x00'
tRp3208
sg32
I0
sg41
g42
sg45
V8
sg33
F0.75319409370422363
sS'trials2.thisN'
p3209
I41
sa(dp3210
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3211
g47
(g588
S'*\x00\x00\x00\x00\x00\x00\x00'
tRp3212
sS'trials2.thisRepN'
p3213
I0
sS'trials2.thisTrialN'
p3214
I42
sg2793
S'./stim/MorphF6_08_orig.jpg'
p3215
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00u"\xc0'
tRp3216
sg29
g47
(g49
S'\x00\x00\x00\x00\x003(@'
tRp3217
sg30
I0
sg2797
g47
(g588
S'*\x00\x00\x00\x00\x00\x00\x00'
tRp3218
sg32
I1
sg41
g42
sg45
V8
sg33
F2.8312809467315674
sS'trials2.thisN'
p3219
I42
sa(dp3220
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3221
g47
(g588
S'+\x00\x00\x00\x00\x00\x00\x00'
tRp3222
sS'trials2.thisRepN'
p3223
I0
sS'trials2.thisTrialN'
p3224
I43
sg2793
S'./stim/MorphF9_03_orig.jpg'
p3225
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00u"\xc0'
tRp3226
sg29
g47
(g49
S'\x00\x00\x00\x00\x00$(@'
tRp3227
sg30
I0
sg2797
g47
(g588
S'+\x00\x00\x00\x00\x00\x00\x00'
tRp3228
sg32
I1
sg41
g42
sg45
V8
sg33
F2.311378002166748
sS'trials2.thisN'
p3229
I43
sa(dp3230
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3231
g47
(g588
S',\x00\x00\x00\x00\x00\x00\x00'
tRp3232
sS'trials2.thisRepN'
p3233
I0
sS'trials2.thisTrialN'
p3234
I44
sg2793
S'./stim/MorphM1_03_orig.jpg'
p3235
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00u"\xc0'
tRp3236
sg29
g47
(g49
S'\x00\x00\x00\x00\x00$(@'
tRp3237
sg30
I0
sg2797
g47
(g588
S',\x00\x00\x00\x00\x00\x00\x00'
tRp3238
sg32
I1
sg41
g42
sg45
V8
sg33
F0.88552093505859375
sS'trials2.thisN'
p3239
I44
sa(dp3240
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3241
g47
(g588
S'-\x00\x00\x00\x00\x00\x00\x00'
tRp3242
sS'trials2.thisRepN'
p3243
I0
sS'trials2.thisTrialN'
p3244
I45
sg2793
S'./stim/MorphM2_02_orig.jpg'
p3245
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00u"\xc0'
tRp3246
sg29
g47
(g49
S'\x00\x00\x00\x00\x00$(@'
tRp3247
sg30
I0
sg2797
g47
(g588
S'-\x00\x00\x00\x00\x00\x00\x00'
tRp3248
sg32
I1
sg41
g42
sg45
V8
sg33
F0.75146818161010742
sS'trials2.thisN'
p3249
I45
sa(dp3250
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3251
g47
(g588
S'.\x00\x00\x00\x00\x00\x00\x00'
tRp3252
sS'trials2.thisRepN'
p3253
I0
sS'trials2.thisTrialN'
p3254
I46
sg2793
S'./stim/MorphF5_06_orig.jpg'
p3255
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00u"\xc0'
tRp3256
sg29
g47
(g49
S'\x00\x00\x00\x00\x00$(@'
tRp3257
sg30
I1
sg2797
g47
(g588
S'.\x00\x00\x00\x00\x00\x00\x00'
tRp3258
sg32
I0
sg41
g42
sg45
V8
sg33
F1.2890000343322754
sS'trials2.thisN'
p3259
I46
sa(dp3260
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3261
g47
(g588
S'/\x00\x00\x00\x00\x00\x00\x00'
tRp3262
sS'trials2.thisRepN'
p3263
I0
sS'trials2.thisTrialN'
p3264
I47
sg2793
S'./stim/MorphM1_09_orig.jpg'
p3265
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00u"\xc0'
tRp3266
sg29
g47
(g49
S'\x00\x00\x00\x00\x00$(@'
tRp3267
sg30
I1
sg2797
g47
(g588
S'/\x00\x00\x00\x00\x00\x00\x00'
tRp3268
sg32
I0
sg41
g42
sg45
V8
sg33
F2.1606650352478027
sS'trials2.thisN'
p3269
I47
sa(dp3270
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3271
g47
(g588
S'0\x00\x00\x00\x00\x00\x00\x00'
tRp3272
sS'trials2.thisRepN'
p3273
I0
sS'trials2.thisTrialN'
p3274
I48
sg2793
S'./stim/MorphM9_08_orig.jpg'
p3275
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00u"\xc0'
tRp3276
sg29
g47
(g49
S'\x00\x00\x00\x00\x00$(@'
tRp3277
sg30
I0
sg2797
g47
(g588
S'0\x00\x00\x00\x00\x00\x00\x00'
tRp3278
sg32
I1
sg41
g42
sg45
V8
sg33
F1.2893400192260742
sS'trials2.thisN'
p3279
I48
sa(dp3280
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3281
g47
(g588
S'1\x00\x00\x00\x00\x00\x00\x00'
tRp3282
sS'trials2.thisRepN'
p3283
I0
sS'trials2.thisTrialN'
p3284
I49
sg2793
S'./stim/MorphF6_00_orig.jpg'
p3285
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00u"\xc0'
tRp3286
sg29
g47
(g49
S'\x00\x00\x00\x00\x00$(@'
tRp3287
sg30
I0
sg2797
g47
(g588
S'1\x00\x00\x00\x00\x00\x00\x00'
tRp3288
sg32
I1
sg41
g42
sg45
V8
sg33
F1.2897350788116455
sS'trials2.thisN'
p3289
I49
sa(dp3290
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3291
g47
(g588
S'2\x00\x00\x00\x00\x00\x00\x00'
tRp3292
sS'trials2.thisRepN'
p3293
I0
sS'trials2.thisTrialN'
p3294
I50
sg2793
S'./stim/MorphF7_03_orig.jpg'
p3295
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00u"\xc0'
tRp3296
sg29
g47
(g49
S'\x00\x00\x00\x00\x00$(@'
tRp3297
sg30
I0
sg2797
g47
(g588
S'2\x00\x00\x00\x00\x00\x00\x00'
tRp3298
sg32
I1
sg41
g42
sg45
V8
sg33
F0.51741886138916016
sS'trials2.thisN'
p3299
I50
sa(dp3300
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3301
g47
(g588
S'3\x00\x00\x00\x00\x00\x00\x00'
tRp3302
sS'trials2.thisRepN'
p3303
I0
sS'trials2.thisTrialN'
p3304
I51
sg2793
S'./stim/MorphM6_07_orig.jpg'
p3305
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00f"\xc0'
tRp3306
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x15(@'
tRp3307
sg30
I1
sg2797
g47
(g588
S'3\x00\x00\x00\x00\x00\x00\x00'
tRp3308
sg32
I0
sg41
g42
sg45
V8
sg33
F2.8154900074005127
sS'trials2.thisN'
p3309
I51
sa(dp3310
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3311
g47
(g588
S'4\x00\x00\x00\x00\x00\x00\x00'
tRp3312
sS'trials2.thisRepN'
p3313
I0
sS'trials2.thisTrialN'
p3314
I52
sg2793
S'./stim/MorphF4_09_orig.jpg'
p3315
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00f"\xc0'
tRp3316
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x15(@'
tRp3317
sg30
I1
sg2797
g47
(g588
S'4\x00\x00\x00\x00\x00\x00\x00'
tRp3318
sg32
I0
sg41
g42
sg45
V8
sg33
F0.81665992736816406
sS'trials2.thisN'
p3319
I52
sa(dp3320
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3321
g47
(g588
S'5\x00\x00\x00\x00\x00\x00\x00'
tRp3322
sS'trials2.thisRepN'
p3323
I0
sS'trials2.thisTrialN'
p3324
I53
sg2793
S'./stim/MorphF3_04_orig.jpg'
p3325
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00f"\xc0'
tRp3326
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x15(@'
tRp3327
sg30
I0
sg2797
g47
(g588
S'5\x00\x00\x00\x00\x00\x00\x00'
tRp3328
sg32
I1
sg41
g42
sg45
V8
sg33
F0.70293188095092773
sS'trials2.thisN'
p3329
I53
sa(dp3330
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3331
g47
(g588
S'6\x00\x00\x00\x00\x00\x00\x00'
tRp3332
sS'trials2.thisRepN'
p3333
I0
sS'trials2.thisTrialN'
p3334
I54
sg2793
S'./stim/MorphM10_03_orig.jpg'
p3335
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00f"\xc0'
tRp3336
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x15(@'
tRp3337
sg30
I0
sg2797
g47
(g588
S'6\x00\x00\x00\x00\x00\x00\x00'
tRp3338
sg32
I1
sg41
g42
sg45
V8
sg33
F1.638775110244751
sS'trials2.thisN'
p3339
I54
sa(dp3340
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3341
g47
(g588
S'7\x00\x00\x00\x00\x00\x00\x00'
tRp3342
sS'trials2.thisRepN'
p3343
I0
sS'trials2.thisTrialN'
p3344
I55
sg2793
S'./stim/MorphF10_09_orig.jpg'
p3345
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00f"\xc0'
tRp3346
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x15(@'
tRp3347
sg30
I1
sg2797
g47
(g588
S'7\x00\x00\x00\x00\x00\x00\x00'
tRp3348
sg32
I0
sg41
g42
sg45
V8
sg33
F3.5016021728515625
sS'trials2.thisN'
p3349
I55
sa(dp3350
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3351
g47
(g588
S'8\x00\x00\x00\x00\x00\x00\x00'
tRp3352
sS'trials2.thisRepN'
p3353
I0
sS'trials2.thisTrialN'
p3354
I56
sg2793
S'./stim/MorphF8_10_orig.jpg'
p3355
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00f"\xc0'
tRp3356
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x15(@'
tRp3357
sg30
I1
sg2797
g47
(g588
S'8\x00\x00\x00\x00\x00\x00\x00'
tRp3358
sg32
I0
sg41
g42
sg45
V8
sg33
F0.73638486862182617
sS'trials2.thisN'
p3359
I56
sa(dp3360
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3361
g47
(g588
S'9\x00\x00\x00\x00\x00\x00\x00'
tRp3362
sS'trials2.thisRepN'
p3363
I0
sS'trials2.thisTrialN'
p3364
I57
sg2793
S'./stim/MorphM10_05_orig.jpg'
p3365
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00f"\xc0'
tRp3366
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x15(@'
tRp3367
sg30
I1
sg2797
g47
(g588
S'9\x00\x00\x00\x00\x00\x00\x00'
tRp3368
sg32
I0
sg41
g42
sg45
V8
sg33
F0.85281586647033691
sS'trials2.thisN'
p3369
I57
sa(dp3370
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3371
g47
(g588
S':\x00\x00\x00\x00\x00\x00\x00'
tRp3372
sS'trials2.thisRepN'
p3373
I0
sS'trials2.thisTrialN'
p3374
I58
sg2793
S'./stim/MorphM1_02_orig.jpg'
p3375
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00f"\xc0'
tRp3376
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x15(@'
tRp3377
sg30
I0
sg2797
g47
(g588
S':\x00\x00\x00\x00\x00\x00\x00'
tRp3378
sg32
I1
sg41
g42
sg45
V8
sg33
F0.87023115158081055
sS'trials2.thisN'
p3379
I58
sa(dp3380
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3381
g47
(g588
S';\x00\x00\x00\x00\x00\x00\x00'
tRp3382
sS'trials2.thisRepN'
p3383
I0
sS'trials2.thisTrialN'
p3384
I59
sg2793
S'./stim/MorphM10_00_orig.jpg'
p3385
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00f"\xc0'
tRp3386
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x15(@'
tRp3387
sg30
I0
sg2797
g47
(g588
S';\x00\x00\x00\x00\x00\x00\x00'
tRp3388
sg32
I1
sg41
g42
sg45
V8
sg33
F0.88695907592773438
sS'trials2.thisN'
p3389
I59
sa(dp3390
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3391
g47
(g588
S'<\x00\x00\x00\x00\x00\x00\x00'
tRp3392
sS'trials2.thisRepN'
p3393
I0
sS'trials2.thisTrialN'
p3394
I60
sg2793
S'./stim/MorphM4_05_orig.jpg'
p3395
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00f"\xc0'
tRp3396
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x15(@'
tRp3397
sg30
I0
sg2797
g47
(g588
S'<\x00\x00\x00\x00\x00\x00\x00'
tRp3398
sg32
I1
sg41
g42
sg45
V8
sg33
F0.87015509605407715
sS'trials2.thisN'
p3399
I60
sa(dp3400
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3401
g47
(g588
S'=\x00\x00\x00\x00\x00\x00\x00'
tRp3402
sS'trials2.thisRepN'
p3403
I0
sS'trials2.thisTrialN'
p3404
I61
sg2793
S'./stim/MorphM1_10_orig.jpg'
p3405
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00f"\xc0'
tRp3406
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x15(@'
tRp3407
sg30
I1
sg2797
g47
(g588
S'=\x00\x00\x00\x00\x00\x00\x00'
tRp3408
sg32
I0
sg41
g42
sg45
V8
sg33
F2.110741138458252
sS'trials2.thisN'
p3409
I61
sa(dp3410
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3411
g47
(g588
S'>\x00\x00\x00\x00\x00\x00\x00'
tRp3412
sS'trials2.thisRepN'
p3413
I0
sS'trials2.thisTrialN'
p3414
I62
sg2793
S'./stim/MorphF3_03_orig.jpg'
p3415
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00f"\xc0'
tRp3416
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x15(@'
tRp3417
sg30
I0
sg2797
g47
(g588
S'>\x00\x00\x00\x00\x00\x00\x00'
tRp3418
sg32
I1
sg41
g42
sg45
V8
sg33
F0.77060699462890625
sS'trials2.thisN'
p3419
I62
sa(dp3420
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3421
g47
(g588
S'?\x00\x00\x00\x00\x00\x00\x00'
tRp3422
sS'trials2.thisRepN'
p3423
I0
sS'trials2.thisTrialN'
p3424
I63
sg2793
S'./stim/MorphF6_03_orig.jpg'
p3425
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00f"\xc0'
tRp3426
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x15(@'
tRp3427
sg30
I0
sg2797
g47
(g588
S'?\x00\x00\x00\x00\x00\x00\x00'
tRp3428
sg32
I1
sg41
g42
sg45
V8
sg33
F0.83340692520141602
sS'trials2.thisN'
p3429
I63
sa(dp3430
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3431
g47
(g588
S'@\x00\x00\x00\x00\x00\x00\x00'
tRp3432
sS'trials2.thisRepN'
p3433
I0
sS'trials2.thisTrialN'
p3434
I64
sg2793
S'./stim/MorphF8_09_orig.jpg'
p3435
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00f"\xc0'
tRp3436
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x15(@'
tRp3437
sg30
I1
sg2797
g47
(g588
S'@\x00\x00\x00\x00\x00\x00\x00'
tRp3438
sg32
I0
sg41
g42
sg45
V8
sg33
F1.0549681186676025
sS'trials2.thisN'
p3439
I64
sa(dp3440
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3441
g47
(g588
S'A\x00\x00\x00\x00\x00\x00\x00'
tRp3442
sS'trials2.thisRepN'
p3443
I0
sS'trials2.thisTrialN'
p3444
I65
sg2793
S'./stim/MorphM8_08_orig.jpg'
p3445
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00f"\xc0'
tRp3446
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x15(@'
tRp3447
sg30
I0
sg2797
g47
(g588
S'A\x00\x00\x00\x00\x00\x00\x00'
tRp3448
sg32
I1
sg41
g42
sg45
V8
sg33
F0.736083984375
sS'trials2.thisN'
p3449
I65
sa(dp3450
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3451
g47
(g588
S'B\x00\x00\x00\x00\x00\x00\x00'
tRp3452
sS'trials2.thisRepN'
p3453
I0
sS'trials2.thisTrialN'
p3454
I66
sg2793
S'./stim/MorphM3_04_orig.jpg'
p3455
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00f"\xc0'
tRp3456
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x15(@'
tRp3457
sg30
I1
sg2797
g47
(g588
S'B\x00\x00\x00\x00\x00\x00\x00'
tRp3458
sg32
I0
sg41
g42
sg45
V8
sg33
F0.82011580467224121
sS'trials2.thisN'
p3459
I66
sa(dp3460
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3461
g47
(g588
S'C\x00\x00\x00\x00\x00\x00\x00'
tRp3462
sS'trials2.thisRepN'
p3463
I0
sS'trials2.thisTrialN'
p3464
I67
sg2793
S'./stim/MorphF3_06_orig.jpg'
p3465
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00f"\xc0'
tRp3466
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x15(@'
tRp3467
sg30
I0
sg2797
g47
(g588
S'C\x00\x00\x00\x00\x00\x00\x00'
tRp3468
sg32
I1
sg41
g42
sg45
V8
sg33
F0.56677603721618652
sS'trials2.thisN'
p3469
I67
sa(dp3470
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3471
g47
(g588
S'D\x00\x00\x00\x00\x00\x00\x00'
tRp3472
sS'trials2.thisRepN'
p3473
I0
sS'trials2.thisTrialN'
p3474
I68
sg2793
S'./stim/MorphF9_04_orig.jpg'
p3475
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00f"\xc0'
tRp3476
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x15(@'
tRp3477
sg30
I0
sg2797
g47
(g588
S'D\x00\x00\x00\x00\x00\x00\x00'
tRp3478
sg32
I1
sg41
g42
sg45
V8
sg33
F1.0709340572357178
sS'trials2.thisN'
p3479
I68
sa(dp3480
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3481
g47
(g588
S'E\x00\x00\x00\x00\x00\x00\x00'
tRp3482
sS'trials2.thisRepN'
p3483
I0
sS'trials2.thisTrialN'
p3484
I69
sg2793
S'./stim/MorphM9_00_orig.jpg'
p3485
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00f"\xc0'
tRp3486
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x15(@'
tRp3487
sg30
I0
sg2797
g47
(g588
S'E\x00\x00\x00\x00\x00\x00\x00'
tRp3488
sg32
I1
sg41
g42
sg45
V8
sg33
F1.1718189716339111
sS'trials2.thisN'
p3489
I69
sa(dp3490
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3491
g47
(g588
S'F\x00\x00\x00\x00\x00\x00\x00'
tRp3492
sS'trials2.thisRepN'
p3493
I0
sS'trials2.thisTrialN'
p3494
I70
sg2793
S'./stim/MorphM2_10_orig.jpg'
p3495
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00f"\xc0'
tRp3496
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x15(@'
tRp3497
sg30
I0
sg2797
g47
(g588
S'F\x00\x00\x00\x00\x00\x00\x00'
tRp3498
sg32
I1
sg41
g42
sg45
V8
sg33
F0.86901402473449707
sS'trials2.thisN'
p3499
I70
sa(dp3500
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3501
g47
(g588
S'G\x00\x00\x00\x00\x00\x00\x00'
tRp3502
sS'trials2.thisRepN'
p3503
I0
sS'trials2.thisTrialN'
p3504
I71
sg2793
S'./stim/MorphF1_10_orig.jpg'
p3505
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00W"\xc0'
tRp3506
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x15(@'
tRp3507
sg30
I0
sg2797
g47
(g588
S'G\x00\x00\x00\x00\x00\x00\x00'
tRp3508
sg32
I1
sg41
g42
sg45
V8
sg33
F0.71870517730712891
sS'trials2.thisN'
p3509
I71
sa(dp3510
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3511
g47
(g588
S'H\x00\x00\x00\x00\x00\x00\x00'
tRp3512
sS'trials2.thisRepN'
p3513
I0
sS'trials2.thisTrialN'
p3514
I72
sg2793
S'./stim/MorphF2_01_orig.jpg'
p3515
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00W"\xc0'
tRp3516
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x15(@'
tRp3517
sg30
I0
sg2797
g47
(g588
S'H\x00\x00\x00\x00\x00\x00\x00'
tRp3518
sg32
I1
sg41
g42
sg45
V8
sg33
F1.0189700126647949
sS'trials2.thisN'
p3519
I72
sa(dp3520
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3521
g47
(g588
S'I\x00\x00\x00\x00\x00\x00\x00'
tRp3522
sS'trials2.thisRepN'
p3523
I0
sS'trials2.thisTrialN'
p3524
I73
sg2793
S'./stim/MorphF5_08_orig.jpg'
p3525
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00W"\xc0'
tRp3526
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x15(@'
tRp3527
sg30
I1
sg2797
g47
(g588
S'I\x00\x00\x00\x00\x00\x00\x00'
tRp3528
sg32
I0
sg41
g42
sg45
V8
sg33
F0.78680300712585449
sS'trials2.thisN'
p3529
I73
sa(dp3530
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3531
g47
(g588
S'J\x00\x00\x00\x00\x00\x00\x00'
tRp3532
sS'trials2.thisRepN'
p3533
I0
sS'trials2.thisTrialN'
p3534
I74
sg2793
S'./stim/MorphF9_08_orig.jpg'
p3535
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00W"\xc0'
tRp3536
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x15(@'
tRp3537
sg30
I1
sg2797
g47
(g588
S'J\x00\x00\x00\x00\x00\x00\x00'
tRp3538
sg32
I0
sg41
g42
sg45
V8
sg33
F1.0711488723754883
sS'trials2.thisN'
p3539
I74
sa(dp3540
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3541
g47
(g588
S'K\x00\x00\x00\x00\x00\x00\x00'
tRp3542
sS'trials2.thisRepN'
p3543
I0
sS'trials2.thisTrialN'
p3544
I75
sg2793
S'./stim/MorphM3_00_orig.jpg'
p3545
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00H"\xc0'
tRp3546
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x15(@'
tRp3547
sg30
I0
sg2797
g47
(g588
S'K\x00\x00\x00\x00\x00\x00\x00'
tRp3548
sg32
I1
sg41
g42
sg45
V8
sg33
F1.2723419666290283
sS'trials2.thisN'
p3549
I75
sa(dp3550
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3551
g47
(g588
S'L\x00\x00\x00\x00\x00\x00\x00'
tRp3552
sS'trials2.thisRepN'
p3553
I0
sS'trials2.thisTrialN'
p3554
I76
sg2793
S'./stim/MorphF10_02_orig.jpg'
p3555
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00H"\xc0'
tRp3556
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x15(@'
tRp3557
sg30
I0
sg2797
g47
(g588
S'L\x00\x00\x00\x00\x00\x00\x00'
tRp3558
sg32
I1
sg41
g42
sg45
V8
sg33
F1.0538098812103271
sS'trials2.thisN'
p3559
I76
sa(dp3560
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3561
g47
(g588
S'M\x00\x00\x00\x00\x00\x00\x00'
tRp3562
sS'trials2.thisRepN'
p3563
I0
sS'trials2.thisTrialN'
p3564
I77
sg2793
S'./stim/MorphF7_01_orig.jpg'
p3565
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x009"\xc0'
tRp3566
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x06(@'
tRp3567
sg30
I0
sg2797
g47
(g588
S'M\x00\x00\x00\x00\x00\x00\x00'
tRp3568
sg32
I1
sg41
g42
sg45
V8
sg33
F0.71735405921936035
sS'trials2.thisN'
p3569
I77
sa(dp3570
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3571
g47
(g588
S'N\x00\x00\x00\x00\x00\x00\x00'
tRp3572
sS'trials2.thisRepN'
p3573
I0
sS'trials2.thisTrialN'
p3574
I78
sg2793
S'./stim/MorphF4_02_orig.jpg'
p3575
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x009"\xc0'
tRp3576
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x06(@'
tRp3577
sg30
I0
sg2797
g47
(g588
S'N\x00\x00\x00\x00\x00\x00\x00'
tRp3578
sg32
I1
sg41
g42
sg45
V8
sg33
F0.71913790702819824
sS'trials2.thisN'
p3579
I78
sa(dp3580
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3581
g47
(g588
S'O\x00\x00\x00\x00\x00\x00\x00'
tRp3582
sS'trials2.thisRepN'
p3583
I0
sS'trials2.thisTrialN'
p3584
I79
sg2793
S'./stim/MorphF8_02_orig.jpg'
p3585
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x009"\xc0'
tRp3586
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x06(@'
tRp3587
sg30
I0
sg2797
g47
(g588
S'O\x00\x00\x00\x00\x00\x00\x00'
tRp3588
sg32
I1
sg41
g42
sg45
V8
sg33
F0.66929292678833008
sS'trials2.thisN'
p3589
I79
sa(dp3590
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3591
g47
(g588
S'P\x00\x00\x00\x00\x00\x00\x00'
tRp3592
sS'trials2.thisRepN'
p3593
I0
sS'trials2.thisTrialN'
p3594
I80
sg2793
S'./stim/MorphM4_01_orig.jpg'
p3595
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x009"\xc0'
tRp3596
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x06(@'
tRp3597
sg30
I0
sg2797
g47
(g588
S'P\x00\x00\x00\x00\x00\x00\x00'
tRp3598
sg32
I1
sg41
g42
sg45
V8
sg33
F0.78438091278076172
sS'trials2.thisN'
p3599
I80
sa(dp3600
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3601
g47
(g588
S'Q\x00\x00\x00\x00\x00\x00\x00'
tRp3602
sS'trials2.thisRepN'
p3603
I0
sS'trials2.thisTrialN'
p3604
I81
sg2793
S'./stim/MorphM6_00_orig.jpg'
p3605
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x009"\xc0'
tRp3606
sg29
g47
(g49
S"\x00\x00\x00\x00\x00\xf7'@"
tRp3607
sg30
I0
sg2797
g47
(g588
S'Q\x00\x00\x00\x00\x00\x00\x00'
tRp3608
sg32
I1
sg41
g42
sg45
V8
sg33
F0.7850651741027832
sS'trials2.thisN'
p3609
I81
sa(dp3610
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3611
g47
(g588
S'R\x00\x00\x00\x00\x00\x00\x00'
tRp3612
sS'trials2.thisRepN'
p3613
I0
sS'trials2.thisTrialN'
p3614
I82
sg2793
S'./stim/MorphF1_04_orig.jpg'
p3615
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x009"\xc0'
tRp3616
sg29
g47
(g49
S"\x00\x00\x00\x00\x00\xf7'@"
tRp3617
sg30
I0
sg2797
g47
(g588
S'R\x00\x00\x00\x00\x00\x00\x00'
tRp3618
sg32
I1
sg41
g42
sg45
V8
sg33
F0.68540501594543457
sS'trials2.thisN'
p3619
I82
sa(dp3620
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3621
g47
(g588
S'S\x00\x00\x00\x00\x00\x00\x00'
tRp3622
sS'trials2.thisRepN'
p3623
I0
sS'trials2.thisTrialN'
p3624
I83
sg2793
S'./stim/MorphM8_07_orig.jpg'
p3625
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x009"\xc0'
tRp3626
sg29
g47
(g49
S"\x00\x00\x00\x00\x00\xe8'@"
tRp3627
sg30
I0
sg2797
g47
(g588
S'S\x00\x00\x00\x00\x00\x00\x00'
tRp3628
sg32
I1
sg41
g42
sg45
V8
sg33
F0.71878194808959961
sS'trials2.thisN'
p3629
I83
sa(dp3630
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3631
g47
(g588
S'T\x00\x00\x00\x00\x00\x00\x00'
tRp3632
sS'trials2.thisRepN'
p3633
I0
sS'trials2.thisTrialN'
p3634
I84
sg2793
S'./stim/MorphM2_04_orig.jpg'
p3635
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00*"\xc0'
tRp3636
sg29
g47
(g49
S"\x00\x00\x00\x00\x00\xca'@"
tRp3637
sg30
I0
sg2797
g47
(g588
S'T\x00\x00\x00\x00\x00\x00\x00'
tRp3638
sg32
I1
sg41
g42
sg45
V8
sg33
F0.88727903366088867
sS'trials2.thisN'
p3639
I84
sa(dp3640
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3641
g47
(g588
S'U\x00\x00\x00\x00\x00\x00\x00'
tRp3642
sS'trials2.thisRepN'
p3643
I0
sS'trials2.thisTrialN'
p3644
I85
sg2793
S'./stim/MorphM3_05_orig.jpg'
p3645
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00*"\xc0'
tRp3646
sg29
g47
(g49
S"\x00\x00\x00\x00\x00\xca'@"
tRp3647
sg30
I0
sg2797
g47
(g588
S'U\x00\x00\x00\x00\x00\x00\x00'
tRp3648
sg32
I1
sg41
g42
sg45
V8
sg33
F0.9178011417388916
sS'trials2.thisN'
p3649
I85
sa(dp3650
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3651
g47
(g588
S'V\x00\x00\x00\x00\x00\x00\x00'
tRp3652
sS'trials2.thisRepN'
p3653
I0
sS'trials2.thisTrialN'
p3654
I86
sg2793
S'./stim/MorphM6_08_orig.jpg'
p3655
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00*"\xc0'
tRp3656
sg29
g47
(g49
S"\x00\x00\x00\x00\x00\xca'@"
tRp3657
sg30
I0
sg2797
g47
(g588
S'V\x00\x00\x00\x00\x00\x00\x00'
tRp3658
sg32
I1
sg41
g42
sg45
V8
sg33
F0.837799072265625
sS'trials2.thisN'
p3659
I86
sa(dp3660
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3661
g47
(g588
S'W\x00\x00\x00\x00\x00\x00\x00'
tRp3662
sS'trials2.thisRepN'
p3663
I0
sS'trials2.thisTrialN'
p3664
I87
sg2793
S'./stim/MorphF7_00_orig.jpg'
p3665
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x1b"\xc0'
tRp3666
sg29
g47
(g49
S"\x00\x00\x00\x00\x00\xac'@"
tRp3667
sg30
I0
sg2797
g47
(g588
S'W\x00\x00\x00\x00\x00\x00\x00'
tRp3668
sg32
I1
sg41
g42
sg45
V8
sg33
F0.66632699966430664
sS'trials2.thisN'
p3669
I87
sa(dp3670
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3671
g47
(g588
S'X\x00\x00\x00\x00\x00\x00\x00'
tRp3672
sS'trials2.thisRepN'
p3673
I0
sS'trials2.thisTrialN'
p3674
I88
sg2793
S'./stim/MorphF4_04_orig.jpg'
p3675
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x1b"\xc0'
tRp3676
sg29
g47
(g49
S"\x00\x00\x00\x00\x00\xac'@"
tRp3677
sg30
I0
sg2797
g47
(g588
S'X\x00\x00\x00\x00\x00\x00\x00'
tRp3678
sg32
I1
sg41
g42
sg45
V8
sg33
F0.70256876945495605
sS'trials2.thisN'
p3679
I88
sa(dp3680
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3681
g47
(g588
S'Y\x00\x00\x00\x00\x00\x00\x00'
tRp3682
sS'trials2.thisRepN'
p3683
I0
sS'trials2.thisTrialN'
p3684
I89
sg2793
S'./stim/MorphF6_01_orig.jpg'
p3685
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x0c"\xc0'
tRp3686
sg29
g47
(g49
S"\x00\x00\x00\x00\x00\xbb'@"
tRp3687
sg30
I0
sg2797
g47
(g588
S'Y\x00\x00\x00\x00\x00\x00\x00'
tRp3688
sg32
I1
sg41
g42
sg45
V8
sg33
F0.71873784065246582
sS'trials2.thisN'
p3689
I89
sa(dp3690
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3691
g47
(g588
S'Z\x00\x00\x00\x00\x00\x00\x00'
tRp3692
sS'trials2.thisRepN'
p3693
I0
sS'trials2.thisTrialN'
p3694
I90
sg2793
S'./stim/MorphF4_08_orig.jpg'
p3695
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x1b"\xc0'
tRp3696
sg29
g47
(g49
S"\x00\x00\x00\x00\x00\xe8'@"
tRp3697
sg30
I1
sg2797
g47
(g588
S'Z\x00\x00\x00\x00\x00\x00\x00'
tRp3698
sg32
I0
sg41
g42
sg45
V8
sg33
F6.9206199645996094
sS'trials2.thisN'
p3699
I90
sa(dp3700
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3701
g47
(g588
S'[\x00\x00\x00\x00\x00\x00\x00'
tRp3702
sS'trials2.thisRepN'
p3703
I0
sS'trials2.thisTrialN'
p3704
I91
sg2793
S'./stim/MorphM4_09_orig.jpg'
p3705
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x1b"\xc0'
tRp3706
sg29
g47
(g49
S"\x00\x00\x00\x00\x00\xe8'@"
tRp3707
sg30
I1
sg2797
g47
(g588
S'[\x00\x00\x00\x00\x00\x00\x00'
tRp3708
sg32
I0
sg41
g42
sg45
V8
sg33
F1.3707349300384521
sS'trials2.thisN'
p3709
I91
sa(dp3710
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3711
g47
(g588
S'\\\x00\x00\x00\x00\x00\x00\x00'
tRp3712
sS'trials2.thisRepN'
p3713
I0
sS'trials2.thisTrialN'
p3714
I92
sg2793
S'./stim/MorphM7_07_orig.jpg'
p3715
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x1b"\xc0'
tRp3716
sg29
g47
(g49
S"\x00\x00\x00\x00\x00\xe8'@"
tRp3717
sg30
I1
sg2797
g47
(g588
S'\\\x00\x00\x00\x00\x00\x00\x00'
tRp3718
sg32
I0
sg41
g42
sg45
V8
sg33
F2.0768918991088867
sS'trials2.thisN'
p3719
I92
sa(dp3720
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3721
g47
(g588
S']\x00\x00\x00\x00\x00\x00\x00'
tRp3722
sS'trials2.thisRepN'
p3723
I0
sS'trials2.thisTrialN'
p3724
I93
sg2793
S'./stim/MorphF9_01_orig.jpg'
p3725
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x1b"\xc0'
tRp3726
sg29
g47
(g49
S"\x00\x00\x00\x00\x00\xf7'@"
tRp3727
sg30
I0
sg2797
g47
(g588
S']\x00\x00\x00\x00\x00\x00\x00'
tRp3728
sg32
I1
sg41
g42
sg45
V8
sg33
F0.76778888702392578
sS'trials2.thisN'
p3729
I93
sa(dp3730
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3731
g47
(g588
S'^\x00\x00\x00\x00\x00\x00\x00'
tRp3732
sS'trials2.thisRepN'
p3733
I0
sS'trials2.thisTrialN'
p3734
I94
sg2793
S'./stim/MorphM8_05_orig.jpg'
p3735
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00*"\xc0'
tRp3736
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x06(@'
tRp3737
sg30
I0
sg2797
g47
(g588
S'^\x00\x00\x00\x00\x00\x00\x00'
tRp3738
sg32
I1
sg41
g42
sg45
V8
sg33
F1.0036370754241943
sS'trials2.thisN'
p3739
I94
sa(dp3740
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3741
g47
(g588
S'_\x00\x00\x00\x00\x00\x00\x00'
tRp3742
sS'trials2.thisRepN'
p3743
I0
sS'trials2.thisTrialN'
p3744
I95
sg2793
S'./stim/MorphM4_08_orig.jpg'
p3745
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x009"\xc0'
tRp3746
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x15(@'
tRp3747
sg30
I0
sg2797
g47
(g588
S'_\x00\x00\x00\x00\x00\x00\x00'
tRp3748
sg32
I1
sg41
g42
sg45
V8
sg33
F1.0042750835418701
sS'trials2.thisN'
p3749
I95
sa(dp3750
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3751
g47
(g588
S'`\x00\x00\x00\x00\x00\x00\x00'
tRp3752
sS'trials2.thisRepN'
p3753
I0
sS'trials2.thisTrialN'
p3754
I96
sg2793
S'./stim/MorphM6_04_orig.jpg'
p3755
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x009"\xc0'
tRp3756
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x15(@'
tRp3757
sg30
I0
sg2797
g47
(g588
S'`\x00\x00\x00\x00\x00\x00\x00'
tRp3758
sg32
I1
sg41
g42
sg45
V8
sg33
F0.93677186965942383
sS'trials2.thisN'
p3759
I96
sa(dp3760
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3761
g47
(g588
S'a\x00\x00\x00\x00\x00\x00\x00'
tRp3762
sS'trials2.thisRepN'
p3763
I0
sS'trials2.thisTrialN'
p3764
I97
sg2793
S'./stim/MorphF8_00_orig.jpg'
p3765
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00H"\xc0'
tRp3766
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x06(@'
tRp3767
sg30
I0
sg2797
g47
(g588
S'a\x00\x00\x00\x00\x00\x00\x00'
tRp3768
sg32
I1
sg41
g42
sg45
V8
sg33
F1.2561659812927246
sS'trials2.thisN'
p3769
I97
sa(dp3770
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3771
g47
(g588
S'b\x00\x00\x00\x00\x00\x00\x00'
tRp3772
sS'trials2.thisRepN'
p3773
I0
sS'trials2.thisTrialN'
p3774
I98
sg2793
S'./stim/MorphF4_00_orig.jpg'
p3775
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00H"\xc0'
tRp3776
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x06(@'
tRp3777
sg30
I0
sg2797
g47
(g588
S'b\x00\x00\x00\x00\x00\x00\x00'
tRp3778
sg32
I1
sg41
g42
sg45
V8
sg33
F1.1046121120452881
sS'trials2.thisN'
p3779
I98
sa(dp3780
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3781
g47
(g588
S'c\x00\x00\x00\x00\x00\x00\x00'
tRp3782
sS'trials2.thisRepN'
p3783
I0
sS'trials2.thisTrialN'
p3784
I99
sg2793
S'./stim/MorphM2_07_orig.jpg'
p3785
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00H"\xc0'
tRp3786
sg29
g47
(g49
S"\x00\x00\x00\x00\x00\xf7'@"
tRp3787
sg30
I1
sg2797
g47
(g588
S'c\x00\x00\x00\x00\x00\x00\x00'
tRp3788
sg32
I0
sg41
g42
sg45
V8
sg33
F1.7734150886535645
sS'trials2.thisN'
p3789
I99
sa(dp3790
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3791
g47
(g588
S'd\x00\x00\x00\x00\x00\x00\x00'
tRp3792
sS'trials2.thisRepN'
p3793
I0
sS'trials2.thisTrialN'
p3794
I100
sg2793
S'./stim/MorphF6_10_orig.jpg'
p3795
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00H"\xc0'
tRp3796
sg29
g47
(g49
S"\x00\x00\x00\x00\x00\xf7'@"
tRp3797
sg30
I0
sg2797
g47
(g588
S'd\x00\x00\x00\x00\x00\x00\x00'
tRp3798
sg32
I1
sg41
g42
sg45
V8
sg33
F1.1722860336303711
sS'trials2.thisN'
p3799
I100
sa(dp3800
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3801
g47
(g588
S'e\x00\x00\x00\x00\x00\x00\x00'
tRp3802
sS'trials2.thisRepN'
p3803
I0
sS'trials2.thisTrialN'
p3804
I101
sg2793
S'./stim/MorphM1_05_orig.jpg'
p3805
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00H"\xc0'
tRp3806
sg29
g47
(g49
S"\x00\x00\x00\x00\x00\xf7'@"
tRp3807
sg30
I0
sg2797
g47
(g588
S'e\x00\x00\x00\x00\x00\x00\x00'
tRp3808
sg32
I1
sg41
g42
sg45
V8
sg33
F0.71929192543029785
sS'trials2.thisN'
p3809
I101
sa(dp3810
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3811
g47
(g588
S'f\x00\x00\x00\x00\x00\x00\x00'
tRp3812
sS'trials2.thisRepN'
p3813
I0
sS'trials2.thisTrialN'
p3814
I102
sg2793
S'./stim/MorphF1_02_orig.jpg'
p3815
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00H"\xc0'
tRp3816
sg29
g47
(g49
S"\x00\x00\x00\x00\x00\xf7'@"
tRp3817
sg30
I0
sg2797
g47
(g588
S'f\x00\x00\x00\x00\x00\x00\x00'
tRp3818
sg32
I1
sg41
g42
sg45
V8
sg33
F0.60172200202941895
sS'trials2.thisN'
p3819
I102
sa(dp3820
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3821
g47
(g588
S'g\x00\x00\x00\x00\x00\x00\x00'
tRp3822
sS'trials2.thisRepN'
p3823
I0
sS'trials2.thisTrialN'
p3824
I103
sg2793
S'./stim/MorphF4_01_orig.jpg'
p3825
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00W"\xc0'
tRp3826
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x06(@'
tRp3827
sg30
I0
sg2797
g47
(g588
S'g\x00\x00\x00\x00\x00\x00\x00'
tRp3828
sg32
I1
sg41
g42
sg45
V8
sg33
F0.80374789237976074
sS'trials2.thisN'
p3829
I103
sa(dp3830
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3831
g47
(g588
S'h\x00\x00\x00\x00\x00\x00\x00'
tRp3832
sS'trials2.thisRepN'
p3833
I0
sS'trials2.thisTrialN'
p3834
I104
sg2793
S'./stim/MorphM10_08_orig.jpg'
p3835
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00f"\xc0'
tRp3836
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x06(@'
tRp3837
sg30
I0
sg2797
g47
(g588
S'h\x00\x00\x00\x00\x00\x00\x00'
tRp3838
sg32
I1
sg41
g42
sg45
V8
sg33
F0.70230793952941895
sS'trials2.thisN'
p3839
I104
sa(dp3840
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3841
g47
(g588
S'i\x00\x00\x00\x00\x00\x00\x00'
tRp3842
sS'trials2.thisRepN'
p3843
I0
sS'trials2.thisTrialN'
p3844
I105
sg2793
S'./stim/MorphM1_00_orig.jpg'
p3845
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00f"\xc0'
tRp3846
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x06(@'
tRp3847
sg30
I0
sg2797
g47
(g588
S'i\x00\x00\x00\x00\x00\x00\x00'
tRp3848
sg32
I1
sg41
g42
sg45
V8
sg33
F0.63614702224731445
sS'trials2.thisN'
p3849
I105
sa(dp3850
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3851
g47
(g588
S'j\x00\x00\x00\x00\x00\x00\x00'
tRp3852
sS'trials2.thisRepN'
p3853
I0
sS'trials2.thisTrialN'
p3854
I106
sg2793
S'./stim/MorphF3_00_orig.jpg'
p3855
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00f"\xc0'
tRp3856
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x06(@'
tRp3857
sg30
I0
sg2797
g47
(g588
S'j\x00\x00\x00\x00\x00\x00\x00'
tRp3858
sg32
I1
sg41
g42
sg45
V8
sg33
F0.55158901214599609
sS'trials2.thisN'
p3859
I106
sa(dp3860
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3861
g47
(g588
S'k\x00\x00\x00\x00\x00\x00\x00'
tRp3862
sS'trials2.thisRepN'
p3863
I0
sS'trials2.thisTrialN'
p3864
I107
sg2793
S'./stim/MorphF10_06_orig.jpg'
p3865
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00f"\xc0'
tRp3866
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x06(@'
tRp3867
sg30
I0
sg2797
g47
(g588
S'k\x00\x00\x00\x00\x00\x00\x00'
tRp3868
sg32
I1
sg41
g42
sg45
V8
sg33
F0.61748909950256348
sS'trials2.thisN'
p3869
I107
sa(dp3870
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3871
g47
(g588
S'l\x00\x00\x00\x00\x00\x00\x00'
tRp3872
sS'trials2.thisRepN'
p3873
I0
sS'trials2.thisTrialN'
p3874
I108
sg2793
S'./stim/MorphF3_10_orig.jpg'
p3875
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00f"\xc0'
tRp3876
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x06(@'
tRp3877
sg30
I0
sg2797
g47
(g588
S'l\x00\x00\x00\x00\x00\x00\x00'
tRp3878
sg32
I1
sg41
g42
sg45
V8
sg33
F0.96870779991149902
sS'trials2.thisN'
p3879
I108
sa(dp3880
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3881
g47
(g588
S'm\x00\x00\x00\x00\x00\x00\x00'
tRp3882
sS'trials2.thisRepN'
p3883
I0
sS'trials2.thisTrialN'
p3884
I109
sg2793
S'./stim/MorphF7_10_orig.jpg'
p3885
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00f"\xc0'
tRp3886
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x06(@'
tRp3887
sg30
I1
sg2797
g47
(g588
S'm\x00\x00\x00\x00\x00\x00\x00'
tRp3888
sg32
I0
sg41
g42
sg45
V8
sg33
F4.3036789894104004
sS'trials2.thisN'
p3889
I109
sa(dp3890
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3891
g47
(g588
S'n\x00\x00\x00\x00\x00\x00\x00'
tRp3892
sS'trials2.thisRepN'
p3893
I0
sS'trials2.thisTrialN'
p3894
I110
sg2793
S'./stim/MorphF9_07_orig.jpg'
p3895
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00f"\xc0'
tRp3896
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x06(@'
tRp3897
sg30
I0
sg2797
g47
(g588
S'n\x00\x00\x00\x00\x00\x00\x00'
tRp3898
sg32
I1
sg41
g42
sg45
V8
sg33
F0.58403992652893066
sS'trials2.thisN'
p3899
I110
sa(dp3900
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3901
g47
(g588
S'o\x00\x00\x00\x00\x00\x00\x00'
tRp3902
sS'trials2.thisRepN'
p3903
I0
sS'trials2.thisTrialN'
p3904
I111
sg2793
S'./stim/MorphM6_02_orig.jpg'
p3905
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00f"\xc0'
tRp3906
sg29
g47
(g49
S"\x00\x00\x00\x00\x00\xf7'@"
tRp3907
sg30
I0
sg2797
g47
(g588
S'o\x00\x00\x00\x00\x00\x00\x00'
tRp3908
sg32
I1
sg41
g42
sg45
V8
sg33
F0.71945309638977051
sS'trials2.thisN'
p3909
I111
sa(dp3910
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3911
g47
(g588
S'p\x00\x00\x00\x00\x00\x00\x00'
tRp3912
sS'trials2.thisRepN'
p3913
I0
sS'trials2.thisTrialN'
p3914
I112
sg2793
S'./stim/MorphM9_04_orig.jpg'
p3915
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00f"\xc0'
tRp3916
sg29
g47
(g49
S"\x00\x00\x00\x00\x00\xe8'@"
tRp3917
sg30
I0
sg2797
g47
(g588
S'p\x00\x00\x00\x00\x00\x00\x00'
tRp3918
sg32
I1
sg41
g42
sg45
V8
sg33
F0.81983399391174316
sS'trials2.thisN'
p3919
I112
sa(dp3920
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3921
g47
(g588
S'q\x00\x00\x00\x00\x00\x00\x00'
tRp3922
sS'trials2.thisRepN'
p3923
I0
sS'trials2.thisTrialN'
p3924
I113
sg2793
S'./stim/MorphM6_05_orig.jpg'
p3925
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00f"\xc0'
tRp3926
sg29
g47
(g49
S"\x00\x00\x00\x00\x00\xe8'@"
tRp3927
sg30
I0
sg2797
g47
(g588
S'q\x00\x00\x00\x00\x00\x00\x00'
tRp3928
sg32
I1
sg41
g42
sg45
V8
sg33
F0.68408894538879395
sS'trials2.thisN'
p3929
I113
sa(dp3930
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3931
g47
(g588
S'r\x00\x00\x00\x00\x00\x00\x00'
tRp3932
sS'trials2.thisRepN'
p3933
I0
sS'trials2.thisTrialN'
p3934
I114
sg2793
S'./stim/MorphF6_04_orig.jpg'
p3935
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00H"\xc0'
tRp3936
sg29
g47
(g49
S"\x00\x00\x00\x00\x00\xbb'@"
tRp3937
sg30
I0
sg2797
g47
(g588
S'r\x00\x00\x00\x00\x00\x00\x00'
tRp3938
sg32
I1
sg41
g42
sg45
V8
sg33
F0.80258917808532715
sS'trials2.thisN'
p3939
I114
sa(dp3940
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3941
g47
(g588
S's\x00\x00\x00\x00\x00\x00\x00'
tRp3942
sS'trials2.thisRepN'
p3943
I0
sS'trials2.thisTrialN'
p3944
I115
sg2793
S'./stim/MorphM5_06_orig.jpg'
p3945
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00H"\xc0'
tRp3946
sg29
g47
(g49
S"\x00\x00\x00\x00\x00\xbb'@"
tRp3947
sg30
I1
sg2797
g47
(g588
S's\x00\x00\x00\x00\x00\x00\x00'
tRp3948
sg32
I0
sg41
g42
sg45
V8
sg33
F0.73658418655395508
sS'trials2.thisN'
p3949
I115
sa(dp3950
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3951
g47
(g588
S't\x00\x00\x00\x00\x00\x00\x00'
tRp3952
sS'trials2.thisRepN'
p3953
I0
sS'trials2.thisTrialN'
p3954
I116
sg2793
S'./stim/MorphM4_10_orig.jpg'
p3955
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00H"\xc0'
tRp3956
sg29
g47
(g49
S"\x00\x00\x00\x00\x00\xbb'@"
tRp3957
sg30
I0
sg2797
g47
(g588
S't\x00\x00\x00\x00\x00\x00\x00'
tRp3958
sg32
I1
sg41
g42
sg45
V8
sg33
F0.95379495620727539
sS'trials2.thisN'
p3959
I116
sa(dp3960
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3961
g47
(g588
S'u\x00\x00\x00\x00\x00\x00\x00'
tRp3962
sS'trials2.thisRepN'
p3963
I0
sS'trials2.thisTrialN'
p3964
I117
sg2793
S'./stim/MorphF3_08_orig.jpg'
p3965
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00H"\xc0'
tRp3966
sg29
g47
(g49
S"\x00\x00\x00\x00\x00\xbb'@"
tRp3967
sg30
I0
sg2797
g47
(g588
S'u\x00\x00\x00\x00\x00\x00\x00'
tRp3968
sg32
I1
sg41
g42
sg45
V8
sg33
F1.0381579399108887
sS'trials2.thisN'
p3969
I117
sa(dp3970
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3971
g47
(g588
S'v\x00\x00\x00\x00\x00\x00\x00'
tRp3972
sS'trials2.thisRepN'
p3973
I0
sS'trials2.thisTrialN'
p3974
I118
sg2793
S'./stim/MorphF9_05_orig.jpg'
p3975
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00W"\xc0'
tRp3976
sg29
g47
(g49
S"\x00\x00\x00\x00\x00\xac'@"
tRp3977
sg30
I0
sg2797
g47
(g588
S'v\x00\x00\x00\x00\x00\x00\x00'
tRp3978
sg32
I1
sg41
g42
sg45
V8
sg33
F0.98581814765930176
sS'trials2.thisN'
p3979
I118
sa(dp3980
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3981
g47
(g588
S'w\x00\x00\x00\x00\x00\x00\x00'
tRp3982
sS'trials2.thisRepN'
p3983
I0
sS'trials2.thisTrialN'
p3984
I119
sg2793
S'./stim/MorphM7_09_orig.jpg'
p3985
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00H"\xc0'
tRp3986
sg29
g47
(g49
S"\x00\x00\x00\x00\x00\x9d'@"
tRp3987
sg30
I1
sg2797
g47
(g588
S'w\x00\x00\x00\x00\x00\x00\x00'
tRp3988
sg32
I0
sg41
g42
sg45
V8
sg33
F0.92061400413513184
sS'trials2.thisN'
p3989
I119
sa(dp3990
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p3991
g47
(g588
S'x\x00\x00\x00\x00\x00\x00\x00'
tRp3992
sS'trials2.thisRepN'
p3993
I0
sS'trials2.thisTrialN'
p3994
I120
sg2793
S'./stim/MorphF1_09_orig.jpg'
p3995
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00H"\xc0'
tRp3996
sg29
g47
(g49
S"\x00\x00\x00\x00\x00\x9d'@"
tRp3997
sg30
I0
sg2797
g47
(g588
S'x\x00\x00\x00\x00\x00\x00\x00'
tRp3998
sg32
I1
sg41
g42
sg45
V8
sg33
F0.70243096351623535
sS'trials2.thisN'
p3999
I120
sa(dp4000
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4001
g47
(g588
S'y\x00\x00\x00\x00\x00\x00\x00'
tRp4002
sS'trials2.thisRepN'
p4003
I0
sS'trials2.thisTrialN'
p4004
I121
sg2793
S'./stim/MorphM6_09_orig.jpg'
p4005
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00H"\xc0'
tRp4006
sg29
g47
(g49
S"\x00\x00\x00\x00\x00\x9d'@"
tRp4007
sg30
I0
sg2797
g47
(g588
S'y\x00\x00\x00\x00\x00\x00\x00'
tRp4008
sg32
I1
sg41
g42
sg45
V8
sg33
F1.6085879802703857
sS'trials2.thisN'
p4009
I121
sa(dp4010
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4011
g47
(g588
S'z\x00\x00\x00\x00\x00\x00\x00'
tRp4012
sS'trials2.thisRepN'
p4013
I0
sS'trials2.thisTrialN'
p4014
I122
sg2793
S'./stim/MorphF4_06_orig.jpg'
p4015
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00H"\xc0'
tRp4016
sg29
g47
(g49
S"\x00\x00\x00\x00\x00\x9d'@"
tRp4017
sg30
I0
sg2797
g47
(g588
S'z\x00\x00\x00\x00\x00\x00\x00'
tRp4018
sg32
I1
sg41
g42
sg45
V8
sg33
F0.53202986717224121
sS'trials2.thisN'
p4019
I122
sa(dp4020
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4021
g47
(g588
S'{\x00\x00\x00\x00\x00\x00\x00'
tRp4022
sS'trials2.thisRepN'
p4023
I0
sS'trials2.thisTrialN'
p4024
I123
sg2793
S'./stim/MorphF7_06_orig.jpg'
p4025
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x009"\xc0'
tRp4026
sg29
g47
(g49
S"\x00\x00\x00\x00\x00\x8e'@"
tRp4027
sg30
I0
sg2797
g47
(g588
S'{\x00\x00\x00\x00\x00\x00\x00'
tRp4028
sg32
I1
sg41
g42
sg45
V8
sg33
F2.1936409473419189
sS'trials2.thisN'
p4029
I123
sa(dp4030
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4031
g47
(g588
S'|\x00\x00\x00\x00\x00\x00\x00'
tRp4032
sS'trials2.thisRepN'
p4033
I0
sS'trials2.thisTrialN'
p4034
I124
sg2793
S'./stim/MorphM5_02_orig.jpg'
p4035
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x009"\xc0'
tRp4036
sg29
g47
(g49
S"\x00\x00\x00\x00\x00\x8e'@"
tRp4037
sg30
I1
sg2797
g47
(g588
S'|\x00\x00\x00\x00\x00\x00\x00'
tRp4038
sg32
I0
sg41
g42
sg45
V8
sg33
F0.73655390739440918
sS'trials2.thisN'
p4039
I124
sa(dp4040
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4041
g47
(g588
S'}\x00\x00\x00\x00\x00\x00\x00'
tRp4042
sS'trials2.thisRepN'
p4043
I0
sS'trials2.thisTrialN'
p4044
I125
sg2793
S'./stim/MorphF10_05_orig.jpg'
p4045
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x009"\xc0'
tRp4046
sg29
g47
(g49
S"\x00\x00\x00\x00\x00\x8e'@"
tRp4047
sg30
I0
sg2797
g47
(g588
S'}\x00\x00\x00\x00\x00\x00\x00'
tRp4048
sg32
I1
sg41
g42
sg45
V8
sg33
F2.0412709712982178
sS'trials2.thisN'
p4049
I125
sa(dp4050
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4051
g47
(g588
S'~\x00\x00\x00\x00\x00\x00\x00'
tRp4052
sS'trials2.thisRepN'
p4053
I0
sS'trials2.thisTrialN'
p4054
I126
sg2793
S'./stim/MorphF7_05_orig.jpg'
p4055
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00*"\xc0'
tRp4056
sg29
g47
(g49
S"\x00\x00\x00\x00\x00\x7f'@"
tRp4057
sg30
I0
sg2797
g47
(g588
S'~\x00\x00\x00\x00\x00\x00\x00'
tRp4058
sg32
I1
sg41
g42
sg45
V8
sg33
F1.0881271362304688
sS'trials2.thisN'
p4059
I126
sa(dp4060
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4061
g47
(g588
S'\x7f\x00\x00\x00\x00\x00\x00\x00'
tRp4062
sS'trials2.thisRepN'
p4063
I0
sS'trials2.thisTrialN'
p4064
I127
sg2793
S'./stim/MorphF1_03_orig.jpg'
p4065
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00*"\xc0'
tRp4066
sg29
g47
(g49
S"\x00\x00\x00\x00\x00\x7f'@"
tRp4067
sg30
I0
sg2797
g47
(g588
S'\x7f\x00\x00\x00\x00\x00\x00\x00'
tRp4068
sg32
I1
sg41
g42
sg45
V8
sg33
F0.73631906509399414
sS'trials2.thisN'
p4069
I127
sa(dp4070
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4071
g47
(g588
S'\x80\x00\x00\x00\x00\x00\x00\x00'
tRp4072
sS'trials2.thisRepN'
p4073
I0
sS'trials2.thisTrialN'
p4074
I128
sg2793
S'./stim/MorphF3_07_orig.jpg'
p4075
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00*"\xc0'
tRp4076
sg29
g47
(g49
S"\x00\x00\x00\x00\x00\x7f'@"
tRp4077
sg30
I0
sg2797
g47
(g588
S'\x80\x00\x00\x00\x00\x00\x00\x00'
tRp4078
sg32
I1
sg41
g42
sg45
V8
sg33
F0.56654691696166992
sS'trials2.thisN'
p4079
I128
sa(dp4080
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4081
g47
(g588
S'\x81\x00\x00\x00\x00\x00\x00\x00'
tRp4082
sS'trials2.thisRepN'
p4083
I0
sS'trials2.thisTrialN'
p4084
I129
sg2793
S'./stim/MorphF4_05_orig.jpg'
p4085
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x1b"\xc0'
tRp4086
sg29
g47
(g49
S"\x00\x00\x00\x00\x00p'@"
tRp4087
sg30
I0
sg2797
g47
(g588
S'\x81\x00\x00\x00\x00\x00\x00\x00'
tRp4088
sg32
I1
sg41
g42
sg45
V8
sg33
F0.6026148796081543
sS'trials2.thisN'
p4089
I129
sa(dp4090
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4091
g47
(g588
S'\x82\x00\x00\x00\x00\x00\x00\x00'
tRp4092
sS'trials2.thisRepN'
p4093
I0
sS'trials2.thisTrialN'
p4094
I130
sg2793
S'./stim/MorphF6_07_orig.jpg'
p4095
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x1b"\xc0'
tRp4096
sg29
g47
(g49
S"\x00\x00\x00\x00\x00a'@"
tRp4097
sg30
I0
sg2797
g47
(g588
S'\x82\x00\x00\x00\x00\x00\x00\x00'
tRp4098
sg32
I1
sg41
g42
sg45
V8
sg33
F0.56856298446655273
sS'trials2.thisN'
p4099
I130
sa(dp4100
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4101
g47
(g588
S'\x83\x00\x00\x00\x00\x00\x00\x00'
tRp4102
sS'trials2.thisRepN'
p4103
I0
sS'trials2.thisTrialN'
p4104
I131
sg2793
S'./stim/MorphF3_02_orig.jpg'
p4105
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00*"\xc0'
tRp4106
sg29
g47
(g49
S"\x00\x00\x00\x00\x00R'@"
tRp4107
sg30
I0
sg2797
g47
(g588
S'\x83\x00\x00\x00\x00\x00\x00\x00'
tRp4108
sg32
I1
sg41
g42
sg45
V8
sg33
F0.55142116546630859
sS'trials2.thisN'
p4109
I131
sa(dp4110
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4111
g47
(g588
S'\x84\x00\x00\x00\x00\x00\x00\x00'
tRp4112
sS'trials2.thisRepN'
p4113
I0
sS'trials2.thisTrialN'
p4114
I132
sg2793
S'./stim/MorphF1_00_orig.jpg'
p4115
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x1b"\xc0'
tRp4116
sg29
g47
(g49
S"\x00\x00\x00\x00\x00C'@"
tRp4117
sg30
I0
sg2797
g47
(g588
S'\x84\x00\x00\x00\x00\x00\x00\x00'
tRp4118
sg32
I1
sg41
g42
sg45
V8
sg33
F0.51691603660583496
sS'trials2.thisN'
p4119
I132
sa(dp4120
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4121
g47
(g588
S'\x85\x00\x00\x00\x00\x00\x00\x00'
tRp4122
sS'trials2.thisRepN'
p4123
I0
sS'trials2.thisTrialN'
p4124
I133
sg2793
S'./stim/MorphF4_03_orig.jpg'
p4125
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x1b"\xc0'
tRp4126
sg29
g47
(g49
S"\x00\x00\x00\x00\x00C'@"
tRp4127
sg30
I0
sg2797
g47
(g588
S'\x85\x00\x00\x00\x00\x00\x00\x00'
tRp4128
sg32
I1
sg41
g42
sg45
V8
sg33
F0.51712393760681152
sS'trials2.thisN'
p4129
I133
sa(dp4130
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4131
g47
(g588
S'\x86\x00\x00\x00\x00\x00\x00\x00'
tRp4132
sS'trials2.thisRepN'
p4133
I0
sS'trials2.thisTrialN'
p4134
I134
sg2793
S'./stim/MorphM2_03_orig.jpg'
p4135
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x1b"\xc0'
tRp4136
sg29
g47
(g49
S"\x00\x00\x00\x00\x00C'@"
tRp4137
sg30
I0
sg2797
g47
(g588
S'\x86\x00\x00\x00\x00\x00\x00\x00'
tRp4138
sg32
I1
sg41
g42
sg45
V8
sg33
F0.68512487411499023
sS'trials2.thisN'
p4139
I134
sa(dp4140
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4141
g47
(g588
S'\x87\x00\x00\x00\x00\x00\x00\x00'
tRp4142
sS'trials2.thisRepN'
p4143
I0
sS'trials2.thisTrialN'
p4144
I135
sg2793
S'./stim/MorphF10_10_orig.jpg'
p4145
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x1b"\xc0'
tRp4146
sg29
g47
(g49
S"\x00\x00\x00\x00\x00C'@"
tRp4147
sg30
I1
sg2797
g47
(g588
S'\x87\x00\x00\x00\x00\x00\x00\x00'
tRp4148
sg32
I0
sg41
g42
sg45
V8
sg33
F2.0097250938415527
sS'trials2.thisN'
p4149
I135
sa(dp4150
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4151
g47
(g588
S'\x88\x00\x00\x00\x00\x00\x00\x00'
tRp4152
sS'trials2.thisRepN'
p4153
I0
sS'trials2.thisTrialN'
p4154
I136
sg2793
S'./stim/MorphM2_09_orig.jpg'
p4155
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x1b"\xc0'
tRp4156
sg29
g47
(g49
S"\x00\x00\x00\x00\x00C'@"
tRp4157
sg30
I1
sg2797
g47
(g588
S'\x88\x00\x00\x00\x00\x00\x00\x00'
tRp4158
sg32
I0
sg41
g42
sg45
V8
sg33
F1.1220910549163818
sS'trials2.thisN'
p4159
I136
sa(dp4160
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4161
g47
(g588
S'\x89\x00\x00\x00\x00\x00\x00\x00'
tRp4162
sS'trials2.thisRepN'
p4163
I0
sS'trials2.thisTrialN'
p4164
I137
sg2793
S'./stim/MorphM6_01_orig.jpg'
p4165
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x1b"\xc0'
tRp4166
sg29
g47
(g49
S"\x00\x00\x00\x00\x00C'@"
tRp4167
sg30
I0
sg2797
g47
(g588
S'\x89\x00\x00\x00\x00\x00\x00\x00'
tRp4168
sg32
I1
sg41
g42
sg45
V8
sg33
F0.76730990409851074
sS'trials2.thisN'
p4169
I137
sa(dp4170
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4171
g47
(g588
S'\x8a\x00\x00\x00\x00\x00\x00\x00'
tRp4172
sS'trials2.thisRepN'
p4173
I0
sS'trials2.thisTrialN'
p4174
I138
sg2793
S'./stim/MorphF9_09_orig.jpg'
p4175
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x1b"\xc0'
tRp4176
sg29
g47
(g49
S"\x00\x00\x00\x00\x00C'@"
tRp4177
sg30
I0
sg2797
g47
(g588
S'\x8a\x00\x00\x00\x00\x00\x00\x00'
tRp4178
sg32
I1
sg41
g42
sg45
V8
sg33
F0.71824812889099121
sS'trials2.thisN'
p4179
I138
sa(dp4180
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4181
g47
(g588
S'\x8b\x00\x00\x00\x00\x00\x00\x00'
tRp4182
sS'trials2.thisRepN'
p4183
I0
sS'trials2.thisTrialN'
p4184
I139
sg2793
S'./stim/MorphM5_03_orig.jpg'
p4185
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x0c"\xc0'
tRp4186
sg29
g47
(g49
S"\x00\x00\x00\x00\x004'@"
tRp4187
sg30
I1
sg2797
g47
(g588
S'\x8b\x00\x00\x00\x00\x00\x00\x00'
tRp4188
sg32
I0
sg41
g42
sg45
V8
sg33
F0.75301980972290039
sS'trials2.thisN'
p4189
I139
sa(dp4190
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4191
g47
(g588
S'\x8c\x00\x00\x00\x00\x00\x00\x00'
tRp4192
sS'trials2.thisRepN'
p4193
I0
sS'trials2.thisTrialN'
p4194
I140
sg2793
S'./stim/MorphF10_00_orig.jpg'
p4195
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x0c"\xc0'
tRp4196
sg29
g47
(g49
S"\x00\x00\x00\x00\x004'@"
tRp4197
sg30
I0
sg2797
g47
(g588
S'\x8c\x00\x00\x00\x00\x00\x00\x00'
tRp4198
sg32
I1
sg41
g42
sg45
V8
sg33
F0.65189003944396973
sS'trials2.thisN'
p4199
I140
sa(dp4200
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4201
g47
(g588
S'\x8d\x00\x00\x00\x00\x00\x00\x00'
tRp4202
sS'trials2.thisRepN'
p4203
I0
sS'trials2.thisTrialN'
p4204
I141
sg2793
S'./stim/MorphF2_02_orig.jpg'
p4205
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x1b"\xc0'
tRp4206
sg29
g47
(g49
S"\x00\x00\x00\x00\x00%'@"
tRp4207
sg30
I0
sg2797
g47
(g588
S'\x8d\x00\x00\x00\x00\x00\x00\x00'
tRp4208
sg32
I1
sg41
g42
sg45
V8
sg33
F0.81851100921630859
sS'trials2.thisN'
p4209
I141
sa(dp4210
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4211
g47
(g588
S'\x8e\x00\x00\x00\x00\x00\x00\x00'
tRp4212
sS'trials2.thisRepN'
p4213
I0
sS'trials2.thisTrialN'
p4214
I142
sg2793
S'./stim/MorphM3_06_orig.jpg'
p4215
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x1b"\xc0'
tRp4216
sg29
g47
(g49
S"\x00\x00\x00\x00\x00%'@"
tRp4217
sg30
I1
sg2797
g47
(g588
S'\x8e\x00\x00\x00\x00\x00\x00\x00'
tRp4218
sg32
I0
sg41
g42
sg45
V8
sg33
F0.78678297996520996
sS'trials2.thisN'
p4219
I142
sa(dp4220
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4221
g47
(g588
S'\x8f\x00\x00\x00\x00\x00\x00\x00'
tRp4222
sS'trials2.thisRepN'
p4223
I0
sS'trials2.thisTrialN'
p4224
I143
sg2793
S'./stim/MorphF7_04_orig.jpg'
p4225
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x1b"\xc0'
tRp4226
sg29
g47
(g49
S"\x00\x00\x00\x00\x00%'@"
tRp4227
sg30
I0
sg2797
g47
(g588
S'\x8f\x00\x00\x00\x00\x00\x00\x00'
tRp4228
sg32
I1
sg41
g42
sg45
V8
sg33
F0.58526611328125
sS'trials2.thisN'
p4229
I143
sa(dp4230
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4231
g47
(g588
S'\x90\x00\x00\x00\x00\x00\x00\x00'
tRp4232
sS'trials2.thisRepN'
p4233
I0
sS'trials2.thisTrialN'
p4234
I144
sg2793
S'./stim/MorphF5_01_orig.jpg'
p4235
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x1b"\xc0'
tRp4236
sg29
g47
(g49
S"\x00\x00\x00\x00\x00%'@"
tRp4237
sg30
I0
sg2797
g47
(g588
S'\x90\x00\x00\x00\x00\x00\x00\x00'
tRp4238
sg32
I1
sg41
g42
sg45
V8
sg33
F1.239048957824707
sS'trials2.thisN'
p4239
I144
sa(dp4240
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4241
g47
(g588
S'\x91\x00\x00\x00\x00\x00\x00\x00'
tRp4242
sS'trials2.thisRepN'
p4243
I0
sS'trials2.thisTrialN'
p4244
I145
sg2793
S'./stim/MorphF7_09_orig.jpg'
p4245
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x0c"\xc0'
tRp4246
sg29
g47
(g49
S"\x00\x00\x00\x00\x004'@"
tRp4247
sg30
I0
sg2797
g47
(g588
S'\x91\x00\x00\x00\x00\x00\x00\x00'
tRp4248
sg32
I1
sg41
g42
sg45
V8
sg33
F0.85158991813659668
sS'trials2.thisN'
p4249
I145
sa(dp4250
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4251
g47
(g588
S'\x92\x00\x00\x00\x00\x00\x00\x00'
tRp4252
sS'trials2.thisRepN'
p4253
I0
sS'trials2.thisTrialN'
p4254
I146
sg2793
S'./stim/MorphM3_10_orig.jpg'
p4255
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x1b"\xc0'
tRp4256
sg29
g47
(g49
S"\x00\x00\x00\x00\x00C'@"
tRp4257
sg30
I1
sg2797
g47
(g588
S'\x92\x00\x00\x00\x00\x00\x00\x00'
tRp4258
sg32
I0
sg41
g42
sg45
V8
sg33
F1.0211780071258545
sS'trials2.thisN'
p4259
I146
sa(dp4260
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4261
g47
(g588
S'\x93\x00\x00\x00\x00\x00\x00\x00'
tRp4262
sS'trials2.thisRepN'
p4263
I0
sS'trials2.thisTrialN'
p4264
I147
sg2793
S'./stim/MorphM9_02_orig.jpg'
p4265
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x1b"\xc0'
tRp4266
sg29
g47
(g49
S"\x00\x00\x00\x00\x00C'@"
tRp4267
sg30
I0
sg2797
g47
(g588
S'\x93\x00\x00\x00\x00\x00\x00\x00'
tRp4268
sg32
I1
sg41
g42
sg45
V8
sg33
F0.83431506156921387
sS'trials2.thisN'
p4269
I147
sa(dp4270
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4271
g47
(g588
S'\x94\x00\x00\x00\x00\x00\x00\x00'
tRp4272
sS'trials2.thisRepN'
p4273
I0
sS'trials2.thisTrialN'
p4274
I148
sg2793
S'./stim/MorphF9_10_orig.jpg'
p4275
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x1b"\xc0'
tRp4276
sg29
g47
(g49
S"\x00\x00\x00\x00\x00C'@"
tRp4277
sg30
I1
sg2797
g47
(g588
S'\x94\x00\x00\x00\x00\x00\x00\x00'
tRp4278
sg32
I0
sg41
g42
sg45
V8
sg33
F0.98795509338378906
sS'trials2.thisN'
p4279
I148
sa(dp4280
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4281
g47
(g588
S'\x95\x00\x00\x00\x00\x00\x00\x00'
tRp4282
sS'trials2.thisRepN'
p4283
I0
sS'trials2.thisTrialN'
p4284
I149
sg2793
S'./stim/MorphM5_00_orig.jpg'
p4285
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00*"\xc0'
tRp4286
sg29
g47
(g49
S"\x00\x00\x00\x00\x004'@"
tRp4287
sg30
I1
sg2797
g47
(g588
S'\x95\x00\x00\x00\x00\x00\x00\x00'
tRp4288
sg32
I0
sg41
g42
sg45
V8
sg33
F0.90341997146606445
sS'trials2.thisN'
p4289
I149
sa(dp4290
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4291
g47
(g588
S'\x96\x00\x00\x00\x00\x00\x00\x00'
tRp4292
sS'trials2.thisRepN'
p4293
I0
sS'trials2.thisTrialN'
p4294
I150
sg2793
S'./stim/MorphF2_00_orig.jpg'
p4295
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00*"\xc0'
tRp4296
sg29
g47
(g49
S"\x00\x00\x00\x00\x004'@"
tRp4297
sg30
I0
sg2797
g47
(g588
S'\x96\x00\x00\x00\x00\x00\x00\x00'
tRp4298
sg32
I1
sg41
g42
sg45
V8
sg33
F0.63340091705322266
sS'trials2.thisN'
p4299
I150
sa(dp4300
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4301
g47
(g588
S'\x97\x00\x00\x00\x00\x00\x00\x00'
tRp4302
sS'trials2.thisRepN'
p4303
I0
sS'trials2.thisTrialN'
p4304
I151
sg2793
S'./stim/MorphM6_06_orig.jpg'
p4305
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00*"\xc0'
tRp4306
sg29
g47
(g49
S"\x00\x00\x00\x00\x00%'@"
tRp4307
sg30
I0
sg2797
g47
(g588
S'\x97\x00\x00\x00\x00\x00\x00\x00'
tRp4308
sg32
I1
sg41
g42
sg45
V8
sg33
F0.58532404899597168
sS'trials2.thisN'
p4309
I151
sa(dp4310
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4311
g47
(g588
S'\x98\x00\x00\x00\x00\x00\x00\x00'
tRp4312
sS'trials2.thisRepN'
p4313
I0
sS'trials2.thisTrialN'
p4314
I152
sg2793
S'./stim/MorphM7_06_orig.jpg'
p4315
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00*"\xc0'
tRp4316
sg29
g47
(g49
S"\x00\x00\x00\x00\x00%'@"
tRp4317
sg30
I1
sg2797
g47
(g588
S'\x98\x00\x00\x00\x00\x00\x00\x00'
tRp4318
sg32
I0
sg41
g42
sg45
V8
sg33
F1.6564159393310547
sS'trials2.thisN'
p4319
I152
sa(dp4320
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4321
g47
(g588
S'\x99\x00\x00\x00\x00\x00\x00\x00'
tRp4322
sS'trials2.thisRepN'
p4323
I0
sS'trials2.thisTrialN'
p4324
I153
sg2793
S'./stim/MorphF2_10_orig.jpg'
p4325
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00*"\xc0'
tRp4326
sg29
g47
(g49
S"\x00\x00\x00\x00\x00\x16'@"
tRp4327
sg30
I1
sg2797
g47
(g588
S'\x99\x00\x00\x00\x00\x00\x00\x00'
tRp4328
sg32
I0
sg41
g42
sg45
V8
sg33
F0.73637604713439941
sS'trials2.thisN'
p4329
I153
sa(dp4330
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4331
g47
(g588
S'\x9a\x00\x00\x00\x00\x00\x00\x00'
tRp4332
sS'trials2.thisRepN'
p4333
I0
sS'trials2.thisTrialN'
p4334
I154
sg2793
S'./stim/MorphF10_08_orig.jpg'
p4335
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00*"\xc0'
tRp4336
sg29
g47
(g49
S"\x00\x00\x00\x00\x00\x16'@"
tRp4337
sg30
I1
sg2797
g47
(g588
S'\x9a\x00\x00\x00\x00\x00\x00\x00'
tRp4338
sg32
I0
sg41
g42
sg45
V8
sg33
F1.7396740913391113
sS'trials2.thisN'
p4339
I154
sa(dp4340
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4341
g47
(g588
S'\x9b\x00\x00\x00\x00\x00\x00\x00'
tRp4342
sS'trials2.thisRepN'
p4343
I0
sS'trials2.thisTrialN'
p4344
I155
sg2793
S'./stim/MorphF3_01_orig.jpg'
p4345
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00*"\xc0'
tRp4346
sg29
g47
(g49
S"\x00\x00\x00\x00\x00\x16'@"
tRp4347
sg30
I0
sg2797
g47
(g588
S'\x9b\x00\x00\x00\x00\x00\x00\x00'
tRp4348
sg32
I1
sg41
g42
sg45
V8
sg33
F0.66814708709716797
sS'trials2.thisN'
p4349
I155
sa(dp4350
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4351
g47
(g588
S'\x9c\x00\x00\x00\x00\x00\x00\x00'
tRp4352
sS'trials2.thisRepN'
p4353
I0
sS'trials2.thisTrialN'
p4354
I156
sg2793
S'./stim/MorphM9_06_orig.jpg'
p4355
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x009"\xc0'
tRp4356
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xf8&@'
tRp4357
sg30
I0
sg2797
g47
(g588
S'\x9c\x00\x00\x00\x00\x00\x00\x00'
tRp4358
sg32
I1
sg41
g42
sg45
V8
sg33
F1.1726589202880859
sS'trials2.thisN'
p4359
I156
sa(dp4360
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4361
g47
(g588
S'\x9d\x00\x00\x00\x00\x00\x00\x00'
tRp4362
sS'trials2.thisRepN'
p4363
I0
sS'trials2.thisTrialN'
p4364
I157
sg2793
S'./stim/MorphF10_01_orig.jpg'
p4365
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x009"\xc0'
tRp4366
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xf8&@'
tRp4367
sg30
I0
sg2797
g47
(g588
S'\x9d\x00\x00\x00\x00\x00\x00\x00'
tRp4368
sg32
I1
sg41
g42
sg45
V8
sg33
F0.81801295280456543
sS'trials2.thisN'
p4369
I157
sa(dp4370
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4371
g47
(g588
S'\x9e\x00\x00\x00\x00\x00\x00\x00'
tRp4372
sS'trials2.thisRepN'
p4373
I0
sS'trials2.thisTrialN'
p4374
I158
sg2793
S'./stim/MorphM2_05_orig.jpg'
p4375
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00H"\xc0'
tRp4376
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xe9&@'
tRp4377
sg30
I0
sg2797
g47
(g588
S'\x9e\x00\x00\x00\x00\x00\x00\x00'
tRp4378
sg32
I1
sg41
g42
sg45
V8
sg33
F0.70068001747131348
sS'trials2.thisN'
p4379
I158
sa(dp4380
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4381
g47
(g588
S'\x9f\x00\x00\x00\x00\x00\x00\x00'
tRp4382
sS'trials2.thisRepN'
p4383
I0
sS'trials2.thisTrialN'
p4384
I159
sg2793
S'./stim/MorphM4_03_orig.jpg'
p4385
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00H"\xc0'
tRp4386
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xe9&@'
tRp4387
sg30
I0
sg2797
g47
(g588
S'\x9f\x00\x00\x00\x00\x00\x00\x00'
tRp4388
sg32
I1
sg41
g42
sg45
V8
sg33
F1.4051158428192139
sS'trials2.thisN'
p4389
I159
sa(dp4390
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4391
g47
(g588
S'\xa0\x00\x00\x00\x00\x00\x00\x00'
tRp4392
sS'trials2.thisRepN'
p4393
I0
sS'trials2.thisTrialN'
p4394
I160
sg2793
S'./stim/MorphF7_02_orig.jpg'
p4395
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00W"\xc0'
tRp4396
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xe9&@'
tRp4397
sg30
I0
sg2797
g47
(g588
S'\xa0\x00\x00\x00\x00\x00\x00\x00'
tRp4398
sg32
I1
sg41
g42
sg45
V8
sg33
F1.4055399894714355
sS'trials2.thisN'
p4399
I160
sa(dp4400
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4401
g47
(g588
S'\xa1\x00\x00\x00\x00\x00\x00\x00'
tRp4402
sS'trials2.thisRepN'
p4403
I0
sS'trials2.thisTrialN'
p4404
I161
sg2793
S'./stim/MorphM8_01_orig.jpg'
p4405
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00W"\xc0'
tRp4406
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xe9&@'
tRp4407
sg30
I0
sg2797
g47
(g588
S'\xa1\x00\x00\x00\x00\x00\x00\x00'
tRp4408
sg32
I1
sg41
g42
sg45
V8
sg33
F0.75146102905273438
sS'trials2.thisN'
p4409
I161
sa(dp4410
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4411
g47
(g588
S'\xa2\x00\x00\x00\x00\x00\x00\x00'
tRp4412
sS'trials2.thisRepN'
p4413
I0
sS'trials2.thisTrialN'
p4414
I162
sg2793
S'./stim/MorphF5_04_orig.jpg'
p4415
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00f"\xc0'
tRp4416
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xda&@'
tRp4417
sg30
I0
sg2797
g47
(g588
S'\xa2\x00\x00\x00\x00\x00\x00\x00'
tRp4418
sg32
I1
sg41
g42
sg45
V8
sg33
F0.78673219680786133
sS'trials2.thisN'
p4419
I162
sa(dp4420
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4421
g47
(g588
S'\xa3\x00\x00\x00\x00\x00\x00\x00'
tRp4422
sS'trials2.thisRepN'
p4423
I0
sS'trials2.thisTrialN'
p4424
I163
sg2793
S'./stim/MorphM1_01_orig.jpg'
p4425
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00f"\xc0'
tRp4426
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xda&@'
tRp4427
sg30
I0
sg2797
g47
(g588
S'\xa3\x00\x00\x00\x00\x00\x00\x00'
tRp4428
sg32
I1
sg41
g42
sg45
V8
sg33
F0.73598003387451172
sS'trials2.thisN'
p4429
I163
sa(dp4430
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4431
g47
(g588
S'\xa4\x00\x00\x00\x00\x00\x00\x00'
tRp4432
sS'trials2.thisRepN'
p4433
I0
sS'trials2.thisTrialN'
p4434
I164
sg2793
S'./stim/MorphM9_07_orig.jpg'
p4435
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00f"\xc0'
tRp4436
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xda&@'
tRp4437
sg30
I1
sg2797
g47
(g588
S'\xa4\x00\x00\x00\x00\x00\x00\x00'
tRp4438
sg32
I0
sg41
g42
sg45
V8
sg33
F3.921004056930542
sS'trials2.thisN'
p4439
I164
sa(dp4440
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4441
g47
(g588
S'\xa5\x00\x00\x00\x00\x00\x00\x00'
tRp4442
sS'trials2.thisRepN'
p4443
I0
sS'trials2.thisTrialN'
p4444
I165
sg2793
S'./stim/MorphM10_07_orig.jpg'
p4445
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00f"\xc0'
tRp4446
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xda&@'
tRp4447
sg30
I1
sg2797
g47
(g588
S'\xa5\x00\x00\x00\x00\x00\x00\x00'
tRp4448
sg32
I0
sg41
g42
sg45
V8
sg33
F0.63528609275817871
sS'trials2.thisN'
p4449
I165
sa(dp4450
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4451
g47
(g588
S'\xa6\x00\x00\x00\x00\x00\x00\x00'
tRp4452
sS'trials2.thisRepN'
p4453
I0
sS'trials2.thisTrialN'
p4454
I166
sg2793
S'./stim/MorphM8_00_orig.jpg'
p4455
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00u"\xc0'
tRp4456
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xbc&@'
tRp4457
sg30
I0
sg2797
g47
(g588
S'\xa6\x00\x00\x00\x00\x00\x00\x00'
tRp4458
sg32
I1
sg41
g42
sg45
V8
sg33
F0.76999807357788086
sS'trials2.thisN'
p4459
I166
sa(dp4460
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4461
g47
(g588
S'\xa7\x00\x00\x00\x00\x00\x00\x00'
tRp4462
sS'trials2.thisRepN'
p4463
I0
sS'trials2.thisTrialN'
p4464
I167
sg2793
S'./stim/MorphF2_08_orig.jpg'
p4465
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x93"\xc0'
tRp4466
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xad&@'
tRp4467
sg30
I1
sg2797
g47
(g588
S'\xa7\x00\x00\x00\x00\x00\x00\x00'
tRp4468
sg32
I0
sg41
g42
sg45
V8
sg33
F0.71893095970153809
sS'trials2.thisN'
p4469
I167
sa(dp4470
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4471
g47
(g588
S'\xa8\x00\x00\x00\x00\x00\x00\x00'
tRp4472
sS'trials2.thisRepN'
p4473
I0
sS'trials2.thisTrialN'
p4474
I168
sg2793
S'./stim/MorphM8_09_orig.jpg'
p4475
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x84"\xc0'
tRp4476
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\x9e&@'
tRp4477
sg30
I1
sg2797
g47
(g588
S'\xa8\x00\x00\x00\x00\x00\x00\x00'
tRp4478
sg32
I0
sg41
g42
sg45
V8
sg33
F1.2056150436401367
sS'trials2.thisN'
p4479
I168
sa(dp4480
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4481
g47
(g588
S'\xa9\x00\x00\x00\x00\x00\x00\x00'
tRp4482
sS'trials2.thisRepN'
p4483
I0
sS'trials2.thisTrialN'
p4484
I169
sg2793
S'./stim/MorphF1_01_orig.jpg'
p4485
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x84"\xc0'
tRp4486
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xad&@'
tRp4487
sg30
I0
sg2797
g47
(g588
S'\xa9\x00\x00\x00\x00\x00\x00\x00'
tRp4488
sg32
I1
sg41
g42
sg45
V8
sg33
F0.58313202857971191
sS'trials2.thisN'
p4489
I169
sa(dp4490
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4491
g47
(g588
S'\xaa\x00\x00\x00\x00\x00\x00\x00'
tRp4492
sS'trials2.thisRepN'
p4493
I0
sS'trials2.thisTrialN'
p4494
I170
sg2793
S'./stim/MorphM5_08_orig.jpg'
p4495
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x84"\xc0'
tRp4496
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xbc&@'
tRp4497
sg30
I1
sg2797
g47
(g588
S'\xaa\x00\x00\x00\x00\x00\x00\x00'
tRp4498
sg32
I0
sg41
g42
sg45
V8
sg33
F0.78635001182556152
sS'trials2.thisN'
p4499
I170
sa(dp4500
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4501
g47
(g588
S'\xab\x00\x00\x00\x00\x00\x00\x00'
tRp4502
sS'trials2.thisRepN'
p4503
I0
sS'trials2.thisTrialN'
p4504
I171
sg2793
S'./stim/MorphM2_06_orig.jpg'
p4505
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x84"\xc0'
tRp4506
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xbc&@'
tRp4507
sg30
I0
sg2797
g47
(g588
S'\xab\x00\x00\x00\x00\x00\x00\x00'
tRp4508
sg32
I1
sg41
g42
sg45
V8
sg33
F0.71950292587280273
sS'trials2.thisN'
p4509
I171
sa(dp4510
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4511
g47
(g588
S'\xac\x00\x00\x00\x00\x00\x00\x00'
tRp4512
sS'trials2.thisRepN'
p4513
I0
sS'trials2.thisTrialN'
p4514
I172
sg2793
S'./stim/MorphM6_10_orig.jpg'
p4515
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00u"\xc0'
tRp4516
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xcb&@'
tRp4517
sg30
I1
sg2797
g47
(g588
S'\xac\x00\x00\x00\x00\x00\x00\x00'
tRp4518
sg32
I0
sg41
g42
sg45
V8
sg33
F1.7584340572357178
sS'trials2.thisN'
p4519
I172
sa(dp4520
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4521
g47
(g588
S'\xad\x00\x00\x00\x00\x00\x00\x00'
tRp4522
sS'trials2.thisRepN'
p4523
I0
sS'trials2.thisTrialN'
p4524
I173
sg2793
S'./stim/MorphF10_04_orig.jpg'
p4525
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00f"\xc0'
tRp4526
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xda&@'
tRp4527
sg30
I0
sg2797
g47
(g588
S'\xad\x00\x00\x00\x00\x00\x00\x00'
tRp4528
sg32
I1
sg41
g42
sg45
V8
sg33
F2.479633092880249
sS'trials2.thisN'
p4529
I173
sa(dp4530
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4531
g47
(g588
S'\xae\x00\x00\x00\x00\x00\x00\x00'
tRp4532
sS'trials2.thisRepN'
p4533
I0
sS'trials2.thisTrialN'
p4534
I174
sg2793
S'./stim/MorphM7_00_orig.jpg'
p4535
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00f"\xc0'
tRp4536
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xda&@'
tRp4537
sg30
I0
sg2797
g47
(g588
S'\xae\x00\x00\x00\x00\x00\x00\x00'
tRp4538
sg32
I1
sg41
g42
sg45
V8
sg33
F1.9258110523223877
sS'trials2.thisN'
p4539
I174
sa(dp4540
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4541
g47
(g588
S'\xaf\x00\x00\x00\x00\x00\x00\x00'
tRp4542
sS'trials2.thisRepN'
p4543
I0
sS'trials2.thisTrialN'
p4544
I175
sg2793
S'./stim/MorphF8_05_orig.jpg'
p4545
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00f"\xc0'
tRp4546
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xda&@'
tRp4547
sg30
I0
sg2797
g47
(g588
S'\xaf\x00\x00\x00\x00\x00\x00\x00'
tRp4548
sg32
I1
sg41
g42
sg45
V8
sg33
F3.4846739768981934
sS'trials2.thisN'
p4549
I175
sa(dp4550
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4551
g47
(g588
S'\xb0\x00\x00\x00\x00\x00\x00\x00'
tRp4552
sS'trials2.thisRepN'
p4553
I0
sS'trials2.thisTrialN'
p4554
I176
sg2793
S'./stim/MorphF2_04_orig.jpg'
p4555
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00W"\xc0'
tRp4556
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xe9&@'
tRp4557
sg30
I0
sg2797
g47
(g588
S'\xb0\x00\x00\x00\x00\x00\x00\x00'
tRp4558
sg32
I1
sg41
g42
sg45
V8
sg33
F0.56860804557800293
sS'trials2.thisN'
p4559
I176
sa(dp4560
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4561
g47
(g588
S'\xb1\x00\x00\x00\x00\x00\x00\x00'
tRp4562
sS'trials2.thisRepN'
p4563
I0
sS'trials2.thisTrialN'
p4564
I177
sg2793
S'./stim/MorphM7_03_orig.jpg'
p4565
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00W"\xc0'
tRp4566
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xe9&@'
tRp4567
sg30
I0
sg2797
g47
(g588
S'\xb1\x00\x00\x00\x00\x00\x00\x00'
tRp4568
sg32
I1
sg41
g42
sg45
V8
sg33
F0.71955680847167969
sS'trials2.thisN'
p4569
I177
sa(dp4570
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4571
g47
(g588
S'\xb2\x00\x00\x00\x00\x00\x00\x00'
tRp4572
sS'trials2.thisRepN'
p4573
I0
sS'trials2.thisTrialN'
p4574
I178
sg2793
S'./stim/MorphM4_00_orig.jpg'
p4575
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00H"\xc0'
tRp4576
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xda&@'
tRp4577
sg30
I0
sg2797
g47
(g588
S'\xb2\x00\x00\x00\x00\x00\x00\x00'
tRp4578
sg32
I1
sg41
g42
sg45
V8
sg33
F0.68549585342407227
sS'trials2.thisN'
p4579
I178
sa(dp4580
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4581
g47
(g588
S'\xb3\x00\x00\x00\x00\x00\x00\x00'
tRp4582
sS'trials2.thisRepN'
p4583
I0
sS'trials2.thisTrialN'
p4584
I179
sg2793
S'./stim/MorphM10_06_orig.jpg'
p4585
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00H"\xc0'
tRp4586
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xda&@'
tRp4587
sg30
I1
sg2797
g47
(g588
S'\xb3\x00\x00\x00\x00\x00\x00\x00'
tRp4588
sg32
I0
sg41
g42
sg45
V8
sg33
F0.81989502906799316
sS'trials2.thisN'
p4589
I179
sa(dp4590
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4591
g47
(g588
S'\xb4\x00\x00\x00\x00\x00\x00\x00'
tRp4592
sS'trials2.thisRepN'
p4593
I0
sS'trials2.thisTrialN'
p4594
I180
sg2793
S'./stim/MorphF8_07_orig.jpg'
p4595
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00H"\xc0'
tRp4596
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xda&@'
tRp4597
sg30
I1
sg2797
g47
(g588
S'\xb4\x00\x00\x00\x00\x00\x00\x00'
tRp4598
sg32
I0
sg41
g42
sg45
V8
sg33
F1.0205168724060059
sS'trials2.thisN'
p4599
I180
sa(dp4600
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4601
g47
(g588
S'\xb5\x00\x00\x00\x00\x00\x00\x00'
tRp4602
sS'trials2.thisRepN'
p4603
I0
sS'trials2.thisTrialN'
p4604
I181
sg2793
S'./stim/MorphM5_01_orig.jpg'
p4605
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x009"\xc0'
tRp4606
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xcb&@'
tRp4607
sg30
I1
sg2797
g47
(g588
S'\xb5\x00\x00\x00\x00\x00\x00\x00'
tRp4608
sg32
I0
sg41
g42
sg45
V8
sg33
F0.7531280517578125
sS'trials2.thisN'
p4609
I181
sa(dp4610
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4611
g47
(g588
S'\xb6\x00\x00\x00\x00\x00\x00\x00'
tRp4612
sS'trials2.thisRepN'
p4613
I0
sS'trials2.thisTrialN'
p4614
I182
sg2793
S'./stim/MorphM7_05_orig.jpg'
p4615
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x009"\xc0'
tRp4616
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xcb&@'
tRp4617
sg30
I1
sg2797
g47
(g588
S'\xb6\x00\x00\x00\x00\x00\x00\x00'
tRp4618
sg32
I0
sg41
g42
sg45
V8
sg33
F1.572411060333252
sS'trials2.thisN'
p4619
I182
sa(dp4620
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4621
g47
(g588
S'\xb7\x00\x00\x00\x00\x00\x00\x00'
tRp4622
sS'trials2.thisRepN'
p4623
I0
sS'trials2.thisTrialN'
p4624
I183
sg2793
S'./stim/MorphF5_10_orig.jpg'
p4625
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x009"\xc0'
tRp4626
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xcb&@'
tRp4627
sg30
I1
sg2797
g47
(g588
S'\xb7\x00\x00\x00\x00\x00\x00\x00'
tRp4628
sg32
I0
sg41
g42
sg45
V8
sg33
F0.75175595283508301
sS'trials2.thisN'
p4629
I183
sa(dp4630
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4631
g47
(g588
S'\xb8\x00\x00\x00\x00\x00\x00\x00'
tRp4632
sS'trials2.thisRepN'
p4633
I0
sS'trials2.thisTrialN'
p4634
I184
sg2793
S'./stim/MorphM1_08_orig.jpg'
p4635
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x009"\xc0'
tRp4636
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xcb&@'
tRp4637
sg30
I1
sg2797
g47
(g588
S'\xb8\x00\x00\x00\x00\x00\x00\x00'
tRp4638
sg32
I0
sg41
g42
sg45
V8
sg33
F1.9930970668792725
sS'trials2.thisN'
p4639
I184
sa(dp4640
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4641
g47
(g588
S'\xb9\x00\x00\x00\x00\x00\x00\x00'
tRp4642
sS'trials2.thisRepN'
p4643
I0
sS'trials2.thisTrialN'
p4644
I185
sg2793
S'./stim/MorphF8_04_orig.jpg'
p4645
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x009"\xc0'
tRp4646
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xcb&@'
tRp4647
sg30
I0
sg2797
g47
(g588
S'\xb9\x00\x00\x00\x00\x00\x00\x00'
tRp4648
sg32
I1
sg41
g42
sg45
V8
sg33
F1.2368741035461426
sS'trials2.thisN'
p4649
I185
sa(dp4650
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4651
g47
(g588
S'\xba\x00\x00\x00\x00\x00\x00\x00'
tRp4652
sS'trials2.thisRepN'
p4653
I0
sS'trials2.thisTrialN'
p4654
I186
sg2793
S'./stim/MorphF9_00_orig.jpg'
p4655
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00*"\xc0'
tRp4656
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xbc&@'
tRp4657
sg30
I0
sg2797
g47
(g588
S'\xba\x00\x00\x00\x00\x00\x00\x00'
tRp4658
sg32
I1
sg41
g42
sg45
V8
sg33
F0.78563404083251953
sS'trials2.thisN'
p4659
I186
sa(dp4660
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4661
g47
(g588
S'\xbb\x00\x00\x00\x00\x00\x00\x00'
tRp4662
sS'trials2.thisRepN'
p4663
I0
sS'trials2.thisTrialN'
p4664
I187
sg2793
S'./stim/MorphM3_02_orig.jpg'
p4665
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00*"\xc0'
tRp4666
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xbc&@'
tRp4667
sg30
I1
sg2797
g47
(g588
S'\xbb\x00\x00\x00\x00\x00\x00\x00'
tRp4668
sg32
I0
sg41
g42
sg45
V8
sg33
F1.7397029399871826
sS'trials2.thisN'
p4669
I187
sa(dp4670
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4671
g47
(g588
S'\xbc\x00\x00\x00\x00\x00\x00\x00'
tRp4672
sS'trials2.thisRepN'
p4673
I0
sS'trials2.thisTrialN'
p4674
I188
sg2793
S'./stim/MorphF2_03_orig.jpg'
p4675
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00*"\xc0'
tRp4676
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xbc&@'
tRp4677
sg30
I1
sg2797
g47
(g588
S'\xbc\x00\x00\x00\x00\x00\x00\x00'
tRp4678
sg32
I0
sg41
g42
sg45
V8
sg33
F0.68595409393310547
sS'trials2.thisN'
p4679
I188
sa(dp4680
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4681
g47
(g588
S'\xbd\x00\x00\x00\x00\x00\x00\x00'
tRp4682
sS'trials2.thisRepN'
p4683
I0
sS'trials2.thisTrialN'
p4684
I189
sg2793
S'./stim/MorphM4_06_orig.jpg'
p4685
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00*"\xc0'
tRp4686
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xbc&@'
tRp4687
sg30
I0
sg2797
g47
(g588
S'\xbd\x00\x00\x00\x00\x00\x00\x00'
tRp4688
sg32
I1
sg41
g42
sg45
V8
sg33
F0.71967792510986328
sS'trials2.thisN'
p4689
I189
sa(dp4690
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4691
g47
(g588
S'\xbe\x00\x00\x00\x00\x00\x00\x00'
tRp4692
sS'trials2.thisRepN'
p4693
I0
sS'trials2.thisTrialN'
p4694
I190
sg2793
S'./stim/MorphM8_04_orig.jpg'
p4695
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00*"\xc0'
tRp4696
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xad&@'
tRp4697
sg30
I0
sg2797
g47
(g588
S'\xbe\x00\x00\x00\x00\x00\x00\x00'
tRp4698
sg32
I1
sg41
g42
sg45
V8
sg33
F0.83669519424438477
sS'trials2.thisN'
p4699
I190
sa(dp4700
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4701
g47
(g588
S'\xbf\x00\x00\x00\x00\x00\x00\x00'
tRp4702
sS'trials2.thisRepN'
p4703
I0
sS'trials2.thisTrialN'
p4704
I191
sg2793
S'./stim/MorphF3_09_orig.jpg'
p4705
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00*"\xc0'
tRp4706
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xad&@'
tRp4707
sg30
I0
sg2797
g47
(g588
S'\xbf\x00\x00\x00\x00\x00\x00\x00'
tRp4708
sg32
I1
sg41
g42
sg45
V8
sg33
F1.0374999046325684
sS'trials2.thisN'
p4709
I191
sa(dp4710
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4711
g47
(g588
S'\xc0\x00\x00\x00\x00\x00\x00\x00'
tRp4712
sS'trials2.thisRepN'
p4713
I0
sS'trials2.thisTrialN'
p4714
I192
sg2793
S'./stim/MorphF2_05_orig.jpg'
p4715
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00*"\xc0'
tRp4716
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xad&@'
tRp4717
sg30
I1
sg2797
g47
(g588
S'\xc0\x00\x00\x00\x00\x00\x00\x00'
tRp4718
sg32
I0
sg41
g42
sg45
V8
sg33
F1.1715860366821289
sS'trials2.thisN'
p4719
I192
sa(dp4720
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4721
g47
(g588
S'\xc1\x00\x00\x00\x00\x00\x00\x00'
tRp4722
sS'trials2.thisRepN'
p4723
I0
sS'trials2.thisTrialN'
p4724
I193
sg2793
S'./stim/MorphF3_05_orig.jpg'
p4725
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00*"\xc0'
tRp4726
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xad&@'
tRp4727
sg30
I0
sg2797
g47
(g588
S'\xc1\x00\x00\x00\x00\x00\x00\x00'
tRp4728
sg32
I1
sg41
g42
sg45
V8
sg33
F0.7360379695892334
sS'trials2.thisN'
p4729
I193
sa(dp4730
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4731
g47
(g588
S'\xc2\x00\x00\x00\x00\x00\x00\x00'
tRp4732
sS'trials2.thisRepN'
p4733
I0
sS'trials2.thisTrialN'
p4734
I194
sg2793
S'./stim/MorphF5_00_orig.jpg'
p4735
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00*"\xc0'
tRp4736
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xad&@'
tRp4737
sg30
I0
sg2797
g47
(g588
S'\xc2\x00\x00\x00\x00\x00\x00\x00'
tRp4738
sg32
I1
sg41
g42
sg45
V8
sg33
F0.9201509952545166
sS'trials2.thisN'
p4739
I194
sa(dp4740
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4741
g47
(g588
S'\xc3\x00\x00\x00\x00\x00\x00\x00'
tRp4742
sS'trials2.thisRepN'
p4743
I0
sS'trials2.thisTrialN'
p4744
I195
sg2793
S'./stim/MorphM3_08_orig.jpg'
p4745
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00*"\xc0'
tRp4746
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xad&@'
tRp4747
sg30
I1
sg2797
g47
(g588
S'\xc3\x00\x00\x00\x00\x00\x00\x00'
tRp4748
sg32
I0
sg41
g42
sg45
V8
sg33
F1.0529789924621582
sS'trials2.thisN'
p4749
I195
sa(dp4750
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4751
g47
(g588
S'\xc4\x00\x00\x00\x00\x00\x00\x00'
tRp4752
sS'trials2.thisRepN'
p4753
I0
sS'trials2.thisTrialN'
p4754
I196
sg2793
S'./stim/MorphM4_07_orig.jpg'
p4755
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00*"\xc0'
tRp4756
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xad&@'
tRp4757
sg30
I0
sg2797
g47
(g588
S'\xc4\x00\x00\x00\x00\x00\x00\x00'
tRp4758
sg32
I1
sg41
g42
sg45
V8
sg33
F0.66805410385131836
sS'trials2.thisN'
p4759
I196
sa(dp4760
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4761
g47
(g588
S'\xc5\x00\x00\x00\x00\x00\x00\x00'
tRp4762
sS'trials2.thisRepN'
p4763
I0
sS'trials2.thisTrialN'
p4764
I197
sg2793
S'./stim/MorphF8_01_orig.jpg'
p4765
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x1b"\xc0'
tRp4766
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xad&@'
tRp4767
sg30
I0
sg2797
g47
(g588
S'\xc5\x00\x00\x00\x00\x00\x00\x00'
tRp4768
sg32
I1
sg41
g42
sg45
V8
sg33
F2.0605258941650391
sS'trials2.thisN'
p4769
I197
sa(dp4770
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4771
g47
(g588
S'\xc6\x00\x00\x00\x00\x00\x00\x00'
tRp4772
sS'trials2.thisRepN'
p4773
I0
sS'trials2.thisTrialN'
p4774
I198
sg2793
S'./stim/MorphF6_02_orig.jpg'
p4775
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xfd!\xc0'
tRp4776
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xcb&@'
tRp4777
sg30
I0
sg2797
g47
(g588
S'\xc6\x00\x00\x00\x00\x00\x00\x00'
tRp4778
sg32
I1
sg41
g42
sg45
V8
sg33
F1.0696191787719727
sS'trials2.thisN'
p4779
I198
sa(dp4780
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4781
g47
(g588
S'\xc7\x00\x00\x00\x00\x00\x00\x00'
tRp4782
sS'trials2.thisRepN'
p4783
I0
sS'trials2.thisTrialN'
p4784
I199
sg2793
S'./stim/MorphM7_04_orig.jpg'
p4785
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xee!\xc0'
tRp4786
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xcb&@'
tRp4787
sg30
I1
sg2797
g47
(g588
S'\xc7\x00\x00\x00\x00\x00\x00\x00'
tRp4788
sg32
I0
sg41
g42
sg45
V8
sg33
F2.4103298187255859
sS'trials2.thisN'
p4789
I199
sa(dp4790
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4791
g47
(g588
S'\xc8\x00\x00\x00\x00\x00\x00\x00'
tRp4792
sS'trials2.thisRepN'
p4793
I0
sS'trials2.thisTrialN'
p4794
I200
sg2793
S'./stim/MorphM9_09_orig.jpg'
p4795
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xdf!\xc0'
tRp4796
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xda&@'
tRp4797
sg30
I1
sg2797
g47
(g588
S'\xc8\x00\x00\x00\x00\x00\x00\x00'
tRp4798
sg32
I0
sg41
g42
sg45
V8
sg33
F0.81989502906799316
sS'trials2.thisN'
p4799
I200
sa(dp4800
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4801
g47
(g588
S'\xc9\x00\x00\x00\x00\x00\x00\x00'
tRp4802
sS'trials2.thisRepN'
p4803
I0
sS'trials2.thisTrialN'
p4804
I201
sg2793
S'./stim/MorphM3_03_orig.jpg'
p4805
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xdf!\xc0'
tRp4806
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xda&@'
tRp4807
sg30
I1
sg2797
g47
(g588
S'\xc9\x00\x00\x00\x00\x00\x00\x00'
tRp4808
sg32
I0
sg41
g42
sg45
V8
sg33
F0.97066807746887207
sS'trials2.thisN'
p4809
I201
sa(dp4810
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4811
g47
(g588
S'\xca\x00\x00\x00\x00\x00\x00\x00'
tRp4812
sS'trials2.thisRepN'
p4813
I0
sS'trials2.thisTrialN'
p4814
I202
sg2793
S'./stim/MorphM7_08_orig.jpg'
p4815
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xdf!\xc0'
tRp4816
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xda&@'
tRp4817
sg30
I1
sg2797
g47
(g588
S'\xca\x00\x00\x00\x00\x00\x00\x00'
tRp4818
sg32
I0
sg41
g42
sg45
V8
sg33
F1.440514087677002
sS'trials2.thisN'
p4819
I202
sa(dp4820
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4821
g47
(g588
S'\xcb\x00\x00\x00\x00\x00\x00\x00'
tRp4822
sS'trials2.thisRepN'
p4823
I0
sS'trials2.thisTrialN'
p4824
I203
sg2793
S'./stim/MorphM2_08_orig.jpg'
p4825
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xdf!\xc0'
tRp4826
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xda&@'
tRp4827
sg30
I0
sg2797
g47
(g588
S'\xcb\x00\x00\x00\x00\x00\x00\x00'
tRp4828
sg32
I1
sg41
g42
sg45
V8
sg33
F0.80231714248657227
sS'trials2.thisN'
p4829
I203
sa(dp4830
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4831
g47
(g588
S'\xcc\x00\x00\x00\x00\x00\x00\x00'
tRp4832
sS'trials2.thisRepN'
p4833
I0
sS'trials2.thisTrialN'
p4834
I204
sg2793
S'./stim/MorphF1_05_orig.jpg'
p4835
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xdf!\xc0'
tRp4836
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xda&@'
tRp4837
sg30
I0
sg2797
g47
(g588
S'\xcc\x00\x00\x00\x00\x00\x00\x00'
tRp4838
sg32
I1
sg41
g42
sg45
V8
sg33
F0.76970982551574707
sS'trials2.thisN'
p4839
I204
sa(dp4840
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4841
g47
(g588
S'\xcd\x00\x00\x00\x00\x00\x00\x00'
tRp4842
sS'trials2.thisRepN'
p4843
I0
sS'trials2.thisTrialN'
p4844
I205
sg2793
S'./stim/MorphM8_06_orig.jpg'
p4845
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xee!\xc0'
tRp4846
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xe9&@'
tRp4847
sg30
I0
sg2797
g47
(g588
S'\xcd\x00\x00\x00\x00\x00\x00\x00'
tRp4848
sg32
I1
sg41
g42
sg45
V8
sg33
F0.61776304244995117
sS'trials2.thisN'
p4849
I205
sa(dp4850
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4851
g47
(g588
S'\xce\x00\x00\x00\x00\x00\x00\x00'
tRp4852
sS'trials2.thisRepN'
p4853
I0
sS'trials2.thisTrialN'
p4854
I206
sg2793
S'./stim/MorphF6_09_orig.jpg'
p4855
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xfd!\xc0'
tRp4856
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xda&@'
tRp4857
sg30
I0
sg2797
g47
(g588
S'\xce\x00\x00\x00\x00\x00\x00\x00'
tRp4858
sg32
I1
sg41
g42
sg45
V8
sg33
F0.75095391273498535
sS'trials2.thisN'
p4859
I206
sa(dp4860
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4861
g47
(g588
S'\xcf\x00\x00\x00\x00\x00\x00\x00'
tRp4862
sS'trials2.thisRepN'
p4863
I0
sS'trials2.thisTrialN'
p4864
I207
sg2793
S'./stim/MorphM1_04_orig.jpg'
p4865
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xee!\xc0'
tRp4866
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xcb&@'
tRp4867
sg30
I0
sg2797
g47
(g588
S'\xcf\x00\x00\x00\x00\x00\x00\x00'
tRp4868
sg32
I1
sg41
g42
sg45
V8
sg33
F0.68611311912536621
sS'trials2.thisN'
p4869
I207
sa(dp4870
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4871
g47
(g588
S'\xd0\x00\x00\x00\x00\x00\x00\x00'
tRp4872
sS'trials2.thisRepN'
p4873
I0
sS'trials2.thisTrialN'
p4874
I208
sg2793
S'./stim/MorphM3_07_orig.jpg'
p4875
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xee!\xc0'
tRp4876
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xcb&@'
tRp4877
sg30
I1
sg2797
g47
(g588
S'\xd0\x00\x00\x00\x00\x00\x00\x00'
tRp4878
sg32
I0
sg41
g42
sg45
V8
sg33
F0.88715004920959473
sS'trials2.thisN'
p4879
I208
sa(dp4880
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4881
g47
(g588
S'\xd1\x00\x00\x00\x00\x00\x00\x00'
tRp4882
sS'trials2.thisRepN'
p4883
I0
sS'trials2.thisTrialN'
p4884
I209
sg2793
S'./stim/MorphF2_09_orig.jpg'
p4885
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xee!\xc0'
tRp4886
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xda&@'
tRp4887
sg30
I1
sg2797
g47
(g588
S'\xd1\x00\x00\x00\x00\x00\x00\x00'
tRp4888
sg32
I0
sg41
g42
sg45
V8
sg33
F0.71897482872009277
sS'trials2.thisN'
p4889
I209
sa(dp4890
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4891
g47
(g588
S'\xd2\x00\x00\x00\x00\x00\x00\x00'
tRp4892
sS'trials2.thisRepN'
p4893
I0
sS'trials2.thisTrialN'
p4894
I210
sg2793
S'./stim/MorphF4_07_orig.jpg'
p4895
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xdf!\xc0'
tRp4896
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xf8&@'
tRp4897
sg30
I1
sg2797
g47
(g588
S'\xd2\x00\x00\x00\x00\x00\x00\x00'
tRp4898
sg32
I0
sg41
g42
sg45
V8
sg33
F0.83672499656677246
sS'trials2.thisN'
p4899
I210
sa(dp4900
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4901
g47
(g588
S'\xd3\x00\x00\x00\x00\x00\x00\x00'
tRp4902
sS'trials2.thisRepN'
p4903
I0
sS'trials2.thisTrialN'
p4904
I211
sg2793
S'./stim/MorphM7_01_orig.jpg'
p4905
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xdf!\xc0'
tRp4906
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xf8&@'
tRp4907
sg30
I0
sg2797
g47
(g588
S'\xd3\x00\x00\x00\x00\x00\x00\x00'
tRp4908
sg32
I1
sg41
g42
sg45
V8
sg33
F1.3882529735565186
sS'trials2.thisN'
p4909
I211
sa(dp4910
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4911
g47
(g588
S'\xd4\x00\x00\x00\x00\x00\x00\x00'
tRp4912
sS'trials2.thisRepN'
p4913
I0
sS'trials2.thisTrialN'
p4914
I212
sg2793
S'./stim/MorphF8_03_orig.jpg'
p4915
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\xfd!\xc0'
tRp4916
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xf8&@'
tRp4917
sg30
I0
sg2797
g47
(g588
S'\xd4\x00\x00\x00\x00\x00\x00\x00'
tRp4918
sg32
I1
sg41
g42
sg45
V8
sg33
F1.0367920398712158
sS'trials2.thisN'
p4919
I212
sa(dp4920
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4921
g47
(g588
S'\xd5\x00\x00\x00\x00\x00\x00\x00'
tRp4922
sS'trials2.thisRepN'
p4923
I0
sS'trials2.thisTrialN'
p4924
I213
sg2793
S'./stim/MorphM8_02_orig.jpg'
p4925
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x0c"\xc0'
tRp4926
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xe9&@'
tRp4927
sg30
I0
sg2797
g47
(g588
S'\xd5\x00\x00\x00\x00\x00\x00\x00'
tRp4928
sg32
I1
sg41
g42
sg45
V8
sg33
F0.90419602394104004
sS'trials2.thisN'
p4929
I213
sa(dp4930
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4931
g47
(g588
S'\xd6\x00\x00\x00\x00\x00\x00\x00'
tRp4932
sS'trials2.thisRepN'
p4933
I0
sS'trials2.thisTrialN'
p4934
I214
sg2793
S'./stim/MorphM10_02_orig.jpg'
p4935
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x0c"\xc0'
tRp4936
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xe9&@'
tRp4937
sg30
I0
sg2797
g47
(g588
S'\xd6\x00\x00\x00\x00\x00\x00\x00'
tRp4938
sg32
I1
sg41
g42
sg45
V8
sg33
F1.4221351146697998
sS'trials2.thisN'
p4939
I214
sa(dp4940
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4941
g47
(g588
S'\xd7\x00\x00\x00\x00\x00\x00\x00'
tRp4942
sS'trials2.thisRepN'
p4943
I0
sS'trials2.thisTrialN'
p4944
I215
sg2793
S'./stim/MorphM5_09_orig.jpg'
p4945
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x0c"\xc0'
tRp4946
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xe9&@'
tRp4947
sg30
I1
sg2797
g47
(g588
S'\xd7\x00\x00\x00\x00\x00\x00\x00'
tRp4948
sg32
I0
sg41
g42
sg45
V8
sg33
F0.86879301071166992
sS'trials2.thisN'
p4949
I215
sa(dp4950
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4951
g47
(g588
S'\xd8\x00\x00\x00\x00\x00\x00\x00'
tRp4952
sS'trials2.thisRepN'
p4953
I0
sS'trials2.thisTrialN'
p4954
I216
sg2793
S'./stim/MorphF5_02_orig.jpg'
p4955
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x0c"\xc0'
tRp4956
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xe9&@'
tRp4957
sg30
I0
sg2797
g47
(g588
S'\xd8\x00\x00\x00\x00\x00\x00\x00'
tRp4958
sg32
I1
sg41
g42
sg45
V8
sg33
F1.3058600425720215
sS'trials2.thisN'
p4959
I216
sa(dp4960
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4961
g47
(g588
S'\xd9\x00\x00\x00\x00\x00\x00\x00'
tRp4962
sS'trials2.thisRepN'
p4963
I0
sS'trials2.thisTrialN'
p4964
I217
sg2793
S'./stim/MorphM10_10_orig.jpg'
p4965
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x0c"\xc0'
tRp4966
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xe9&@'
tRp4967
sg30
I1
sg2797
g47
(g588
S'\xd9\x00\x00\x00\x00\x00\x00\x00'
tRp4968
sg32
I0
sg41
g42
sg45
V8
sg33
F0.9191131591796875
sS'trials2.thisN'
p4969
I217
sa(dp4970
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4971
g47
(g588
S'\xda\x00\x00\x00\x00\x00\x00\x00'
tRp4972
sS'trials2.thisRepN'
p4973
I0
sS'trials2.thisTrialN'
p4974
I218
sg2793
S'./stim/MorphM2_00_orig.jpg'
p4975
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00\x0c"\xc0'
tRp4976
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xe9&@'
tRp4977
sg30
I0
sg2797
g47
(g588
S'\xda\x00\x00\x00\x00\x00\x00\x00'
tRp4978
sg32
I1
sg41
g42
sg45
V8
sg33
F0.87032413482666016
sS'trials2.thisN'
p4979
I218
sa(dp4980
g31
I0
sg44
g11
sg43
VA
sS'trials2.thisIndex'
p4981
g47
(g588
S'\xdb\x00\x00\x00\x00\x00\x00\x00'
tRp4982
sS'trials2.thisRepN'
p4983
I0
sS'trials2.thisTrialN'
p4984
I219
sg2793
S'./stim/MorphM9_05_orig.jpg'
p4985
sg46
g50
sg28
g47
(g49
S'\x00\x00\x00\x00\x00*"\xc0'
tRp4986
sg29
g47
(g49
S'\x00\x00\x00\x00\x00\xcb&@'
tRp4987
sg30
I0
sg2797
g47
(g588
S'\xdb\x00\x00\x00\x00\x00\x00\x00'
tRp4988
sg32
I1
sg41
g42
sg45
V8
sg33
F1.0359511375427246
sS'trials2.thisN'
p4989
I219
sa(dp4990
g44
g11
sg43
VA
sg36
S'return'
p4991
sg41
g42
sg37
F4.9900429248809814
sg45
V8
sg46
g50
sasS'loops'
p4992
(lp4993
g1
(cpsychopy.data
TrialHandler
p4994
g3
NtRp4995
(dp4996
S'origin'
p4997
V#!/usr/bin/env python2\u000a# -*- coding: utf-8 -*-\u000a\u000a"""\u000a ________    _______    ___       __           ________  ________   ________   _______    ________      \u000a|\u005c   ___  \u005c |\u005c  ___ \u005c  |\u005c  \u005c     |\u005c  \u005c        |\u005c  _____\u005c|\u005c   __  \u005c |\u005c   ____\u005c |\u005c  ___ \u005c  |\u005c   ____\u005c     \u000a\u005c \u005c  \u005c\u005c \u005c  \u005c\u005c \u005c   __/| \u005c \u005c  \u005c    \u005c \u005c  \u005c       \u005c \u005c  \u005c__/ \u005c \u005c  \u005c|\u005c  \u005c\u005c \u005c  \u005c___| \u005c \u005c   __/| \u005c \u005c  \u005c___|_    \u000a \u005c \u005c  \u005c\u005c \u005c  \u005c\u005c \u005c  \u005c_|/__\u005c \u005c  \u005c  __\u005c \u005c  \u005c       \u005c \u005c   __\u005c \u005c \u005c   __  \u005c\u005c \u005c  \u005c     \u005c \u005c  \u005c_|/__\u005c \u005c_____  \u005c   \u000a  \u005c \u005c  \u005c\u005c \u005c  \u005c\u005c \u005c  \u005c_|\u005c \u005c\u005c \u005c  \u005c|\u005c__\u005c_\u005c  \u005c       \u005c \u005c  \u005c_|  \u005c \u005c  \u005c \u005c  \u005c\u005c \u005c  \u005c____ \u005c \u005c  \u005c_|\u005c \u005c\u005c|____|\u005c  \u005c  \u000a   \u005c \u005c__\u005c\u005c \u005c__\u005c\u005c \u005c_______\u005c\u005c \u005c____________\u005c       \u005c \u005c__\u005c    \u005c \u005c__\u005c \u005c__\u005c\u005c \u005c_______\u005c\u005c \u005c_______\u005c ____\u005c_\u005c  \u005c \u000a    \u005c|__| \u005c|__| \u005c|_______| \u005c|____________|        \u005c|__|     \u005c|__|\u005c|__| \u005c|_______| \u005c|_______||\u005c_________\u005c\u000a                                                                                            \u005c|_________|\u000a"""\u000a\u000a\u000afrom __future__ import division  # so that 1/3=0.333 instead of 1/3=0\u000afrom psychopy import visual, core, data, event, logging, sound, gui\u000afrom psychopy.constants import *  # things like STARTED, FINISHED\u000aimport numpy as np  # whole numpy lib is available, prepend 'np.'\u000afrom numpy import sin, cos, tan, log, log10, pi, average, sqrt, std, deg2rad, rad2deg, linspace, asarray\u000afrom numpy.random import random, randint, normal, shuffle\u000aimport os  # handy system and path functions\u000a\u000a# Ensure that relative paths start from the same directory as this script\u000a_thisDir = os.path.dirname(os.path.abspath(__file__))\u000aos.chdir(_thisDir)\u000a\u000a# Store info about the experiment session\u000aexpName = 'facesParametric'  # from the Builder filename that created this script\u000aexpInfo = {u'participant': u'', u'group': u''}\u000adlg = gui.DlgFromDict(dictionary=expInfo, title=expName)\u000aif dlg.OK == False: core.quit()  # user pressed cancel\u000aexpInfo['date'] = data.getDateStr()  # add a simple timestamp\u000aexpInfo['expName'] = expName\u000a\u000a# Check whether the chosen participant number is valid\u000amyDlg = gui.Dlg(title="FEHLER")\u000amyDlg.addText(u'Vp-Nnummer zwischen 1 und 100 eingeben')\u000aassert len(str(expInfo['participant'])) > 0, myDlg.show()\u000atry:\u000a    assert int(expInfo['participant']) in range(1,101), myDlg.show()\u000aexcept:\u000a    myDlg.show()\u000a\u000a# Check whether a group membership has been defined\u000amyDlg = gui.Dlg(title="FEHLER")\u000amyDlg.addText(u'Gruppenzugehoerigkeit angeben')\u000aassert len(str(expInfo['group'])) > 0, myDlg.show()\u000a\u000a# Here, we check if the number of the current participant\u000a# is odd or even, and we swap the button order accordingly\u000a# (this also affects the result computation, so the 'angry'\u000a# button is different for the two versions)\u000a\u000aif int(expInfo['participant'])%2 == 1:\u000a    # odd participant numbers have buttons assigned fear-anger\u000a    mainInstructText = u'Im nachfolgenden Experiment werden Sie nacheinander einzelne Gesichter sehen.\u005cnSie m\u005cxfcssen jeweils entscheiden, ob das gezeigt Gesicht einen\u005cn\u005cxc4NGSTLICHEN oder \u005cxc4RGERLICHEN Ausdruck hat.\u005cn\u005cnEntscheiden Sie sich bei jedem gezeigten Gesicht f\u005cxfcr einen der beiden m\u005cxf6glichen Emotionsausdr\u005cxfccke.'\u000a    buttonInstructText = u'Dr\u005cxfccken Sie die LINKE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4NGSTLICH ist.\u005cn\u005cnDr\u005cxfccken Sie die RECHTE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4RGERLICH ist.'\u000a    # angry judgement on right mouse button\u000a    targetButton = 2\u000aelse:\u000a    # even participant numbers have button assigments anger-fear\u000a    mainInstructText = u'Im nachfolgenden Experiment werden Sie nacheinander einzelne Gesichter sehen.\u005cnSie m\u005cxfcssen jeweils entscheiden, ob das gezeigt Gesicht einen\u005cn \u005cxc4RGERLICHEN oder \u005cxc4NGSTLICHEN Ausdruck hat.\u005cn\u005cnEntscheiden Sie sich bei jedem gezeigten Gesicht f\u005cxfcr einen der beiden m\u005cxf6glichen Emotionsausdr\u005cxfccke.'\u000a    buttonInstructText = u'Dr\u005cxfccken Sie die LINKE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4RGERLICH ist.\u005cn\u005cnDr\u005cxfccken Sie die RECHTE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4NGSTLICH ist.'\u000a    # angry judgement on left mouse button\u000a    targetButton = 0\u000a\u000a# from the number defined in the prompt window, we derive\u000a# which array files (pt1 & pt2) should be fetched for the\u000a# current participant (this works for number from 1 to 999,\u000a# but of course the array file must also exist!)\u000a\u000athisParticipant = 'arrays/p'+ ('00' + str(expInfo['participant']))[-3:]\u000apt1Conditions = thisParticipant +'pt1.csv'\u000apt2Conditions = thisParticipant +'pt2.csv'\u000a\u000acountDict = {}\u000ahitsDict = {}\u000a\u000a\u000a# Data file name stem = absolute path + name; later add .psyexp, .csv, .log, etc\u000afilename = _thisDir + os.sep + 'data/%s_%s_%s_%s' %(expInfo['group'],expInfo['participant'], expName, expInfo['date'])\u000a\u000a# An ExperimentHandler isn't essential but helps with data saving\u000athisExp = data.ExperimentHandler(name=expName, version='',\u000a    extraInfo=expInfo, runtimeInfo=None,\u000a    originPath=None,\u000a    savePickle=True, saveWideText=True,\u000a    dataFileName=filename)\u000a#save a log file for detail verbose info\u000alogFile = logging.LogFile(filename+'.log', level=logging.EXP)\u000alogging.console.setLevel(logging.WARNING)  # this outputs to the screen, not a file\u000a\u000aendExpNow = False  # flag for 'escape' or other condition => quit the exp\u000a\u000a# Start Code - component code to be run before the window creation\u000a\u000a# Setup the Window\u000awin = visual.Window(size=[1600, 900], fullscr=True, screen=0, allowGUI=True, allowStencil=False,\u000a    monitor='testMonitor', color='black', colorSpace='rgb',\u000a    blendMode='avg', useFBO=True,\u000a    units='cm')\u000a# store frame rate of monitor if we can measure it successfully\u000aexpInfo['frameRate']=win.getActualFrameRate()\u000aif expInfo['frameRate']!=None:\u000a    frameDur = 1.0/round(expInfo['frameRate'])\u000aelse:\u000a    frameDur = 1.0/60.0 # couldn't get a reliable measure so guess\u000a\u000a# Initialize components for Routine "mainInstruct"\u000amainInstructClock = core.Clock()\u000amainText = visual.TextStim(win=win, ori=0, name='mainText',\u000a    text=mainInstructText,    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "buttonInstruct"\u000abuttonInstructClock = core.Clock()\u000abuttonText = visual.TextStim(win=win, ori=0, name='buttonText',\u000a    text=buttonInstructText,    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "startScreen"\u000astartScreenClock = core.Clock()\u000astartText = visual.TextStim(win=win, ori=0, name='startText',\u000a    text=u'Falls Sie noch Fragen haben,\u005cnwenden Sie sich bitte an die Versuchsleiterin.\u005cn\u005cnWeiter mit ENTER.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "mainTrial"\u000amainTrialClock = core.Clock()\u000afaceImg = visual.ImageStim(win=win, name='faceImg',\u000a    image='sin', mask=None,\u000a    ori=0, pos=[0, 0], size=[10.12,13.72],\u000a    color=[1,1,1], colorSpace='rgb', opacity=1,\u000a    flipHoriz=False, flipVert=False,\u000a    texRes=128, interpolate=True, depth=0.0)\u000amouseResp = event.Mouse(win=win,visible=False)\u000ax, y = [None, None]\u000a\u000a# Initialize components for Routine "forcedPause"\u000aforcedPauseClock = core.Clock()\u000apauseText = visual.TextStim(win=win, ori=0, name='pauseText',\u000a    text=u'Zeit f\u005cxfcr eine kurze Pause.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "resumeExperiment"\u000aresumeExperimentClock = core.Clock()\u000aresumeText = visual.TextStim(win=win, ori=0, name='resumeText',\u000a    text='Weiter mit ENTER.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "mainTrial"\u000amainTrialClock = core.Clock()\u000afaceImg = visual.ImageStim(win=win, name='faceImg',\u000a    image='sin', mask=None,\u000a    ori=0, pos=[0, 0], size=[10.12,13.72],\u000a    color=[1,1,1], colorSpace='rgb', opacity=1,\u000a    flipHoriz=False, flipVert=False,\u000a    texRes=128, interpolate=True, depth=0.0)\u000amouseResp = event.Mouse(win=win,visible=False)\u000ax, y = [None, None]\u000a\u000a# Initialize components for Routine "endInstruct"\u000aendInstructClock = core.Clock()\u000aendText = visual.TextStim(win=win, ori=0, name='endText',\u000a    text=u'Dieser Teil des Experiments ist nun zu Ende.\u005cnVielen Dank!\u005cn\u005cnWenden Sie sich bitte an die Versuchsleiterin.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a\u000a\u000a################################ BASIC EMOZ ##\u000a\u000a\u000a# Initialize components for Routine "basicInstruct"\u000abasicInstructClock = core.Clock()\u000atext = visual.TextStim(win=win, ori=0, name='text',\u000a    text=u"Im nachfolgenden Experiment werden Sie nacheinander einzelne Gesichter sehen.\u005cn\u005cnSie m\u005cxfcssen jeweils entscheiden, welchen Ausdruck das gezeigte Gesicht hat.\u005cn\u005cnZur Auswahl stehen Ihnen hierbei die folgenden M\u005cxf6glichkeiten:\u005cnFreude\u005cnAngst\u005cn\u005cxc4rger\u005cnTrauer\u005cnEkel\u005cn\u005cxdcberraschung\u005cnNeutral\u005cn\u005cnEntscheiden Sie sich bei jedem gezeigten Gesicht f\u005cxfcr einen der \u005cnm\u005cxf6glichen Gesichtsausdr\u005cxfccke.",    font='Arial',\u000a    pos=[0, 0], height=0.8, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "basicTrial"\u000abasicTrialClock = core.Clock()\u000abasicImage = visual.ImageStim(win=win, name='basicImage',\u000a    image='sin', mask=None,\u000a    ori=0, pos=[0, 3], size=[10.12,13.72],\u000a    color=[1,1,1], colorSpace='rgb', opacity=1,\u000a    flipHoriz=False, flipVert=False,\u000a    texRes=128, interpolate=True, depth=0.0)\u000a\u000abasicRating1 = visual.RatingScale(win=win, name='basicRating1', marker=u'hover', size=0.6, pos=[0.0, -0.5], choices=[u'Freude', u'Trauer'], tickHeight=-1, disappear=True)\u000abasicRating2 = visual.RatingScale(win=win, name='basicRating2', marker=u'hover', size=0.6, pos=[0.0, -0.6], choices=[u'Angst', u'\u005cxc4rger'], tickHeight=-1, singleClick=True, disappear=True)\u000abasicRating3 = visual.RatingScale(win=win, name='basicRating3', marker=u'hover', size=0.6, pos=[0.0, -0.7], choices=[u'Ekel', u'\u005cxdcberraschung'], tickHeight=-1, singleClick=True, disappear=True)\u000abasicRating4 = visual.RatingScale(win=win, name='basicRating4', marker=u'hover', size=0.6, pos=[0.0, -0.8], choices=[u' ',u'Neutral', u' '], tickHeight=-1, singleClick=True, disappear=True)\u000a\u000a# Initialize components for Routine "basicWait"\u000abasicWaitClock = core.Clock()\u000aISI = core.StaticPeriod(win=win, screenHz=expInfo['frameRate'], name='ISI')\u000a\u000a# Initialize components for Routine "basicEnd"\u000abasicEndClock = core.Clock()\u000atext_2 = visual.TextStim(win=win, ori=0, name='text_2',\u000a    text=u'Danke. Das war der erste Teil.\u005cnDr\u005cxfccken Sie ENTER um zum n\u005cxe4chsten Teil zu kommen',    font=u'Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a    \u000a    \u000a    \u000a    \u000a###############################################################################\u000a\u000a\u000a# Create some handy timers\u000aglobalClock = core.Clock()  # to track the time since experiment started\u000aroutineTimer = core.CountdownTimer()  # to track time remaining of each (non-slip) routine \u000a\u000a\u000a\u000a\u000a#############################################\u000a\u000a\u000a\u000a#------Prepare to start Routine "basicInstruct"-------\u000at = 0\u000abasicInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_2 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_2.status = NOT_STARTED\u000a# keep track of which components have finished\u000abasicInstructComponents = []\u000abasicInstructComponents.append(text)\u000abasicInstructComponents.append(key_resp_2)\u000afor thisComponent in basicInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "basicInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = basicInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *text* updates\u000a    if t >= 0.0 and text.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        text.tStart = t  # underestimates by a little under one frame\u000a        text.frameNStart = frameN  # exact frame index\u000a        text.setAutoDraw(True)\u000a    \u000a    # *key_resp_2* updates\u000a    if t >= 0.0 and key_resp_2.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_2.tStart = t  # underestimates by a little under one frame\u000a        key_resp_2.frameNStart = frameN  # exact frame index\u000a        key_resp_2.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_2.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_2.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_2.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_2.rt = key_resp_2.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in basicInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "basicInstruct"-------\u000afor thisComponent in basicInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_2.keys in ['', [], None]:  # No response was made\u000a   key_resp_2.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_2.keys',key_resp_2.keys)\u000aif key_resp_2.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_2.rt', key_resp_2.rt)\u000athisExp.nextEntry()\u000a# the Routine "basicInstruct" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a# set up handler to look after randomisation of conditions etc\u000abasicLoop = data.TrialHandler(nReps=1, method='fullRandom', \u000a    extraInfo=expInfo, originPath=None,\u000a    trialList=data.importConditions('./arrays/imgList.csv'),\u000a    seed=None, name='basicLoop')\u000athisExp.addLoop(basicLoop)  # add the loop to the experiment\u000athisBasicLoop = basicLoop.trialList[0]  # so we can initialise stimuli with some values\u000a# abbreviate parameter names if possible (e.g. rgb=thisBasicLoop.rgb)\u000aif thisBasicLoop != None:\u000a    for paramName in thisBasicLoop.keys():\u000a        exec(paramName + '= thisBasicLoop.' + paramName)\u000a\u000afor thisBasicLoop in basicLoop:\u000a    currentLoop = basicLoop\u000a    # abbreviate parameter names if possible (e.g. rgb = thisBasicLoop.rgb)\u000a    if thisBasicLoop != None:\u000a        for paramName in thisBasicLoop.keys():\u000a            exec(paramName + '= thisBasicLoop.' + paramName)\u000a    \u000a    #------Prepare to start Routine "basicTrial"-------\u000a    \u000a    \u000a    ###########\u000a    # resetting the rating scales each time, so that the last response isnt visible\u000a    \u000a    basicRating1 = visual.RatingScale(win=win, name='basicRating1', marker=u'hover', size=0.6, pos=[0.0, -0.5], choices=[u'Freude', u'Trauer'], tickHeight=-1, disappear=True)\u000a    basicRating2 = visual.RatingScale(win=win, name='basicRating2', marker=u'hover', size=0.6, pos=[0.0, -0.6], choices=[u'Angst', u'\u005cxc4rger'], tickHeight=-1, singleClick=True, disappear=True)\u000a    basicRating3 = visual.RatingScale(win=win, name='basicRating3', marker=u'hover', size=0.6, pos=[0.0, -0.7], choices=[u'Ekel', u'\u005cxdcberraschung'], tickHeight=-1, singleClick=True, disappear=True)\u000a    basicRating4 = visual.RatingScale(win=win, name='basicRating4', marker=u'hover', size=0.6, pos=[0.0, -0.8], choices=[u' ',u'Neutral', u' '], tickHeight=-1, singleClick=True, disappear=True)\u000a\u000a    ###########\u000a    \u000a    t = 0\u000a    basicTrialClock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    basicImage.setImage(img)\u000a    basicRating1.reset()\u000a    basicRating2.reset()\u000a    basicRating3.reset()\u000a    basicRating4.reset()\u000a    # keep track of which components have finished\u000a    basicTrialComponents = []\u000a    basicTrialComponents.append(basicImage)\u000a    basicTrialComponents.append(basicRating1)\u000a    basicTrialComponents.append(basicRating2)\u000a    basicTrialComponents.append(basicRating3)\u000a    basicTrialComponents.append(basicRating4)\u000a    for thisComponent in basicTrialComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    \u000a    # ugly hack: the labels need to be renamed as the "umlaute" cannot be saved to csv \u000a    basicRating1.choices = ['HAP', 'SAD']\u000a    basicRating2.choices = ['FEA', 'ANG']\u000a    basicRating3.choices = ['DIS', 'SUP']\u000a    basicRating4.choices = ['dummy','NTR', 'dummy']\u000a    #-------Start Routine "basicTrial"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = basicTrialClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        # *basicImage* updates\u000a        if t >= 0 and basicImage.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicImage.tStart = t  # underestimates by a little under one frame\u000a            basicImage.frameNStart = frameN  # exact frame index\u000a            basicImage.setAutoDraw(True)\u000a        if basicImage.status == STARTED and t >= (0 + (4.0-win.monitorFramePeriod*0.75)): #most of one frame period left\u000a            basicImage.setAutoDraw(False)\u000a        # *basicRating1* updates\u000a        if t >= 0.5 and basicRating1.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating1.tStart = t  # underestimates by a little under one frame\u000a            basicRating1.frameNStart = frameN  # exact frame index\u000a            basicRating1.setAutoDraw(True)\u000a        continueRoutine &= basicRating1.noResponse  # a response ends the trial\u000a        # *basicRating2* updates\u000a        if t >= 0.5 and basicRating2.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating2.tStart = t  # underestimates by a little under one frame\u000a            basicRating2.frameNStart = frameN  # exact frame index\u000a            basicRating2.setAutoDraw(True)\u000a        continueRoutine &= basicRating2.noResponse  # a response ends the trial\u000a        # *basicRating3* updates\u000a        if t >= 0.5 and basicRating3.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating3.tStart = t  # underestimates by a little under one frame\u000a            basicRating3.frameNStart = frameN  # exact frame index\u000a            basicRating3.setAutoDraw(True)\u000a        continueRoutine &= basicRating3.noResponse  # a response ends the trial\u000a        # *basicRating4* updates\u000a        if t >= 0.5 and basicRating4.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating4.tStart = t  # underestimates by a little under one frame\u000a            basicRating4.frameNStart = frameN  # exact frame index\u000a            basicRating4.setAutoDraw(True)\u000a        continueRoutine &= basicRating4.noResponse  # a response ends the trial\u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in basicTrialComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "basicTrial"-------\u000a    for thisComponent in basicTrialComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating1.response', basicRating1.getRating())\u000a    basicLoop.addData('basicRating1.rt', basicRating1.getRT())\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating2.response', basicRating2.getRating())\u000a    basicLoop.addData('basicRating2.rt', basicRating2.getRT())\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating3.response', basicRating3.getRating())\u000a    basicLoop.addData('basicRating3.rt', basicRating3.getRT())\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating4.response', basicRating4.getRating())\u000a    basicLoop.addData('basicRating4.rt', basicRating4.getRT())\u000a    # the Routine "basicTrial" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    \u000a    #------Prepare to start Routine "basicWait"-------\u000a    t = 0\u000a    basicWaitClock.reset()  # clock \u000a    frameN = -1\u000a    routineTimer.add(0.500000)\u000a    # update component parameters for each repeat\u000a    # keep track of which components have finished\u000a    basicWaitComponents = []\u000a    basicWaitComponents.append(ISI)\u000a    for thisComponent in basicWaitComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "basicWait"-------\u000a    continueRoutine = True\u000a    while continueRoutine and routineTimer.getTime() > 0:\u000a        # get current time\u000a        t = basicWaitClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        # *ISI* period\u000a        if t >= 0.0 and ISI.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            ISI.tStart = t  # underestimates by a little under one frame\u000a            ISI.frameNStart = frameN  # exact frame index\u000a            ISI.start(0.5)\u000a        elif ISI.status == STARTED: #one frame should pass before updating params and completing\u000a            ISI.complete() #finish the static period\u000a        \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in basicWaitComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "basicWait"-------\u000a    for thisComponent in basicWaitComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    thisExp.nextEntry()\u000a    \u000a# completed 1 repeats of 'basicLoop'\u000a\u000a\u000a#------Prepare to start Routine "basicEnd"-------\u000at = 0\u000abasicEndClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_3 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_3.status = NOT_STARTED\u000a# keep track of which components have finished\u000abasicEndComponents = []\u000abasicEndComponents.append(text_2)\u000abasicEndComponents.append(key_resp_3)\u000afor thisComponent in basicEndComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "basicEnd"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = basicEndClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *text_2* updates\u000a    if t >= 0.0 and text_2.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        text_2.tStart = t  # underestimates by a little under one frame\u000a        text_2.frameNStart = frameN  # exact frame index\u000a        text_2.setAutoDraw(True)\u000a    \u000a    # *key_resp_3* updates\u000a    if t >= 0.0 and key_resp_3.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_3.tStart = t  # underestimates by a little under one frame\u000a        key_resp_3.frameNStart = frameN  # exact frame index\u000a        key_resp_3.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_3.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_3.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_3.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_3.rt = key_resp_3.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in basicEndComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "basicEnd"-------\u000afor thisComponent in basicEndComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_3.keys in ['', [], None]:  # No response was made\u000a   key_resp_3.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_3.keys',key_resp_3.keys)\u000aif key_resp_3.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_3.rt', key_resp_3.rt)\u000athisExp.nextEntry()\u000a# the Routine "basicEnd" was not non-slip safe, so reset the non-slip timer\u000a#routineTimer.reset()\u000a#win.close()\u000a#core.quit()\u000a\u000a\u000a##############################################\u000amouseResp = event.Mouse(win=win,visible=False)\u000a\u000a\u000a#------Prepare to start Routine "mainInstruct"-------\u000at = 0\u000amainInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_2 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_2.status = NOT_STARTED\u000a# keep track of which components have finished\u000amainInstructComponents = []\u000amainInstructComponents.append(mainText)\u000amainInstructComponents.append(key_resp_2)\u000afor thisComponent in mainInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "mainInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = mainInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *mainText* updates\u000a    if t >= 0.0 and mainText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        mainText.tStart = t  # underestimates by a little under one frame\u000a        mainText.frameNStart = frameN  # exact frame index\u000a        mainText.setAutoDraw(True)\u000a    \u000a    # *key_resp_2* updates\u000a    if t >= 0.0 and key_resp_2.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_2.tStart = t  # underestimates by a little under one frame\u000a        key_resp_2.frameNStart = frameN  # exact frame index\u000a        key_resp_2.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_2.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_2.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space', 'return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_2.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_2.rt = key_resp_2.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in mainInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "mainInstruct"-------\u000afor thisComponent in mainInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_2.keys in ['', [], None]:  # No response was made\u000a   key_resp_2.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_2.keys',key_resp_2.keys)\u000aif key_resp_2.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_2.rt', key_resp_2.rt)\u000athisExp.nextEntry()\u000a# the Routine "mainInstruct" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a#------Prepare to start Routine "buttonInstruct"-------\u000at = 0\u000abuttonInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_3 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_3.status = NOT_STARTED\u000a# keep track of which components have finished\u000abuttonInstructComponents = []\u000abuttonInstructComponents.append(buttonText)\u000abuttonInstructComponents.append(key_resp_3)\u000afor thisComponent in buttonInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "buttonInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = buttonInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *buttonText* updates\u000a    if t >= 0.0 and buttonText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        buttonText.tStart = t  # underestimates by a little under one frame\u000a        buttonText.frameNStart = frameN  # exact frame index\u000a        buttonText.setAutoDraw(True)\u000a    \u000a    # *key_resp_3* updates\u000a    if t >= 0.0 and key_resp_3.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_3.tStart = t  # underestimates by a little under one frame\u000a        key_resp_3.frameNStart = frameN  # exact frame index\u000a        key_resp_3.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_3.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_3.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space', 'return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_3.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_3.rt = key_resp_3.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in buttonInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "buttonInstruct"-------\u000afor thisComponent in buttonInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_3.keys in ['', [], None]:  # No response was made\u000a   key_resp_3.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_3.keys',key_resp_3.keys)\u000aif key_resp_3.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_3.rt', key_resp_3.rt)\u000athisExp.nextEntry()\u000a# the Routine "buttonInstruct" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a#------Prepare to start Routine "startScreen"-------\u000at = 0\u000astartScreenClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_4 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_4.status = NOT_STARTED\u000a# keep track of which components have finished\u000astartScreenComponents = []\u000astartScreenComponents.append(startText)\u000astartScreenComponents.append(key_resp_4)\u000afor thisComponent in startScreenComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "startScreen"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = startScreenClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *startText* updates\u000a    if t >= 0.0 and startText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        startText.tStart = t  # underestimates by a little under one frame\u000a        startText.frameNStart = frameN  # exact frame index\u000a        startText.setAutoDraw(True)\u000a    \u000a    # *key_resp_4* updates\u000a    if t >= 0.0 and key_resp_4.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_4.tStart = t  # underestimates by a little under one frame\u000a        key_resp_4.frameNStart = frameN  # exact frame index\u000a        key_resp_4.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_4.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_4.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_4.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_4.rt = key_resp_4.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in startScreenComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "startScreen"-------\u000afor thisComponent in startScreenComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_4.keys in ['', [], None]:  # No response was made\u000a   key_resp_4.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_4.keys',key_resp_4.keys)\u000aif key_resp_4.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_4.rt', key_resp_4.rt)\u000athisExp.nextEntry()\u000a# the Routine "startScreen" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a# set up handler to look after randomisation of conditions etc\u000atrials = data.TrialHandler(nReps=1, method='sequential', \u000a    extraInfo=expInfo, originPath=None,\u000a    trialList=data.importConditions(pt1Conditions),\u000a    seed=None, name='trials')\u000athisExp.addLoop(trials)  # add the loop to the experiment\u000athisTrial = trials.trialList[0]  # so we can initialise stimuli with some values\u000a# abbreviate parameter names if possible (e.g. rgb=thisTrial.rgb)\u000aif thisTrial != None:\u000a    for paramName in thisTrial.keys():\u000a        exec(paramName + '= thisTrial.' + paramName)\u000a\u000afor thisTrial in trials:\u000a    currentLoop = trials\u000a    # abbreviate parameter names if possible (e.g. rgb = thisTrial.rgb)\u000a    if thisTrial != None:\u000a        for paramName in thisTrial.keys():\u000a            exec(paramName + '= thisTrial.' + paramName)\u000a\u000a    #------Prepare to start Routine "mainTrial"-------\u000a    t = 0\u000a    mainTrialClock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    faceImg.setImage(img)\u000a    # setup some python lists for storing info about the mouseResp\u000a    mouseResp.x = []\u000a    mouseResp.y = []\u000a    mouseResp.leftButton = []\u000a    mouseResp.midButton = []\u000a    mouseResp.rightButton = []\u000a    mouseResp.time = []\u000a    # keep track of which components have finished\u000a    mainTrialComponents = []\u000a    mainTrialComponents.append(faceImg)\u000a    mainTrialComponents.append(mouseResp)\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "mainTrial"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = mainTrialClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        # *faceImg* updates\u000a        if t >= 0.0 and faceImg.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            faceImg.tStart = t  # underestimates by a little under one frame\u000a            faceImg.frameNStart = frameN  # exact frame index\u000a            faceImg.setAutoDraw(True)\u000a        # *mouseResp* updates\u000a        if t >= 0.3 and mouseResp.status == NOT_STARTED: ####################################\u000a            # keep track of start time/frame for later\u000a            mouseResp.tStart = t  # underestimates by a little under one frame\u000a            mouseResp.frameNStart = frameN  # exact frame index\u000a            mouseResp.status = STARTED\u000a            event.mouseButtons = [0, 0, 0]  # reset mouse buttons to be 'up'\u000a        if mouseResp.status == STARTED:  # only update if started and not stopped!\u000a            buttons = mouseResp.getPressed()\u000a            if sum([buttons[0],buttons[-1]]) > 0:  # ie if THE LEFT OR RIGHT BUTTON is pressed\u000a                x, y = mouseResp.getPos()\u000a                mouseResp.x.append(x)\u000a                mouseResp.y.append(y)\u000a                mouseResp.leftButton.append(buttons[0])\u000a                mouseResp.midButton.append(buttons[1])\u000a                mouseResp.rightButton.append(buttons[2])\u000a                mouseResp.time.append(mainTrialClock.getTime())\u000a                \u000a                \u000a                \u000a                \u000a                # add a counter\u000a                for morph in ['_00_','_01_','_02_','_03_','_04_','_05_','_06_','_07_','_08_','_09_','_10_']:\u000a                    if morph in img:\u000a                        try:\u000a                            countDict[morph] += 1\u000a                        except:\u000a                            countDict[morph] = 1\u000a                        if buttons[targetButton] == 1:\u000a                            try:\u000a                                hitsDict[morph]+=1\u000a                            except:\u000a                                hitsDict[morph]=1\u000a                                \u000a                # abort routine on response\u000a                continueRoutine = False\u000a                \u000a                # ADDED THE ESC COMMAND INTO THE LOOP, SO WE CAN QUIT ANYTIME\u000a                # check for quit (the Esc key)\u000a                if endExpNow or event.getKeys(keyList=["escape"]):\u000a                    core.quit()\u000a        \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in mainTrialComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "mainTrial"-------\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    # store data for trials (TrialHandler)\u000a    trials.addData('mouseResp.x', mouseResp.x[0])\u000a    trials.addData('mouseResp.y', mouseResp.y[0])\u000a    trials.addData('mouseResp.leftButton', mouseResp.leftButton[0])\u000a    trials.addData('mouseResp.midButton', mouseResp.midButton[0])\u000a    trials.addData('mouseResp.rightButton', mouseResp.rightButton[0])\u000a    trials.addData('mouseResp.time', mouseResp.time[0])\u000a    # the Routine "mainTrial" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    thisExp.nextEntry()\u000a    \u000a# completed 1 repeats of 'trials'\u000a\u000a\u000a#------Prepare to start Routine "forcedPause"-------\u000at = 0\u000aforcedPauseClock.reset()  # clock \u000aframeN = -1\u000aroutineTimer.add(30.000000)\u000a# update component parameters for each repeat\u000a# keep track of which components have finished\u000aforcedPauseComponents = []\u000aforcedPauseComponents.append(pauseText)\u000afor thisComponent in forcedPauseComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "forcedPause"-------\u000acontinueRoutine = True\u000awhile continueRoutine and routineTimer.getTime() > 0:\u000a    # get current time\u000a    t = forcedPauseClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *pauseText* updates\u000a    if t >= 0.0 and pauseText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        pauseText.tStart = t  # underestimates by a little under one frame\u000a        pauseText.frameNStart = frameN  # exact frame index\u000a        pauseText.setAutoDraw(True)\u000a    if pauseText.status == STARTED and t >= (0.0 + (30-win.monitorFramePeriod*0.75)): #most of one frame period left\u000a        pauseText.setAutoDraw(False)\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in forcedPauseComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "forcedPause"-------\u000afor thisComponent in forcedPauseComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a\u000a#------Prepare to start Routine "resumeExperiment"-------\u000at = 0\u000aresumeExperimentClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_5 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_5.status = NOT_STARTED\u000a# keep track of which components have finished\u000aresumeExperimentComponents = []\u000aresumeExperimentComponents.append(resumeText)\u000aresumeExperimentComponents.append(key_resp_5)\u000afor thisComponent in resumeExperimentComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "resumeExperiment"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = resumeExperimentClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *resumeText* updates\u000a    if t >= 0.0 and resumeText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        resumeText.tStart = t  # underestimates by a little under one frame\u000a        resumeText.frameNStart = frameN  # exact frame index\u000a        resumeText.setAutoDraw(True)\u000a    \u000a    # *key_resp_5* updates\u000a    if t >= 0.0 and key_resp_5.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_5.tStart = t  # underestimates by a little under one frame\u000a        key_resp_5.frameNStart = frameN  # exact frame index\u000a        key_resp_5.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_5.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_5.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_5.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_5.rt = key_resp_5.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in resumeExperimentComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "resumeExperiment"-------\u000afor thisComponent in resumeExperimentComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_5.keys in ['', [], None]:  # No response was made\u000a   key_resp_5.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_5.keys',key_resp_5.keys)\u000aif key_resp_5.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_5.rt', key_resp_5.rt)\u000athisExp.nextEntry()\u000a# the Routine "resumeExperiment" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a# set up handler to look after randomisation of conditions etc\u000atrials2 = data.TrialHandler(nReps=1, method='sequential', \u000a    extraInfo=expInfo, originPath=None,\u000a    trialList=data.importConditions(pt2Conditions),\u000a    seed=None, name='trials2')\u000athisExp.addLoop(trials2)  # add the loop to the experiment\u000athisTrials2 = trials2.trialList[0]  # so we can initialise stimuli with some values\u000a# abbreviate parameter names if possible (e.g. rgb=thisTrials2.rgb)\u000aif thisTrials2 != None:\u000a    for paramName in thisTrials2.keys():\u000a        exec(paramName + '= thisTrials2.' + paramName)\u000a\u000afor thisTrials2 in trials2:\u000a    currentLoop = trials2\u000a    # abbreviate parameter names if possible (e.g. rgb = thisTrials2.rgb)\u000a    if thisTrials2 != None:\u000a        for paramName in thisTrials2.keys():\u000a            exec(paramName + '= thisTrials2.' + paramName)\u000a    \u000a    #------Prepare to start Routine "mainTrial"-------\u000a    t = 0\u000a    mainTrialClock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    faceImg.setImage(img)\u000a    # setup some python lists for storing info about the mouseResp\u000a    mouseResp.x = []\u000a    mouseResp.y = []\u000a    mouseResp.leftButton = []\u000a    mouseResp.midButton = []\u000a    mouseResp.rightButton = []\u000a    mouseResp.time = []\u000a    # keep track of which components have finished\u000a    mainTrialComponents = []\u000a    mainTrialComponents.append(faceImg)\u000a    mainTrialComponents.append(mouseResp)\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "mainTrial"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = mainTrialClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        # *faceImg* updates\u000a        if t >= 0.0 and faceImg.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            faceImg.tStart = t  # underestimates by a little under one frame\u000a            faceImg.frameNStart = frameN  # exact frame index\u000a            faceImg.setAutoDraw(True)\u000a            \u000a        # *mouseResp* updates\u000a        if t >= 0.3 and mouseResp.status == NOT_STARTED: #############################################\u000a            # keep track of start time/frame for later\u000a            mouseResp.tStart = t  # underestimates by a little under one frame\u000a            mouseResp.frameNStart = frameN  # exact frame index\u000a            mouseResp.status = STARTED\u000a            event.mouseButtons = [0, 0, 0]  # reset mouse buttons to be 'up'\u000a        if mouseResp.status == STARTED:  # only update if started and not stopped!\u000a            buttons = mouseResp.getPressed()\u000a            if sum([buttons[0],buttons[-1]]) > 0:  # ie if any button is pressed\u000a                x, y = mouseResp.getPos()\u000a                mouseResp.x.append(x)\u000a                mouseResp.y.append(y)\u000a                mouseResp.leftButton.append(buttons[0])\u000a                mouseResp.midButton.append(buttons[1])\u000a                mouseResp.rightButton.append(buttons[2])\u000a                mouseResp.time.append(mainTrialClock.getTime())\u000a                \u000a                # add a counter\u000a                for morph in ['_00_','_01_','_02_','_03_','_04_','_05_','_06_','_07_','_08_','_09_','_10_']:\u000a                    if morph in img:\u000a                        try:\u000a                            countDict[morph] += 1\u000a                        except:\u000a                            countDict[morph] = 1\u000a                        if buttons[targetButton] == 1:\u000a                            try:\u000a                                hitsDict[morph]+=1\u000a                            except:\u000a                                hitsDict[morph]=1\u000a                    \u000a                # abort routine on response\u000a                continueRoutine = False\u000a        \u000a                # ADDED THE ESC COMMAND INTO THE LOOP, SO WE CAN QUIT ANYTIME\u000a                # check for quit (the Esc key)\u000a                if endExpNow or event.getKeys(keyList=["escape"]):\u000a                    core.quit()\u000a                    \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in mainTrialComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "mainTrial"-------\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    # store data for trials2 (TrialHandler)\u000a    trials2.addData('mouseResp.x', mouseResp.x[0])\u000a    trials2.addData('mouseResp.y', mouseResp.y[0])\u000a    trials2.addData('mouseResp.leftButton', mouseResp.leftButton[0])\u000a    trials2.addData('mouseResp.midButton', mouseResp.midButton[0])\u000a    trials2.addData('mouseResp.rightButton', mouseResp.rightButton[0])\u000a    trials2.addData('mouseResp.time', mouseResp.time[0])\u000a    \u000a    # the Routine "mainTrial" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    thisExp.nextEntry()\u000a    \u000a# completed 1 repeats of 'trials2'\u000a\u000a\u000a#------Prepare to start Routine "endInstruct"-------\u000at = 0\u000aendInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_6 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_6.status = NOT_STARTED\u000a# keep track of which components have finished\u000aendInstructComponents = []\u000aendInstructComponents.append(endText)\u000aendInstructComponents.append(key_resp_6)\u000afor thisComponent in endInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "endInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = endInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *endText* updates\u000a    if t >= 0.0 and endText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        endText.tStart = t  # underestimates by a little under one frame\u000a        endText.frameNStart = frameN  # exact frame index\u000a        endText.setAutoDraw(True)\u000a    \u000a    # *key_resp_6* updates\u000a    if t >= 0.0 and key_resp_6.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_6.tStart = t  # underestimates by a little under one frame\u000a        key_resp_6.frameNStart = frameN  # exact frame index\u000a        key_resp_6.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_6.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_6.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space', 'return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_6.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_6.rt = key_resp_6.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in endInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "endInstruct"-------\u000afor thisComponent in endInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a\u000a\u000a# Initialize components for Routine "analysisCheck"\u000aanalysisCheckClock = core.Clock()\u000aanalysisText = visual.TextStim(win=win, ori=0, name='analysisText',\u000a    text=str('00'+'\u005ct'+str(countDict['_00_'])+'\u005ct'+str(hitsDict['_00_'])+'\u005cn'+\u000a    '01'+'\u005ct'+str(countDict['_01_'])+'\u005ct'+str(hitsDict['_01_'])+'\u005cn'+\u000a    '02'+'\u005ct'+str(countDict['_02_'])+'\u005ct'+str(hitsDict['_02_'])+'\u005cn'+\u000a    '03'+'\u005ct'+str(countDict['_03_'])+'\u005ct'+str(hitsDict['_03_'])+'\u005cn'+\u000a    '04'+'\u005ct'+str(countDict['_04_'])+'\u005ct'+str(hitsDict['_04_'])+'\u005cn'+\u000a    '05'+'\u005ct'+str(countDict['_05_'])+'\u005ct'+str(hitsDict['_05_'])+'\u005cn'+\u000a    '06'+'\u005ct'+str(countDict['_06_'])+'\u005ct'+str(hitsDict['_06_'])+'\u005cn'+\u000a    '07'+'\u005ct'+str(countDict['_07_'])+'\u005ct'+str(hitsDict['_07_'])+'\u005cn'+\u000a    '08'+'\u005ct'+str(countDict['_08_'])+'\u005ct'+str(hitsDict['_08_'])+'\u005cn'+\u000a    '09'+'\u005ct'+str(countDict['_09_'])+'\u005ct'+str(hitsDict['_09_'])+'\u005cn'+\u000a    '10'+'\u005ct'+str(countDict['_10_'])+'\u005ct'+str(hitsDict['_10_'])), font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a#------Prepare to start Routine "analysisCheck"-------\u000at = 0\u000aanalysisCheckClock.reset()  # clock\u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_7 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_7.status = NOT_STARTED\u000a# keep track of which components have finished\u000aanalysisCheckComponents = []\u000aanalysisCheckComponents.append(analysisText)\u000aanalysisCheckComponents.append(key_resp_7)\u000afor thisComponent in analysisCheckComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "analysisCheck"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = analysisCheckClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a\u000a    # *analysisText* updates\u000a    if t >= 0.0 and analysisText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        analysisText.tStart = t  # underestimates by a little under one frame\u000a        analysisText.frameNStart = frameN  # exact frame index\u000a        analysisText.setAutoDraw(True)\u000a\u000a    # *key_resp_7* updates\u000a    if t >= 0.0 and key_resp_7.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_7.tStart = t  # underestimates by a little under one frame\u000a        key_resp_7.frameNStart = frameN  # exact frame index\u000a        key_resp_7.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_7.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_7.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a\u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_7.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_7.rt = key_resp_7.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a\u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in analysisCheckComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "analysisCheck"-------\u000afor thisComponent in analysisCheckComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_7.keys in ['', [], None]:  # No response was made\u000a   key_resp_7.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_7.keys',key_resp_7.keys)\u000aif key_resp_7.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_7.rt', key_resp_7.rt)\u000athisExp.nextEntry()\u000a# the Routine "analysisCheck" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000awin.close()\u000acore.quit()
p4998
sS'thisTrial'
p4999
(lp5000
sS'_exp'
p5001
I139855536018896
sg10
S'basicLoop'
p5002
sg6
S'/home/labor/faces/emoFaces.py'
p5003
sS'thisRepN'
p5004
I1
sg38
I01
sg39
g40
sS'data'
p5005
g1
(cpsychopy.data
DataHandler
p5006
c__builtin__
dict
p5007
(dp5008
g16
cnumpy.core.multiarray
_reconstruct
p5009
(cnumpy
ndarray
p5010
(I0
tS'b'
tRp5011
(I1
(I84
I1
tg48
(S'O8'
I0
I1
tRp5012
(I3
S'|'
NNNI-1
I-1
I63
tbI00
(lp5013
NaNaNag87
ag101
aNag87
aNaNaNag87
ag101
aNag101
aNaNaNag87
ag101
aNaNaNaNaNag87
ag101
aNaNaNaNaNag87
ag101
aNaNaNaNaNag87
ag101
aNaNaNaNaNag87
ag101
aNaNaNag101
aNag87
ag101
aNaNaNaNaNag87
ag101
aNaNaNaNaNag87
aNaNag101
aNaNaNag87
ag101
aNaNaNaNaNag87
ag101
aNaNatbsg18
g5009
(g5010
(I0
tS'b'
tRp5014
(I1
(I84
I1
tg5012
I00
(lp5015
g94
ag94
aNaNaNaNaNag94
aNag73
aNaNaNaNag94
aNag73
aNaNaNaNag73
aNag73
aNaNag73
aNag94
aNag73
aNaNag73
aNag94
aNag73
aNaNaNaNag94
aNag73
aNaNaNag94
ag94
aNag73
aNaNaNaNag94
ag73
ag73
aNaNaNaNag94
aNag73
aNaNaNaNag94
aNag73
aNaNaNaNag94
aNag73
aNaNaNaNatbsg21
g5009
(g5010
(I0
tS'b'
tRp5016
(I1
(I84
I1
tg5012
I00
(lp5017
NaNaS'6.'
p5018
aNaNaF1.0449999999999999
aNaNaF4.8550000000000004
aNaNaNaF1.6439999999999999
aNaNaF1.1950000000000001
aNaNaNaF2.7709999999999999
aNaNaF1.359
aNaNaNaNaNaNaF1.2729999999999999
aNaNaNaNaNaNaF1.3420000000000001
aNaNaNaF9.0259999999999998
aNaNaF1.2789999999999999
aNaNaNaF1.179
aNaNaNaNaNaNaF2.2200000000000002
aNaNaNaNaNaNaF5.8890000000000002
aNaNaF1.677
aNaNaNaF1.732
aNaNaF1.226
aNaNaNaF2.835
aNaNaF1.3959999999999999
aNaNaNaF2.569
aNatbsS'ran'
p5019
cnumpy.ma.core
_mareconstruct
p5020
(cnumpy.ma.core
MaskedArray
p5021
g5010
(I0
tp5022
S'b'
tRp5023
(I1
(I84
I1
tg48
(S'f4'
I0
I1
tRp5024
(I3
S'<'
NNNI-1
I-1
I0
tbI00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg17
g5009
(g5010
(I0
tS'b'
tRp5025
(I1
(I84
I1
tg5012
I00
(lp5026
NaNaNaF1.8180000000000001
aF1.8169999999999999
aNaF1.413
aNaNaNaF1.0669999999999999
aF1.1120000000000001
aNaF1.8480000000000001
aNaNaNaF1.353
aF1.4630000000000001
aNaNaNaNaNaF1.722
aF1.885
aNaNaNaNaNaF4.1820000000000004
aF1.1459999999999999
aNaNaNaNaNaF2.052
aF2.048
aNaNaNaNaNaF1.696
aF2.7549999999999999
aNaNaNaF4.0129999999999999
aNaF1.5309999999999999
aF3.3580000000000001
aNaNaNaNaNaF1.2110000000000001
aF1.2789999999999999
aNaNaNaNaNaF1.0640000000000001
aNaNaF2.6699999999999999
aNaNaNaF2.7709999999999999
aF1.167
aNaNaNaNaNaF1.3660000000000001
aF1.8140000000000001
aNaNatbsg23
g5009
(g5010
(I0
tS'b'
tRp5027
(I1
(I84
I1
tg5012
I00
(lp5028
NaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaF1.569
aNaNaNaNaNaNaF0.81599999999999995
aNaNaNaNaNaNaF2.1160000000000001
aNaNaNaNaNaNaF2.4860000000000002
aNaNaNaNaNaNaNaNaNaNaNaNaNaF1.837
aNaNaNaNaNaNaF1.829
aNaNaNaNaF6.3819999999999997
aNaNaNaNaNaNaNaNaF1.7629999999999999
aNaNaNaNaNaNaF1.173
atbsg22
g5009
(g5010
(I0
tS'b'
tRp5029
(I1
(I84
I1
tg5012
I00
(lp5030
NaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNag145
aNaNaNaNaNaNag145
aNaNaNaNaNaNag145
aNaNaNaNaNaNag145
aNaNaNaNaNaNaNaNaNaNaNaNaNag145
aNaNaNaNaNaNag145
aNaNaNaNag145
aNaNaNaNaNaNaNaNag145
aNaNaNaNaNaNag145
atbsg19
g5009
(g5010
(I0
tS'b'
tRp5031
(I1
(I84
I1
tg5012
I00
(lp5032
F0.69199999999999995
aF3.2869999999999999
aNaNaNaNaNaF4.1079999999999997
aNaF1.1259999999999999
aNaNaNaNaF1.0609999999999999
aNaF0.97999999999999998
aNaNaNaNaF4.3799999999999999
aNaF1.7869999999999999
aNaNaF1.0609999999999999
aNaF1.2629999999999999
aNaF3.0880000000000001
aNaNaF1.4430000000000001
aNaF3.0699999999999998
aNaF1.899
aNaNaNaNaF1.294
aNaF2.028
aNaNaNaF2.6560000000000001
aF0.89400000000000002
aNaF0.91000000000000003
aNaNaNaNaF0.75700000000000001
aF3.2210000000000001
aF2.0019999999999998
aNaNaNaNaF2.4630000000000001
aNaF1.649
aNaNaNaNaF2.1139999999999999
aNaF2.165
aNaNaNaNaF1.5309999999999999
aNaF2.016
aNaNaNaNatbsg20
g5009
(g5010
(I0
tS'b'
tRp5033
(I1
(I84
I1
tg5012
I00
(lp5034
NaNag69
aNaNag83
aNaNag69
aNaNaNag83
aNaNag69
aNaNaNag83
aNaNag69
aNaNaNaNaNaNag69
aNaNaNaNaNaNag69
aNaNaNag83
aNaNag69
aNaNaNag83
aNaNaNaNaNaNag83
aNaNaNaNaNaNag83
aNaNag69
aNaNaNag83
aNaNag69
aNaNaNag83
aNaNag69
aNaNaNag83
aNatbsS'order'
p5035
g5020
(g5021
g5010
g5022
S'b'
tRp5036
(I1
(I84
I1
tg5024
I00
S'\x00\x000A\x00\x00xB\x00\x00\x00\x00\x00\x00\xa0A\x00\x008B\x00\x00\x8eB\x00\x00|B\x00\x00\xd8A\x00\x000B\x00\x00\xa8A\x00\x00`B\x00\x00\xa0B\x00\x00\xe8A\x00\x00\x00B\x00\x00\x14B\x00\x00\x94B\x00\x00 B\x00\x00\xc0A\x00\x00\x84B\x00\x00hB\x00\x00@A\x00\x00\x80?\x00\x00\x88A\x00\x00\x9eB\x00\x00\x8cB\x00\x00\xb8A\x00\x00\x80A\x00\x00PA\x00\x00 A\x00\x00$B\x00\x00\x10A\x00\x00\x80B\x00\x00`A\x00\x00\x90A\x00\x00\x98B\x00\x00\xc8A\x00\x00\xf8A\x00\x00\x9aB\x00\x00PB\x00\x00\x10B\x00\x00\xf0A\x00\x00\xd0A\x00\x00\x82B\x00\x00\xb0A\x00\x00pA\x00\x00\x96B\x00\x00pB\x00\x00LB\x00\x00\x98A\x00\x004B\x00\x00\x08B\x00\x00\xe0@\x00\x00<B\x00\x00@B\x00\x00,B\x00\x00\x0cB\x00\x00\x9cB\x00\x00XB\x00\x00HB\x00\x00DB\x00\x00\x1cB\x00\x00\x88B\x00\x00\xa6B\x00\x00\x92B\x00\x00\\B\x00\x00\x18B\x00\x00dB\x00\x00\xa4B\x00\x00\x8aB\x00\x00\xa0@\x00\x00\x80@\x00\x00\xe0A\x00\x00\xc0@\x00\x00@@\x00\x00TB\x00\x00\x00@\x00\x00lB\x00\x00\x86B\x00\x00tB\x00\x00\x04B\x00\x00(B\x00\x00\x00A\x00\x00\x90B\x00\x00\xa2B'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
NtbstRp5037
(dp5038
S'isNumeric'
p5039
(dp5040
g16
I00
sg18
I00
sg21
I00
sg5019
I01
sg17
I00
sg23
I00
sg22
I00
sg19
I00
sg20
I00
sg5035
I01
ssS'trials'
p5041
g4995
sS'dataTypes'
p5042
(lp5043
g5019
ag5035
ag16
ag17
ag18
ag19
ag20
ag21
ag22
ag23
asS'dataShape'
p5044
(lp5045
I84
aI1
asbsS'method'
p5046
S'fullRandom'
p5047
sS'sequenceIndices'
p5048
g5009
(g5010
(I0
tS'b'
tRp5049
(I1
(I84
I1
tg5012
I00
(lp5050
I2
aI21
aI75
aI73
aI70
aI69
aI72
aI51
aI81
aI30
aI28
aI0
aI20
aI27
aI32
aI44
aI26
aI22
aI33
aI48
aI3
aI9
aI43
aI25
aI17
aI35
aI41
aI7
aI71
aI12
aI40
aI36
aI13
aI79
aI50
aI55
aI39
aI14
aI65
aI60
aI16
aI29
aI80
aI54
aI8
aI49
aI4
aI52
aI53
aI59
aI58
aI47
aI38
aI74
aI57
aI64
aI10
aI66
aI19
aI76
aI46
aI78
aI1
aI6
aI31
aI42
aI18
aI77
aI61
aI68
aI24
aI5
aI82
aI63
aI15
aI45
aI34
aI37
aI56
aI23
aI11
aI83
aI67
aI62
atbsS'finished'
p5051
I01
sS'nReps'
p5052
I1
sS'nRemaining'
p5053
I-1
sS'trialList'
p5054
(lp5055
g1
(cpsychopy.data
TrialType
p5056
g5007
(dp5057
g59
g138
stRp5058
ag1
(g5056
g5007
(dp5059
g59
g445
stRp5060
ag1
(g5056
g5007
(dp5061
g59
g66
stRp5062
ag1
(g5056
g5007
(dp5063
g59
g193
stRp5064
ag1
(g5056
g5007
(dp5065
g59
g349
stRp5066
ag1
(g5056
g5007
(dp5067
g59
g499
stRp5068
ag1
(g5056
g5007
(dp5069
g59
g451
stRp5070
ag1
(g5056
g5007
(dp5071
g59
g235
stRp5072
ag1
(g5056
g5007
(dp5073
g59
g337
stRp5074
ag1
(g5056
g5007
(dp5075
g59
g199
stRp5076
ag1
(g5056
g5007
(dp5077
g59
g409
stRp5078
ag1
(g5056
g5007
(dp5079
g59
g553
stRp5080
ag1
(g5056
g5007
(dp5081
g59
g247
stRp5082
ag1
(g5056
g5007
(dp5083
g59
g265
stRp5084
ag1
(g5056
g5007
(dp5085
g59
g295
stRp5086
ag1
(g5056
g5007
(dp5087
g59
g517
stRp5088
ag1
(g5056
g5007
(dp5089
g59
g313
stRp5090
ag1
(g5056
g5007
(dp5091
g59
g217
stRp5092
ag1
(g5056
g5007
(dp5093
g59
g469
stRp5094
ag1
(g5056
g5007
(dp5095
g59
g421
stRp5096
ag1
(g5056
g5007
(dp5097
g59
g144
stRp5098
ag1
(g5056
g5007
(dp5099
g59
g74
stRp5100
ag1
(g5056
g5007
(dp5101
g59
g175
stRp5102
ag1
(g5056
g5007
(dp5103
g59
g547
stRp5104
ag1
(g5056
g5007
(dp5105
g59
g493
stRp5106
ag1
(g5056
g5007
(dp5107
g59
g211
stRp5108
ag1
(g5056
g5007
(dp5109
g59
g169
stRp5110
ag1
(g5056
g5007
(dp5111
g59
g151
stRp5112
ag1
(g5056
g5007
(dp5113
g59
g132
stRp5114
ag1
(g5056
g5007
(dp5115
g59
g319
stRp5116
ag1
(g5056
g5007
(dp5117
g59
g126
stRp5118
ag1
(g5056
g5007
(dp5119
g59
g457
stRp5120
ag1
(g5056
g5007
(dp5121
g59
g157
stRp5122
ag1
(g5056
g5007
(dp5123
g59
g181
stRp5124
ag1
(g5056
g5007
(dp5125
g59
g529
stRp5126
ag1
(g5056
g5007
(dp5127
g59
g223
stRp5128
ag1
(g5056
g5007
(dp5129
g59
g259
stRp5130
ag1
(g5056
g5007
(dp5131
g59
g535
stRp5132
ag1
(g5056
g5007
(dp5133
g59
g385
stRp5134
ag1
(g5056
g5007
(dp5135
g59
g289
stRp5136
ag1
(g5056
g5007
(dp5137
g59
g253
stRp5138
ag1
(g5056
g5007
(dp5139
g59
g229
stRp5140
ag1
(g5056
g5007
(dp5141
g59
g463
stRp5142
ag1
(g5056
g5007
(dp5143
g59
g205
stRp5144
ag1
(g5056
g5007
(dp5145
g59
g163
stRp5146
ag1
(g5056
g5007
(dp5147
g59
g523
stRp5148
ag1
(g5056
g5007
(dp5149
g59
g433
stRp5150
ag1
(g5056
g5007
(dp5151
g59
g379
stRp5152
ag1
(g5056
g5007
(dp5153
g59
g187
stRp5154
ag1
(g5056
g5007
(dp5155
g59
g343
stRp5156
ag1
(g5056
g5007
(dp5157
g59
g277
stRp5158
ag1
(g5056
g5007
(dp5159
g59
g114
stRp5160
ag1
(g5056
g5007
(dp5161
g59
g355
stRp5162
ag1
(g5056
g5007
(dp5163
g59
g361
stRp5164
ag1
(g5056
g5007
(dp5165
g59
g331
stRp5166
ag1
(g5056
g5007
(dp5167
g59
g283
stRp5168
ag1
(g5056
g5007
(dp5169
g59
g541
stRp5170
ag1
(g5056
g5007
(dp5171
g59
g397
stRp5172
ag1
(g5056
g5007
(dp5173
g59
g373
stRp5174
ag1
(g5056
g5007
(dp5175
g59
g367
stRp5176
ag1
(g5056
g5007
(dp5177
g59
g307
stRp5178
ag1
(g5056
g5007
(dp5179
g59
g481
stRp5180
ag1
(g5056
g5007
(dp5181
g59
g571
stRp5182
ag1
(g5056
g5007
(dp5183
g59
g511
stRp5184
ag1
(g5056
g5007
(dp5185
g59
g403
stRp5186
ag1
(g5056
g5007
(dp5187
g59
g301
stRp5188
ag1
(g5056
g5007
(dp5189
g59
g415
stRp5190
ag1
(g5056
g5007
(dp5191
g59
g565
stRp5192
ag1
(g5056
g5007
(dp5193
g59
g487
stRp5194
ag1
(g5056
g5007
(dp5195
g59
g102
stRp5196
ag1
(g5056
g5007
(dp5197
g59
g95
stRp5198
ag1
(g5056
g5007
(dp5199
g59
g241
stRp5200
ag1
(g5056
g5007
(dp5201
g59
g108
stRp5202
ag1
(g5056
g5007
(dp5203
g59
g88
stRp5204
ag1
(g5056
g5007
(dp5205
g59
g391
stRp5206
ag1
(g5056
g5007
(dp5207
g59
g80
stRp5208
ag1
(g5056
g5007
(dp5209
g59
g427
stRp5210
ag1
(g5056
g5007
(dp5211
g59
g475
stRp5212
ag1
(g5056
g5007
(dp5213
g59
g439
stRp5214
ag1
(g5056
g5007
(dp5215
g59
g271
stRp5216
ag1
(g5056
g5007
(dp5217
g59
g325
stRp5218
ag1
(g5056
g5007
(dp5219
g59
g120
stRp5220
ag1
(g5056
g5007
(dp5221
g59
g505
stRp5222
ag1
(g5056
g5007
(dp5223
g59
g559
stRp5224
asS'seed'
p5225
NsS'thisIndex'
p5226
I62
sS'thisN'
p5227
I84
sS'thisTrialN'
p5228
I0
sS'nTotal'
p5229
I84
sS'_warnUseOfNext'
p5230
I01
sbag1
(g4994
g3
NtRp5231
(dp5232
g4997
V#!/usr/bin/env python2\u000a# -*- coding: utf-8 -*-\u000a\u000a"""\u000a ________    _______    ___       __           ________  ________   ________   _______    ________      \u000a|\u005c   ___  \u005c |\u005c  ___ \u005c  |\u005c  \u005c     |\u005c  \u005c        |\u005c  _____\u005c|\u005c   __  \u005c |\u005c   ____\u005c |\u005c  ___ \u005c  |\u005c   ____\u005c     \u000a\u005c \u005c  \u005c\u005c \u005c  \u005c\u005c \u005c   __/| \u005c \u005c  \u005c    \u005c \u005c  \u005c       \u005c \u005c  \u005c__/ \u005c \u005c  \u005c|\u005c  \u005c\u005c \u005c  \u005c___| \u005c \u005c   __/| \u005c \u005c  \u005c___|_    \u000a \u005c \u005c  \u005c\u005c \u005c  \u005c\u005c \u005c  \u005c_|/__\u005c \u005c  \u005c  __\u005c \u005c  \u005c       \u005c \u005c   __\u005c \u005c \u005c   __  \u005c\u005c \u005c  \u005c     \u005c \u005c  \u005c_|/__\u005c \u005c_____  \u005c   \u000a  \u005c \u005c  \u005c\u005c \u005c  \u005c\u005c \u005c  \u005c_|\u005c \u005c\u005c \u005c  \u005c|\u005c__\u005c_\u005c  \u005c       \u005c \u005c  \u005c_|  \u005c \u005c  \u005c \u005c  \u005c\u005c \u005c  \u005c____ \u005c \u005c  \u005c_|\u005c \u005c\u005c|____|\u005c  \u005c  \u000a   \u005c \u005c__\u005c\u005c \u005c__\u005c\u005c \u005c_______\u005c\u005c \u005c____________\u005c       \u005c \u005c__\u005c    \u005c \u005c__\u005c \u005c__\u005c\u005c \u005c_______\u005c\u005c \u005c_______\u005c ____\u005c_\u005c  \u005c \u000a    \u005c|__| \u005c|__| \u005c|_______| \u005c|____________|        \u005c|__|     \u005c|__|\u005c|__| \u005c|_______| \u005c|_______||\u005c_________\u005c\u000a                                                                                            \u005c|_________|\u000a"""\u000a\u000a\u000afrom __future__ import division  # so that 1/3=0.333 instead of 1/3=0\u000afrom psychopy import visual, core, data, event, logging, sound, gui\u000afrom psychopy.constants import *  # things like STARTED, FINISHED\u000aimport numpy as np  # whole numpy lib is available, prepend 'np.'\u000afrom numpy import sin, cos, tan, log, log10, pi, average, sqrt, std, deg2rad, rad2deg, linspace, asarray\u000afrom numpy.random import random, randint, normal, shuffle\u000aimport os  # handy system and path functions\u000a\u000a# Ensure that relative paths start from the same directory as this script\u000a_thisDir = os.path.dirname(os.path.abspath(__file__))\u000aos.chdir(_thisDir)\u000a\u000a# Store info about the experiment session\u000aexpName = 'facesParametric'  # from the Builder filename that created this script\u000aexpInfo = {u'participant': u'', u'group': u''}\u000adlg = gui.DlgFromDict(dictionary=expInfo, title=expName)\u000aif dlg.OK == False: core.quit()  # user pressed cancel\u000aexpInfo['date'] = data.getDateStr()  # add a simple timestamp\u000aexpInfo['expName'] = expName\u000a\u000a# Check whether the chosen participant number is valid\u000amyDlg = gui.Dlg(title="FEHLER")\u000amyDlg.addText(u'Vp-Nnummer zwischen 1 und 100 eingeben')\u000aassert len(str(expInfo['participant'])) > 0, myDlg.show()\u000atry:\u000a    assert int(expInfo['participant']) in range(1,101), myDlg.show()\u000aexcept:\u000a    myDlg.show()\u000a\u000a# Check whether a group membership has been defined\u000amyDlg = gui.Dlg(title="FEHLER")\u000amyDlg.addText(u'Gruppenzugehoerigkeit angeben')\u000aassert len(str(expInfo['group'])) > 0, myDlg.show()\u000a\u000a# Here, we check if the number of the current participant\u000a# is odd or even, and we swap the button order accordingly\u000a# (this also affects the result computation, so the 'angry'\u000a# button is different for the two versions)\u000a\u000aif int(expInfo['participant'])%2 == 1:\u000a    # odd participant numbers have buttons assigned fear-anger\u000a    mainInstructText = u'Im nachfolgenden Experiment werden Sie nacheinander einzelne Gesichter sehen.\u005cnSie m\u005cxfcssen jeweils entscheiden, ob das gezeigt Gesicht einen\u005cn\u005cxc4NGSTLICHEN oder \u005cxc4RGERLICHEN Ausdruck hat.\u005cn\u005cnEntscheiden Sie sich bei jedem gezeigten Gesicht f\u005cxfcr einen der beiden m\u005cxf6glichen Emotionsausdr\u005cxfccke.'\u000a    buttonInstructText = u'Dr\u005cxfccken Sie die LINKE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4NGSTLICH ist.\u005cn\u005cnDr\u005cxfccken Sie die RECHTE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4RGERLICH ist.'\u000a    # angry judgement on right mouse button\u000a    targetButton = 2\u000aelse:\u000a    # even participant numbers have button assigments anger-fear\u000a    mainInstructText = u'Im nachfolgenden Experiment werden Sie nacheinander einzelne Gesichter sehen.\u005cnSie m\u005cxfcssen jeweils entscheiden, ob das gezeigt Gesicht einen\u005cn \u005cxc4RGERLICHEN oder \u005cxc4NGSTLICHEN Ausdruck hat.\u005cn\u005cnEntscheiden Sie sich bei jedem gezeigten Gesicht f\u005cxfcr einen der beiden m\u005cxf6glichen Emotionsausdr\u005cxfccke.'\u000a    buttonInstructText = u'Dr\u005cxfccken Sie die LINKE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4RGERLICH ist.\u005cn\u005cnDr\u005cxfccken Sie die RECHTE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4NGSTLICH ist.'\u000a    # angry judgement on left mouse button\u000a    targetButton = 0\u000a\u000a# from the number defined in the prompt window, we derive\u000a# which array files (pt1 & pt2) should be fetched for the\u000a# current participant (this works for number from 1 to 999,\u000a# but of course the array file must also exist!)\u000a\u000athisParticipant = 'arrays/p'+ ('00' + str(expInfo['participant']))[-3:]\u000apt1Conditions = thisParticipant +'pt1.csv'\u000apt2Conditions = thisParticipant +'pt2.csv'\u000a\u000acountDict = {}\u000ahitsDict = {}\u000a\u000a\u000a# Data file name stem = absolute path + name; later add .psyexp, .csv, .log, etc\u000afilename = _thisDir + os.sep + 'data/%s_%s_%s_%s' %(expInfo['group'],expInfo['participant'], expName, expInfo['date'])\u000a\u000a# An ExperimentHandler isn't essential but helps with data saving\u000athisExp = data.ExperimentHandler(name=expName, version='',\u000a    extraInfo=expInfo, runtimeInfo=None,\u000a    originPath=None,\u000a    savePickle=True, saveWideText=True,\u000a    dataFileName=filename)\u000a#save a log file for detail verbose info\u000alogFile = logging.LogFile(filename+'.log', level=logging.EXP)\u000alogging.console.setLevel(logging.WARNING)  # this outputs to the screen, not a file\u000a\u000aendExpNow = False  # flag for 'escape' or other condition => quit the exp\u000a\u000a# Start Code - component code to be run before the window creation\u000a\u000a# Setup the Window\u000awin = visual.Window(size=[1600, 900], fullscr=True, screen=0, allowGUI=True, allowStencil=False,\u000a    monitor='testMonitor', color='black', colorSpace='rgb',\u000a    blendMode='avg', useFBO=True,\u000a    units='cm')\u000a# store frame rate of monitor if we can measure it successfully\u000aexpInfo['frameRate']=win.getActualFrameRate()\u000aif expInfo['frameRate']!=None:\u000a    frameDur = 1.0/round(expInfo['frameRate'])\u000aelse:\u000a    frameDur = 1.0/60.0 # couldn't get a reliable measure so guess\u000a\u000a# Initialize components for Routine "mainInstruct"\u000amainInstructClock = core.Clock()\u000amainText = visual.TextStim(win=win, ori=0, name='mainText',\u000a    text=mainInstructText,    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "buttonInstruct"\u000abuttonInstructClock = core.Clock()\u000abuttonText = visual.TextStim(win=win, ori=0, name='buttonText',\u000a    text=buttonInstructText,    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "startScreen"\u000astartScreenClock = core.Clock()\u000astartText = visual.TextStim(win=win, ori=0, name='startText',\u000a    text=u'Falls Sie noch Fragen haben,\u005cnwenden Sie sich bitte an die Versuchsleiterin.\u005cn\u005cnWeiter mit ENTER.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "mainTrial"\u000amainTrialClock = core.Clock()\u000afaceImg = visual.ImageStim(win=win, name='faceImg',\u000a    image='sin', mask=None,\u000a    ori=0, pos=[0, 0], size=[10.12,13.72],\u000a    color=[1,1,1], colorSpace='rgb', opacity=1,\u000a    flipHoriz=False, flipVert=False,\u000a    texRes=128, interpolate=True, depth=0.0)\u000amouseResp = event.Mouse(win=win,visible=False)\u000ax, y = [None, None]\u000a\u000a# Initialize components for Routine "forcedPause"\u000aforcedPauseClock = core.Clock()\u000apauseText = visual.TextStim(win=win, ori=0, name='pauseText',\u000a    text=u'Zeit f\u005cxfcr eine kurze Pause.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "resumeExperiment"\u000aresumeExperimentClock = core.Clock()\u000aresumeText = visual.TextStim(win=win, ori=0, name='resumeText',\u000a    text='Weiter mit ENTER.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "mainTrial"\u000amainTrialClock = core.Clock()\u000afaceImg = visual.ImageStim(win=win, name='faceImg',\u000a    image='sin', mask=None,\u000a    ori=0, pos=[0, 0], size=[10.12,13.72],\u000a    color=[1,1,1], colorSpace='rgb', opacity=1,\u000a    flipHoriz=False, flipVert=False,\u000a    texRes=128, interpolate=True, depth=0.0)\u000amouseResp = event.Mouse(win=win,visible=False)\u000ax, y = [None, None]\u000a\u000a# Initialize components for Routine "endInstruct"\u000aendInstructClock = core.Clock()\u000aendText = visual.TextStim(win=win, ori=0, name='endText',\u000a    text=u'Dieser Teil des Experiments ist nun zu Ende.\u005cnVielen Dank!\u005cn\u005cnWenden Sie sich bitte an die Versuchsleiterin.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a\u000a\u000a################################ BASIC EMOZ ##\u000a\u000a\u000a# Initialize components for Routine "basicInstruct"\u000abasicInstructClock = core.Clock()\u000atext = visual.TextStim(win=win, ori=0, name='text',\u000a    text=u"Im nachfolgenden Experiment werden Sie nacheinander einzelne Gesichter sehen.\u005cn\u005cnSie m\u005cxfcssen jeweils entscheiden, welchen Ausdruck das gezeigte Gesicht hat.\u005cn\u005cnZur Auswahl stehen Ihnen hierbei die folgenden M\u005cxf6glichkeiten:\u005cnFreude\u005cnAngst\u005cn\u005cxc4rger\u005cnTrauer\u005cnEkel\u005cn\u005cxdcberraschung\u005cnNeutral\u005cn\u005cnEntscheiden Sie sich bei jedem gezeigten Gesicht f\u005cxfcr einen der \u005cnm\u005cxf6glichen Gesichtsausdr\u005cxfccke.",    font='Arial',\u000a    pos=[0, 0], height=0.8, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "basicTrial"\u000abasicTrialClock = core.Clock()\u000abasicImage = visual.ImageStim(win=win, name='basicImage',\u000a    image='sin', mask=None,\u000a    ori=0, pos=[0, 3], size=[10.12,13.72],\u000a    color=[1,1,1], colorSpace='rgb', opacity=1,\u000a    flipHoriz=False, flipVert=False,\u000a    texRes=128, interpolate=True, depth=0.0)\u000a\u000abasicRating1 = visual.RatingScale(win=win, name='basicRating1', marker=u'hover', size=0.6, pos=[0.0, -0.5], choices=[u'Freude', u'Trauer'], tickHeight=-1, disappear=True)\u000abasicRating2 = visual.RatingScale(win=win, name='basicRating2', marker=u'hover', size=0.6, pos=[0.0, -0.6], choices=[u'Angst', u'\u005cxc4rger'], tickHeight=-1, singleClick=True, disappear=True)\u000abasicRating3 = visual.RatingScale(win=win, name='basicRating3', marker=u'hover', size=0.6, pos=[0.0, -0.7], choices=[u'Ekel', u'\u005cxdcberraschung'], tickHeight=-1, singleClick=True, disappear=True)\u000abasicRating4 = visual.RatingScale(win=win, name='basicRating4', marker=u'hover', size=0.6, pos=[0.0, -0.8], choices=[u' ',u'Neutral', u' '], tickHeight=-1, singleClick=True, disappear=True)\u000a\u000a# Initialize components for Routine "basicWait"\u000abasicWaitClock = core.Clock()\u000aISI = core.StaticPeriod(win=win, screenHz=expInfo['frameRate'], name='ISI')\u000a\u000a# Initialize components for Routine "basicEnd"\u000abasicEndClock = core.Clock()\u000atext_2 = visual.TextStim(win=win, ori=0, name='text_2',\u000a    text=u'Danke. Das war der erste Teil.\u005cnDr\u005cxfccken Sie ENTER um zum n\u005cxe4chsten Teil zu kommen',    font=u'Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a    \u000a    \u000a    \u000a    \u000a###############################################################################\u000a\u000a\u000a# Create some handy timers\u000aglobalClock = core.Clock()  # to track the time since experiment started\u000aroutineTimer = core.CountdownTimer()  # to track time remaining of each (non-slip) routine \u000a\u000a\u000a\u000a\u000a#############################################\u000a\u000a\u000a\u000a#------Prepare to start Routine "basicInstruct"-------\u000at = 0\u000abasicInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_2 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_2.status = NOT_STARTED\u000a# keep track of which components have finished\u000abasicInstructComponents = []\u000abasicInstructComponents.append(text)\u000abasicInstructComponents.append(key_resp_2)\u000afor thisComponent in basicInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "basicInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = basicInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *text* updates\u000a    if t >= 0.0 and text.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        text.tStart = t  # underestimates by a little under one frame\u000a        text.frameNStart = frameN  # exact frame index\u000a        text.setAutoDraw(True)\u000a    \u000a    # *key_resp_2* updates\u000a    if t >= 0.0 and key_resp_2.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_2.tStart = t  # underestimates by a little under one frame\u000a        key_resp_2.frameNStart = frameN  # exact frame index\u000a        key_resp_2.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_2.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_2.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_2.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_2.rt = key_resp_2.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in basicInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "basicInstruct"-------\u000afor thisComponent in basicInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_2.keys in ['', [], None]:  # No response was made\u000a   key_resp_2.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_2.keys',key_resp_2.keys)\u000aif key_resp_2.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_2.rt', key_resp_2.rt)\u000athisExp.nextEntry()\u000a# the Routine "basicInstruct" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a# set up handler to look after randomisation of conditions etc\u000abasicLoop = data.TrialHandler(nReps=1, method='fullRandom', \u000a    extraInfo=expInfo, originPath=None,\u000a    trialList=data.importConditions('./arrays/imgList.csv'),\u000a    seed=None, name='basicLoop')\u000athisExp.addLoop(basicLoop)  # add the loop to the experiment\u000athisBasicLoop = basicLoop.trialList[0]  # so we can initialise stimuli with some values\u000a# abbreviate parameter names if possible (e.g. rgb=thisBasicLoop.rgb)\u000aif thisBasicLoop != None:\u000a    for paramName in thisBasicLoop.keys():\u000a        exec(paramName + '= thisBasicLoop.' + paramName)\u000a\u000afor thisBasicLoop in basicLoop:\u000a    currentLoop = basicLoop\u000a    # abbreviate parameter names if possible (e.g. rgb = thisBasicLoop.rgb)\u000a    if thisBasicLoop != None:\u000a        for paramName in thisBasicLoop.keys():\u000a            exec(paramName + '= thisBasicLoop.' + paramName)\u000a    \u000a    #------Prepare to start Routine "basicTrial"-------\u000a    \u000a    \u000a    ###########\u000a    # resetting the rating scales each time, so that the last response isnt visible\u000a    \u000a    basicRating1 = visual.RatingScale(win=win, name='basicRating1', marker=u'hover', size=0.6, pos=[0.0, -0.5], choices=[u'Freude', u'Trauer'], tickHeight=-1, disappear=True)\u000a    basicRating2 = visual.RatingScale(win=win, name='basicRating2', marker=u'hover', size=0.6, pos=[0.0, -0.6], choices=[u'Angst', u'\u005cxc4rger'], tickHeight=-1, singleClick=True, disappear=True)\u000a    basicRating3 = visual.RatingScale(win=win, name='basicRating3', marker=u'hover', size=0.6, pos=[0.0, -0.7], choices=[u'Ekel', u'\u005cxdcberraschung'], tickHeight=-1, singleClick=True, disappear=True)\u000a    basicRating4 = visual.RatingScale(win=win, name='basicRating4', marker=u'hover', size=0.6, pos=[0.0, -0.8], choices=[u' ',u'Neutral', u' '], tickHeight=-1, singleClick=True, disappear=True)\u000a\u000a    ###########\u000a    \u000a    t = 0\u000a    basicTrialClock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    basicImage.setImage(img)\u000a    basicRating1.reset()\u000a    basicRating2.reset()\u000a    basicRating3.reset()\u000a    basicRating4.reset()\u000a    # keep track of which components have finished\u000a    basicTrialComponents = []\u000a    basicTrialComponents.append(basicImage)\u000a    basicTrialComponents.append(basicRating1)\u000a    basicTrialComponents.append(basicRating2)\u000a    basicTrialComponents.append(basicRating3)\u000a    basicTrialComponents.append(basicRating4)\u000a    for thisComponent in basicTrialComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    \u000a    # ugly hack: the labels need to be renamed as the "umlaute" cannot be saved to csv \u000a    basicRating1.choices = ['HAP', 'SAD']\u000a    basicRating2.choices = ['FEA', 'ANG']\u000a    basicRating3.choices = ['DIS', 'SUP']\u000a    basicRating4.choices = ['dummy','NTR', 'dummy']\u000a    #-------Start Routine "basicTrial"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = basicTrialClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        # *basicImage* updates\u000a        if t >= 0 and basicImage.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicImage.tStart = t  # underestimates by a little under one frame\u000a            basicImage.frameNStart = frameN  # exact frame index\u000a            basicImage.setAutoDraw(True)\u000a        if basicImage.status == STARTED and t >= (0 + (4.0-win.monitorFramePeriod*0.75)): #most of one frame period left\u000a            basicImage.setAutoDraw(False)\u000a        # *basicRating1* updates\u000a        if t >= 0.5 and basicRating1.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating1.tStart = t  # underestimates by a little under one frame\u000a            basicRating1.frameNStart = frameN  # exact frame index\u000a            basicRating1.setAutoDraw(True)\u000a        continueRoutine &= basicRating1.noResponse  # a response ends the trial\u000a        # *basicRating2* updates\u000a        if t >= 0.5 and basicRating2.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating2.tStart = t  # underestimates by a little under one frame\u000a            basicRating2.frameNStart = frameN  # exact frame index\u000a            basicRating2.setAutoDraw(True)\u000a        continueRoutine &= basicRating2.noResponse  # a response ends the trial\u000a        # *basicRating3* updates\u000a        if t >= 0.5 and basicRating3.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating3.tStart = t  # underestimates by a little under one frame\u000a            basicRating3.frameNStart = frameN  # exact frame index\u000a            basicRating3.setAutoDraw(True)\u000a        continueRoutine &= basicRating3.noResponse  # a response ends the trial\u000a        # *basicRating4* updates\u000a        if t >= 0.5 and basicRating4.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating4.tStart = t  # underestimates by a little under one frame\u000a            basicRating4.frameNStart = frameN  # exact frame index\u000a            basicRating4.setAutoDraw(True)\u000a        continueRoutine &= basicRating4.noResponse  # a response ends the trial\u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in basicTrialComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "basicTrial"-------\u000a    for thisComponent in basicTrialComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating1.response', basicRating1.getRating())\u000a    basicLoop.addData('basicRating1.rt', basicRating1.getRT())\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating2.response', basicRating2.getRating())\u000a    basicLoop.addData('basicRating2.rt', basicRating2.getRT())\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating3.response', basicRating3.getRating())\u000a    basicLoop.addData('basicRating3.rt', basicRating3.getRT())\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating4.response', basicRating4.getRating())\u000a    basicLoop.addData('basicRating4.rt', basicRating4.getRT())\u000a    # the Routine "basicTrial" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    \u000a    #------Prepare to start Routine "basicWait"-------\u000a    t = 0\u000a    basicWaitClock.reset()  # clock \u000a    frameN = -1\u000a    routineTimer.add(0.500000)\u000a    # update component parameters for each repeat\u000a    # keep track of which components have finished\u000a    basicWaitComponents = []\u000a    basicWaitComponents.append(ISI)\u000a    for thisComponent in basicWaitComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "basicWait"-------\u000a    continueRoutine = True\u000a    while continueRoutine and routineTimer.getTime() > 0:\u000a        # get current time\u000a        t = basicWaitClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        # *ISI* period\u000a        if t >= 0.0 and ISI.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            ISI.tStart = t  # underestimates by a little under one frame\u000a            ISI.frameNStart = frameN  # exact frame index\u000a            ISI.start(0.5)\u000a        elif ISI.status == STARTED: #one frame should pass before updating params and completing\u000a            ISI.complete() #finish the static period\u000a        \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in basicWaitComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "basicWait"-------\u000a    for thisComponent in basicWaitComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    thisExp.nextEntry()\u000a    \u000a# completed 1 repeats of 'basicLoop'\u000a\u000a\u000a#------Prepare to start Routine "basicEnd"-------\u000at = 0\u000abasicEndClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_3 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_3.status = NOT_STARTED\u000a# keep track of which components have finished\u000abasicEndComponents = []\u000abasicEndComponents.append(text_2)\u000abasicEndComponents.append(key_resp_3)\u000afor thisComponent in basicEndComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "basicEnd"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = basicEndClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *text_2* updates\u000a    if t >= 0.0 and text_2.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        text_2.tStart = t  # underestimates by a little under one frame\u000a        text_2.frameNStart = frameN  # exact frame index\u000a        text_2.setAutoDraw(True)\u000a    \u000a    # *key_resp_3* updates\u000a    if t >= 0.0 and key_resp_3.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_3.tStart = t  # underestimates by a little under one frame\u000a        key_resp_3.frameNStart = frameN  # exact frame index\u000a        key_resp_3.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_3.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_3.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_3.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_3.rt = key_resp_3.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in basicEndComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "basicEnd"-------\u000afor thisComponent in basicEndComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_3.keys in ['', [], None]:  # No response was made\u000a   key_resp_3.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_3.keys',key_resp_3.keys)\u000aif key_resp_3.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_3.rt', key_resp_3.rt)\u000athisExp.nextEntry()\u000a# the Routine "basicEnd" was not non-slip safe, so reset the non-slip timer\u000a#routineTimer.reset()\u000a#win.close()\u000a#core.quit()\u000a\u000a\u000a##############################################\u000amouseResp = event.Mouse(win=win,visible=False)\u000a\u000a\u000a#------Prepare to start Routine "mainInstruct"-------\u000at = 0\u000amainInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_2 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_2.status = NOT_STARTED\u000a# keep track of which components have finished\u000amainInstructComponents = []\u000amainInstructComponents.append(mainText)\u000amainInstructComponents.append(key_resp_2)\u000afor thisComponent in mainInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "mainInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = mainInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *mainText* updates\u000a    if t >= 0.0 and mainText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        mainText.tStart = t  # underestimates by a little under one frame\u000a        mainText.frameNStart = frameN  # exact frame index\u000a        mainText.setAutoDraw(True)\u000a    \u000a    # *key_resp_2* updates\u000a    if t >= 0.0 and key_resp_2.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_2.tStart = t  # underestimates by a little under one frame\u000a        key_resp_2.frameNStart = frameN  # exact frame index\u000a        key_resp_2.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_2.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_2.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space', 'return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_2.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_2.rt = key_resp_2.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in mainInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "mainInstruct"-------\u000afor thisComponent in mainInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_2.keys in ['', [], None]:  # No response was made\u000a   key_resp_2.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_2.keys',key_resp_2.keys)\u000aif key_resp_2.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_2.rt', key_resp_2.rt)\u000athisExp.nextEntry()\u000a# the Routine "mainInstruct" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a#------Prepare to start Routine "buttonInstruct"-------\u000at = 0\u000abuttonInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_3 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_3.status = NOT_STARTED\u000a# keep track of which components have finished\u000abuttonInstructComponents = []\u000abuttonInstructComponents.append(buttonText)\u000abuttonInstructComponents.append(key_resp_3)\u000afor thisComponent in buttonInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "buttonInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = buttonInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *buttonText* updates\u000a    if t >= 0.0 and buttonText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        buttonText.tStart = t  # underestimates by a little under one frame\u000a        buttonText.frameNStart = frameN  # exact frame index\u000a        buttonText.setAutoDraw(True)\u000a    \u000a    # *key_resp_3* updates\u000a    if t >= 0.0 and key_resp_3.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_3.tStart = t  # underestimates by a little under one frame\u000a        key_resp_3.frameNStart = frameN  # exact frame index\u000a        key_resp_3.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_3.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_3.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space', 'return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_3.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_3.rt = key_resp_3.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in buttonInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "buttonInstruct"-------\u000afor thisComponent in buttonInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_3.keys in ['', [], None]:  # No response was made\u000a   key_resp_3.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_3.keys',key_resp_3.keys)\u000aif key_resp_3.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_3.rt', key_resp_3.rt)\u000athisExp.nextEntry()\u000a# the Routine "buttonInstruct" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a#------Prepare to start Routine "startScreen"-------\u000at = 0\u000astartScreenClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_4 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_4.status = NOT_STARTED\u000a# keep track of which components have finished\u000astartScreenComponents = []\u000astartScreenComponents.append(startText)\u000astartScreenComponents.append(key_resp_4)\u000afor thisComponent in startScreenComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "startScreen"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = startScreenClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *startText* updates\u000a    if t >= 0.0 and startText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        startText.tStart = t  # underestimates by a little under one frame\u000a        startText.frameNStart = frameN  # exact frame index\u000a        startText.setAutoDraw(True)\u000a    \u000a    # *key_resp_4* updates\u000a    if t >= 0.0 and key_resp_4.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_4.tStart = t  # underestimates by a little under one frame\u000a        key_resp_4.frameNStart = frameN  # exact frame index\u000a        key_resp_4.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_4.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_4.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_4.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_4.rt = key_resp_4.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in startScreenComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "startScreen"-------\u000afor thisComponent in startScreenComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_4.keys in ['', [], None]:  # No response was made\u000a   key_resp_4.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_4.keys',key_resp_4.keys)\u000aif key_resp_4.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_4.rt', key_resp_4.rt)\u000athisExp.nextEntry()\u000a# the Routine "startScreen" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a# set up handler to look after randomisation of conditions etc\u000atrials = data.TrialHandler(nReps=1, method='sequential', \u000a    extraInfo=expInfo, originPath=None,\u000a    trialList=data.importConditions(pt1Conditions),\u000a    seed=None, name='trials')\u000athisExp.addLoop(trials)  # add the loop to the experiment\u000athisTrial = trials.trialList[0]  # so we can initialise stimuli with some values\u000a# abbreviate parameter names if possible (e.g. rgb=thisTrial.rgb)\u000aif thisTrial != None:\u000a    for paramName in thisTrial.keys():\u000a        exec(paramName + '= thisTrial.' + paramName)\u000a\u000afor thisTrial in trials:\u000a    currentLoop = trials\u000a    # abbreviate parameter names if possible (e.g. rgb = thisTrial.rgb)\u000a    if thisTrial != None:\u000a        for paramName in thisTrial.keys():\u000a            exec(paramName + '= thisTrial.' + paramName)\u000a\u000a    #------Prepare to start Routine "mainTrial"-------\u000a    t = 0\u000a    mainTrialClock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    faceImg.setImage(img)\u000a    # setup some python lists for storing info about the mouseResp\u000a    mouseResp.x = []\u000a    mouseResp.y = []\u000a    mouseResp.leftButton = []\u000a    mouseResp.midButton = []\u000a    mouseResp.rightButton = []\u000a    mouseResp.time = []\u000a    # keep track of which components have finished\u000a    mainTrialComponents = []\u000a    mainTrialComponents.append(faceImg)\u000a    mainTrialComponents.append(mouseResp)\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "mainTrial"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = mainTrialClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        # *faceImg* updates\u000a        if t >= 0.0 and faceImg.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            faceImg.tStart = t  # underestimates by a little under one frame\u000a            faceImg.frameNStart = frameN  # exact frame index\u000a            faceImg.setAutoDraw(True)\u000a        # *mouseResp* updates\u000a        if t >= 0.3 and mouseResp.status == NOT_STARTED: ####################################\u000a            # keep track of start time/frame for later\u000a            mouseResp.tStart = t  # underestimates by a little under one frame\u000a            mouseResp.frameNStart = frameN  # exact frame index\u000a            mouseResp.status = STARTED\u000a            event.mouseButtons = [0, 0, 0]  # reset mouse buttons to be 'up'\u000a        if mouseResp.status == STARTED:  # only update if started and not stopped!\u000a            buttons = mouseResp.getPressed()\u000a            if sum([buttons[0],buttons[-1]]) > 0:  # ie if THE LEFT OR RIGHT BUTTON is pressed\u000a                x, y = mouseResp.getPos()\u000a                mouseResp.x.append(x)\u000a                mouseResp.y.append(y)\u000a                mouseResp.leftButton.append(buttons[0])\u000a                mouseResp.midButton.append(buttons[1])\u000a                mouseResp.rightButton.append(buttons[2])\u000a                mouseResp.time.append(mainTrialClock.getTime())\u000a                \u000a                \u000a                \u000a                \u000a                # add a counter\u000a                for morph in ['_00_','_01_','_02_','_03_','_04_','_05_','_06_','_07_','_08_','_09_','_10_']:\u000a                    if morph in img:\u000a                        try:\u000a                            countDict[morph] += 1\u000a                        except:\u000a                            countDict[morph] = 1\u000a                        if buttons[targetButton] == 1:\u000a                            try:\u000a                                hitsDict[morph]+=1\u000a                            except:\u000a                                hitsDict[morph]=1\u000a                                \u000a                # abort routine on response\u000a                continueRoutine = False\u000a                \u000a                # ADDED THE ESC COMMAND INTO THE LOOP, SO WE CAN QUIT ANYTIME\u000a                # check for quit (the Esc key)\u000a                if endExpNow or event.getKeys(keyList=["escape"]):\u000a                    core.quit()\u000a        \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in mainTrialComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "mainTrial"-------\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    # store data for trials (TrialHandler)\u000a    trials.addData('mouseResp.x', mouseResp.x[0])\u000a    trials.addData('mouseResp.y', mouseResp.y[0])\u000a    trials.addData('mouseResp.leftButton', mouseResp.leftButton[0])\u000a    trials.addData('mouseResp.midButton', mouseResp.midButton[0])\u000a    trials.addData('mouseResp.rightButton', mouseResp.rightButton[0])\u000a    trials.addData('mouseResp.time', mouseResp.time[0])\u000a    # the Routine "mainTrial" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    thisExp.nextEntry()\u000a    \u000a# completed 1 repeats of 'trials'\u000a\u000a\u000a#------Prepare to start Routine "forcedPause"-------\u000at = 0\u000aforcedPauseClock.reset()  # clock \u000aframeN = -1\u000aroutineTimer.add(30.000000)\u000a# update component parameters for each repeat\u000a# keep track of which components have finished\u000aforcedPauseComponents = []\u000aforcedPauseComponents.append(pauseText)\u000afor thisComponent in forcedPauseComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "forcedPause"-------\u000acontinueRoutine = True\u000awhile continueRoutine and routineTimer.getTime() > 0:\u000a    # get current time\u000a    t = forcedPauseClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *pauseText* updates\u000a    if t >= 0.0 and pauseText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        pauseText.tStart = t  # underestimates by a little under one frame\u000a        pauseText.frameNStart = frameN  # exact frame index\u000a        pauseText.setAutoDraw(True)\u000a    if pauseText.status == STARTED and t >= (0.0 + (30-win.monitorFramePeriod*0.75)): #most of one frame period left\u000a        pauseText.setAutoDraw(False)\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in forcedPauseComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "forcedPause"-------\u000afor thisComponent in forcedPauseComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a\u000a#------Prepare to start Routine "resumeExperiment"-------\u000at = 0\u000aresumeExperimentClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_5 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_5.status = NOT_STARTED\u000a# keep track of which components have finished\u000aresumeExperimentComponents = []\u000aresumeExperimentComponents.append(resumeText)\u000aresumeExperimentComponents.append(key_resp_5)\u000afor thisComponent in resumeExperimentComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "resumeExperiment"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = resumeExperimentClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *resumeText* updates\u000a    if t >= 0.0 and resumeText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        resumeText.tStart = t  # underestimates by a little under one frame\u000a        resumeText.frameNStart = frameN  # exact frame index\u000a        resumeText.setAutoDraw(True)\u000a    \u000a    # *key_resp_5* updates\u000a    if t >= 0.0 and key_resp_5.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_5.tStart = t  # underestimates by a little under one frame\u000a        key_resp_5.frameNStart = frameN  # exact frame index\u000a        key_resp_5.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_5.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_5.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_5.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_5.rt = key_resp_5.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in resumeExperimentComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "resumeExperiment"-------\u000afor thisComponent in resumeExperimentComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_5.keys in ['', [], None]:  # No response was made\u000a   key_resp_5.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_5.keys',key_resp_5.keys)\u000aif key_resp_5.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_5.rt', key_resp_5.rt)\u000athisExp.nextEntry()\u000a# the Routine "resumeExperiment" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a# set up handler to look after randomisation of conditions etc\u000atrials2 = data.TrialHandler(nReps=1, method='sequential', \u000a    extraInfo=expInfo, originPath=None,\u000a    trialList=data.importConditions(pt2Conditions),\u000a    seed=None, name='trials2')\u000athisExp.addLoop(trials2)  # add the loop to the experiment\u000athisTrials2 = trials2.trialList[0]  # so we can initialise stimuli with some values\u000a# abbreviate parameter names if possible (e.g. rgb=thisTrials2.rgb)\u000aif thisTrials2 != None:\u000a    for paramName in thisTrials2.keys():\u000a        exec(paramName + '= thisTrials2.' + paramName)\u000a\u000afor thisTrials2 in trials2:\u000a    currentLoop = trials2\u000a    # abbreviate parameter names if possible (e.g. rgb = thisTrials2.rgb)\u000a    if thisTrials2 != None:\u000a        for paramName in thisTrials2.keys():\u000a            exec(paramName + '= thisTrials2.' + paramName)\u000a    \u000a    #------Prepare to start Routine "mainTrial"-------\u000a    t = 0\u000a    mainTrialClock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    faceImg.setImage(img)\u000a    # setup some python lists for storing info about the mouseResp\u000a    mouseResp.x = []\u000a    mouseResp.y = []\u000a    mouseResp.leftButton = []\u000a    mouseResp.midButton = []\u000a    mouseResp.rightButton = []\u000a    mouseResp.time = []\u000a    # keep track of which components have finished\u000a    mainTrialComponents = []\u000a    mainTrialComponents.append(faceImg)\u000a    mainTrialComponents.append(mouseResp)\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "mainTrial"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = mainTrialClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        # *faceImg* updates\u000a        if t >= 0.0 and faceImg.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            faceImg.tStart = t  # underestimates by a little under one frame\u000a            faceImg.frameNStart = frameN  # exact frame index\u000a            faceImg.setAutoDraw(True)\u000a            \u000a        # *mouseResp* updates\u000a        if t >= 0.3 and mouseResp.status == NOT_STARTED: #############################################\u000a            # keep track of start time/frame for later\u000a            mouseResp.tStart = t  # underestimates by a little under one frame\u000a            mouseResp.frameNStart = frameN  # exact frame index\u000a            mouseResp.status = STARTED\u000a            event.mouseButtons = [0, 0, 0]  # reset mouse buttons to be 'up'\u000a        if mouseResp.status == STARTED:  # only update if started and not stopped!\u000a            buttons = mouseResp.getPressed()\u000a            if sum([buttons[0],buttons[-1]]) > 0:  # ie if any button is pressed\u000a                x, y = mouseResp.getPos()\u000a                mouseResp.x.append(x)\u000a                mouseResp.y.append(y)\u000a                mouseResp.leftButton.append(buttons[0])\u000a                mouseResp.midButton.append(buttons[1])\u000a                mouseResp.rightButton.append(buttons[2])\u000a                mouseResp.time.append(mainTrialClock.getTime())\u000a                \u000a                # add a counter\u000a                for morph in ['_00_','_01_','_02_','_03_','_04_','_05_','_06_','_07_','_08_','_09_','_10_']:\u000a                    if morph in img:\u000a                        try:\u000a                            countDict[morph] += 1\u000a                        except:\u000a                            countDict[morph] = 1\u000a                        if buttons[targetButton] == 1:\u000a                            try:\u000a                                hitsDict[morph]+=1\u000a                            except:\u000a                                hitsDict[morph]=1\u000a                    \u000a                # abort routine on response\u000a                continueRoutine = False\u000a        \u000a                # ADDED THE ESC COMMAND INTO THE LOOP, SO WE CAN QUIT ANYTIME\u000a                # check for quit (the Esc key)\u000a                if endExpNow or event.getKeys(keyList=["escape"]):\u000a                    core.quit()\u000a                    \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in mainTrialComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "mainTrial"-------\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    # store data for trials2 (TrialHandler)\u000a    trials2.addData('mouseResp.x', mouseResp.x[0])\u000a    trials2.addData('mouseResp.y', mouseResp.y[0])\u000a    trials2.addData('mouseResp.leftButton', mouseResp.leftButton[0])\u000a    trials2.addData('mouseResp.midButton', mouseResp.midButton[0])\u000a    trials2.addData('mouseResp.rightButton', mouseResp.rightButton[0])\u000a    trials2.addData('mouseResp.time', mouseResp.time[0])\u000a    \u000a    # the Routine "mainTrial" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    thisExp.nextEntry()\u000a    \u000a# completed 1 repeats of 'trials2'\u000a\u000a\u000a#------Prepare to start Routine "endInstruct"-------\u000at = 0\u000aendInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_6 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_6.status = NOT_STARTED\u000a# keep track of which components have finished\u000aendInstructComponents = []\u000aendInstructComponents.append(endText)\u000aendInstructComponents.append(key_resp_6)\u000afor thisComponent in endInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "endInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = endInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *endText* updates\u000a    if t >= 0.0 and endText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        endText.tStart = t  # underestimates by a little under one frame\u000a        endText.frameNStart = frameN  # exact frame index\u000a        endText.setAutoDraw(True)\u000a    \u000a    # *key_resp_6* updates\u000a    if t >= 0.0 and key_resp_6.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_6.tStart = t  # underestimates by a little under one frame\u000a        key_resp_6.frameNStart = frameN  # exact frame index\u000a        key_resp_6.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_6.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_6.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space', 'return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_6.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_6.rt = key_resp_6.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in endInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "endInstruct"-------\u000afor thisComponent in endInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a\u000a\u000a# Initialize components for Routine "analysisCheck"\u000aanalysisCheckClock = core.Clock()\u000aanalysisText = visual.TextStim(win=win, ori=0, name='analysisText',\u000a    text=str('00'+'\u005ct'+str(countDict['_00_'])+'\u005ct'+str(hitsDict['_00_'])+'\u005cn'+\u000a    '01'+'\u005ct'+str(countDict['_01_'])+'\u005ct'+str(hitsDict['_01_'])+'\u005cn'+\u000a    '02'+'\u005ct'+str(countDict['_02_'])+'\u005ct'+str(hitsDict['_02_'])+'\u005cn'+\u000a    '03'+'\u005ct'+str(countDict['_03_'])+'\u005ct'+str(hitsDict['_03_'])+'\u005cn'+\u000a    '04'+'\u005ct'+str(countDict['_04_'])+'\u005ct'+str(hitsDict['_04_'])+'\u005cn'+\u000a    '05'+'\u005ct'+str(countDict['_05_'])+'\u005ct'+str(hitsDict['_05_'])+'\u005cn'+\u000a    '06'+'\u005ct'+str(countDict['_06_'])+'\u005ct'+str(hitsDict['_06_'])+'\u005cn'+\u000a    '07'+'\u005ct'+str(countDict['_07_'])+'\u005ct'+str(hitsDict['_07_'])+'\u005cn'+\u000a    '08'+'\u005ct'+str(countDict['_08_'])+'\u005ct'+str(hitsDict['_08_'])+'\u005cn'+\u000a    '09'+'\u005ct'+str(countDict['_09_'])+'\u005ct'+str(hitsDict['_09_'])+'\u005cn'+\u000a    '10'+'\u005ct'+str(countDict['_10_'])+'\u005ct'+str(hitsDict['_10_'])), font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a#------Prepare to start Routine "analysisCheck"-------\u000at = 0\u000aanalysisCheckClock.reset()  # clock\u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_7 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_7.status = NOT_STARTED\u000a# keep track of which components have finished\u000aanalysisCheckComponents = []\u000aanalysisCheckComponents.append(analysisText)\u000aanalysisCheckComponents.append(key_resp_7)\u000afor thisComponent in analysisCheckComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "analysisCheck"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = analysisCheckClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a\u000a    # *analysisText* updates\u000a    if t >= 0.0 and analysisText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        analysisText.tStart = t  # underestimates by a little under one frame\u000a        analysisText.frameNStart = frameN  # exact frame index\u000a        analysisText.setAutoDraw(True)\u000a\u000a    # *key_resp_7* updates\u000a    if t >= 0.0 and key_resp_7.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_7.tStart = t  # underestimates by a little under one frame\u000a        key_resp_7.frameNStart = frameN  # exact frame index\u000a        key_resp_7.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_7.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_7.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a\u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_7.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_7.rt = key_resp_7.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a\u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in analysisCheckComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "analysisCheck"-------\u000afor thisComponent in analysisCheckComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_7.keys in ['', [], None]:  # No response was made\u000a   key_resp_7.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_7.keys',key_resp_7.keys)\u000aif key_resp_7.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_7.rt', key_resp_7.rt)\u000athisExp.nextEntry()\u000a# the Routine "analysisCheck" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000awin.close()\u000acore.quit()
p5233
sg4999
(lp5234
sg5001
I139855536018896
sg10
g5041
sg6
g5003
sg5004
I1
sg38
I01
sg39
g40
sg5005
g1
(g5006
g5007
(dp5235
g30
g5020
(g5021
g5010
g5022
S'b'
tRp5236
(I1
(I220
I1
tg5024
I00
S'\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg5019
g5020
(g5021
g5010
g5022
S'b'
tRp5237
(I1
(I220
I1
tg5024
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg28
g5009
(g5010
(I0
tS'b'
tRp5238
(I1
(I220
I1
tg5012
I00
(lp5239
g591
ag601
ag611
ag621
ag631
ag641
ag651
ag661
ag671
ag681
ag691
ag701
ag711
ag721
ag731
ag741
ag751
ag761
ag771
ag781
ag791
ag801
ag811
ag821
ag831
ag841
ag851
ag861
ag871
ag881
ag891
ag901
ag911
ag921
ag931
ag941
ag951
ag961
ag971
ag981
ag991
ag1001
ag1011
ag1021
ag1031
ag1041
ag1051
ag1061
ag1071
ag1081
ag1091
ag1101
ag1111
ag1121
ag1131
ag1141
ag1151
ag1161
ag1171
ag1181
ag1191
ag1201
ag1211
ag1221
ag1231
ag1241
ag1251
ag1261
ag1271
ag1281
ag1291
ag1301
ag1311
ag1321
ag1331
ag1341
ag1351
ag1361
ag1371
ag1381
ag1391
ag1401
ag1411
ag1421
ag1431
ag1441
ag1451
ag1461
ag1471
ag1481
ag1491
ag1501
ag1511
ag1521
ag1531
ag1541
ag1551
ag1561
ag1571
ag1581
ag1591
ag1601
ag1611
ag1621
ag1631
ag1641
ag1651
ag1661
ag1671
ag1681
ag1691
ag1701
ag1711
ag1721
ag1731
ag1741
ag1751
ag1761
ag1771
ag1781
ag1791
ag1801
ag1811
ag1821
ag1831
ag1841
ag1851
ag1861
ag1871
ag1881
ag1891
ag1901
ag1911
ag1921
ag1931
ag1941
ag1951
ag1961
ag1971
ag1981
ag1991
ag2001
ag2011
ag2021
ag2031
ag2041
ag2051
ag2061
ag2071
ag2081
ag2091
ag2101
ag2111
ag2121
ag2131
ag2141
ag2151
ag2161
ag2171
ag2181
ag2191
ag2201
ag2211
ag2221
ag2231
ag2241
ag2251
ag2261
ag2271
ag2281
ag2291
ag2301
ag2311
ag2321
ag2331
ag2341
ag2351
ag2361
ag2371
ag2381
ag2391
ag2401
ag2411
ag2421
ag2431
ag2441
ag2451
ag2461
ag2471
ag2481
ag2491
ag2501
ag2511
ag2521
ag2531
ag2541
ag2551
ag2561
ag2571
ag2581
ag2591
ag2601
ag2611
ag2621
ag2631
ag2641
ag2651
ag2661
ag2671
ag2681
ag2691
ag2701
ag2711
ag2721
ag2731
ag2741
ag2751
ag2761
ag2771
ag2781
atbsg29
g5009
(g5010
(I0
tS'b'
tRp5240
(I1
(I220
I1
tg5012
I00
(lp5241
g592
ag602
ag612
ag622
ag632
ag642
ag652
ag662
ag672
ag682
ag692
ag702
ag712
ag722
ag732
ag742
ag752
ag762
ag772
ag782
ag792
ag802
ag812
ag822
ag832
ag842
ag852
ag862
ag872
ag882
ag892
ag902
ag912
ag922
ag932
ag942
ag952
ag962
ag972
ag982
ag992
ag1002
ag1012
ag1022
ag1032
ag1042
ag1052
ag1062
ag1072
ag1082
ag1092
ag1102
ag1112
ag1122
ag1132
ag1142
ag1152
ag1162
ag1172
ag1182
ag1192
ag1202
ag1212
ag1222
ag1232
ag1242
ag1252
ag1262
ag1272
ag1282
ag1292
ag1302
ag1312
ag1322
ag1332
ag1342
ag1352
ag1362
ag1372
ag1382
ag1392
ag1402
ag1412
ag1422
ag1432
ag1442
ag1452
ag1462
ag1472
ag1482
ag1492
ag1502
ag1512
ag1522
ag1532
ag1542
ag1552
ag1562
ag1572
ag1582
ag1592
ag1602
ag1612
ag1622
ag1632
ag1642
ag1652
ag1662
ag1672
ag1682
ag1692
ag1702
ag1712
ag1722
ag1732
ag1742
ag1752
ag1762
ag1772
ag1782
ag1792
ag1802
ag1812
ag1822
ag1832
ag1842
ag1852
ag1862
ag1872
ag1882
ag1892
ag1902
ag1912
ag1922
ag1932
ag1942
ag1952
ag1962
ag1972
ag1982
ag1992
ag2002
ag2012
ag2022
ag2032
ag2042
ag2052
ag2062
ag2072
ag2082
ag2092
ag2102
ag2112
ag2122
ag2132
ag2142
ag2152
ag2162
ag2172
ag2182
ag2192
ag2202
ag2212
ag2222
ag2232
ag2242
ag2252
ag2262
ag2272
ag2282
ag2292
ag2302
ag2312
ag2322
ag2332
ag2342
ag2352
ag2362
ag2372
ag2382
ag2392
ag2402
ag2412
ag2422
ag2432
ag2442
ag2452
ag2462
ag2472
ag2482
ag2492
ag2502
ag2512
ag2522
ag2532
ag2542
ag2552
ag2562
ag2572
ag2582
ag2592
ag2602
ag2612
ag2622
ag2632
ag2642
ag2652
ag2662
ag2672
ag2682
ag2692
ag2702
ag2712
ag2722
ag2732
ag2742
ag2752
ag2762
ag2772
ag2782
atbsg31
g5020
(g5021
g5010
g5022
S'b'
tRp5242
(I1
(I220
I1
tg5024
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg32
g5020
(g5021
g5010
g5022
S'b'
tRp5243
(I1
(I220
I1
tg5024
I00
S'\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg33
g5020
(g5021
g5010
g5022
S'b'
tRp5244
(I1
(I220
I1
tg5024
I00
S' \x8e\xd0@P$t?\x97\xac @pB\x8b?\xd8\xa6Q?\xd7\x17\x16@L\xfff?`\xa17?f\xa3\x91?|\xd2\x91?z\xa1\x86?\xe4\xc7\x86?\xca\xfc\x97?\xa7\xe5/@\x94\x9d&?\xd0\xe1.?\x12h\xd8?\xfbug@\xca\xa4\xa2?\xd2\x1b\xb4?\xf8\xa7-@\x003\x8b? \xebM?\x02\n\xff?\x82\xfe\x86?\xb0/V?X\x83/?f\xa4\x1e@\xa8\x00\xee?\x8305@\x12O\x9a?"\xe1\xf9@\x9e\xb9\x93?s\xf3]@\x12\x10`@D\x1b\xb4@\xd5\xd3k@\x80*\xd9@\xcc(\x98?\xfcQ\xb8?\xda\x8e\x91?\xd4?\xf0?L\xa2J@\xb0@t?\xa4oZ?3\xa9\x1f@\xcc~\xe7?\xb8-\x9e@\xdcuk?@\x90\x80?\\Y\xd6?[(\x08@\x06\x9d\x82?\xaa\xbb\xa0?\x9c\xffo?,\x0c\xa5?v\x7f\xa0?\x12\xf3\x86?\xacT@?\x96\xe5\xb1?2sV@\xe0\x9fZ?\x1a=\x8f?r\xc2\xa2?\xec.8?\x02d\xd6?\xa8\x1e\t?\x18\x08V?D\xa0b?\x1cF\x8d?>A\xb8?\xb8nk?\xcc\xd0[@x\xe2Q?\x18\x92\x0e@"\xc0\x11@P\xfa3?\x8d\xb7\x10@\xce\x8b\xad?|\xf0\xa2?l\x9d<?\xb8\xb5|?,\x96^?\x18\x06\x96?@\xccQ?D\xf8o?\xafB\'@-\x97;@\x92_\x8d?\x08r<?$)E?\xca\xff^@\x00\xc3"?\xc8B\xd8?\xc0\xf5Q?\xf0\xe83?\x80\x1d\x87@0$g?\n\xf5\x86?px*@\x16F\xae@\xec\xfc7?\x00\xb4^?\x0c\xd1\x15?x\xb9@?\x80QI?\xb0kg?`@/?d\xd0\x15?N\xf0\xcf?\xdc\xde^?\xc4\xf3\xde?\xa0\x1f\x1a?\x12{\xd6@\xe4+\r?n\x9b\x8f?\xb8\xdcM?\xe0)5@\x95\xab\xb4@\x94\xdc\x15?\xca\xa6\x84?D\x10+?\xfc\xa1"?\xb5\x16B@\x14w\xa0?\x9c<\xc5?\x88\xe87?(2+?\xb7{\r@\xe8\xb1M?\xd4\xe63?(\xd2\x15?\x8c_\r?<4&@\x80\xf5L?\x93\x1c%@Te<?\x8a\x04\xc3?\x04\xc5s?\xd4\x83"?\xb8\x90\x93?5\xf2?@$rZ?\\\xd07? /@?\xd2\xe1k@\x04\x06\xa5?\xbc[M?@N\x08?X\xe6\x15?s\x9aJ@~\x03\xa5?\xe8\r+?2\xdf\xb1?\xb2H\xe2@\xb6\x9e\x8e@\xa4\xe3&?\x10\x92\x8f?\x9c\xff\xb3?\xb49\xb6?zT\xb8?h\xb1D?0\xf0\x08?\x88\xd9\xb1?\x98W\x9a?X\xe7\xfa?\xf8\xe93?\xce\x14\xb4?H\xa6\xe9?tFx?\xfe\x85\x82?\x1cwZ?\x90~\x8f?0"E?T\xc2k?\xe8\xea^?,48?\x06\xa0\x8f?\x80FE?\xd4Wg?\x04\xed\x84?\xc8\xaa\x11?\x8c\x8fZ?\xfc\x9e\x15?\xb3[\x0b@^\xb7\x82?l\xf6o?\\\xde\x15?\xe2\xad\xed?\xfe=\xf2?\x90\x9ak?f4\x0b@\x00(c?\xc4\tp?\x08\xc3@?\x10\xd9H?t\xd5H?\x8cTk?|Q\x8a@$\x030?@LZ?\x07\xb0\x10@:\xea\xa2?@\x12R?C\xae-@\xbc\xb5\xda?\xa4gg?T\xaf\x91?\x95&\x17@\xbeI\n@\xe8\xa5"? >@?b;\x98?\xc0`3?h9@?\x1e\xff\x95?\xe8p\x8f?\xd2\xac\x1e@lw/?\xb0\xfe\xed?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg5035
g5020
(g5021
g5010
g5022
S'b'
tRp5245
(I1
(I220
I1
tg5024
I00
S'\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00@\x00\x00@@\x00\x00\x80@\x00\x00\xa0@\x00\x00\xc0@\x00\x00\xe0@\x00\x00\x00A\x00\x00\x10A\x00\x00 A\x00\x000A\x00\x00@A\x00\x00PA\x00\x00`A\x00\x00pA\x00\x00\x80A\x00\x00\x88A\x00\x00\x90A\x00\x00\x98A\x00\x00\xa0A\x00\x00\xa8A\x00\x00\xb0A\x00\x00\xb8A\x00\x00\xc0A\x00\x00\xc8A\x00\x00\xd0A\x00\x00\xd8A\x00\x00\xe0A\x00\x00\xe8A\x00\x00\xf0A\x00\x00\xf8A\x00\x00\x00B\x00\x00\x04B\x00\x00\x08B\x00\x00\x0cB\x00\x00\x10B\x00\x00\x14B\x00\x00\x18B\x00\x00\x1cB\x00\x00 B\x00\x00$B\x00\x00(B\x00\x00,B\x00\x000B\x00\x004B\x00\x008B\x00\x00<B\x00\x00@B\x00\x00DB\x00\x00HB\x00\x00LB\x00\x00PB\x00\x00TB\x00\x00XB\x00\x00\\B\x00\x00`B\x00\x00dB\x00\x00hB\x00\x00lB\x00\x00pB\x00\x00tB\x00\x00xB\x00\x00|B\x00\x00\x80B\x00\x00\x82B\x00\x00\x84B\x00\x00\x86B\x00\x00\x88B\x00\x00\x8aB\x00\x00\x8cB\x00\x00\x8eB\x00\x00\x90B\x00\x00\x92B\x00\x00\x94B\x00\x00\x96B\x00\x00\x98B\x00\x00\x9aB\x00\x00\x9cB\x00\x00\x9eB\x00\x00\xa0B\x00\x00\xa2B\x00\x00\xa4B\x00\x00\xa6B\x00\x00\xa8B\x00\x00\xaaB\x00\x00\xacB\x00\x00\xaeB\x00\x00\xb0B\x00\x00\xb2B\x00\x00\xb4B\x00\x00\xb6B\x00\x00\xb8B\x00\x00\xbaB\x00\x00\xbcB\x00\x00\xbeB\x00\x00\xc0B\x00\x00\xc2B\x00\x00\xc4B\x00\x00\xc6B\x00\x00\xc8B\x00\x00\xcaB\x00\x00\xccB\x00\x00\xceB\x00\x00\xd0B\x00\x00\xd2B\x00\x00\xd4B\x00\x00\xd6B\x00\x00\xd8B\x00\x00\xdaB\x00\x00\xdcB\x00\x00\xdeB\x00\x00\xe0B\x00\x00\xe2B\x00\x00\xe4B\x00\x00\xe6B\x00\x00\xe8B\x00\x00\xeaB\x00\x00\xecB\x00\x00\xeeB\x00\x00\xf0B\x00\x00\xf2B\x00\x00\xf4B\x00\x00\xf6B\x00\x00\xf8B\x00\x00\xfaB\x00\x00\xfcB\x00\x00\xfeB\x00\x00\x00C\x00\x00\x01C\x00\x00\x02C\x00\x00\x03C\x00\x00\x04C\x00\x00\x05C\x00\x00\x06C\x00\x00\x07C\x00\x00\x08C\x00\x00\tC\x00\x00\nC\x00\x00\x0bC\x00\x00\x0cC\x00\x00\rC\x00\x00\x0eC\x00\x00\x0fC\x00\x00\x10C\x00\x00\x11C\x00\x00\x12C\x00\x00\x13C\x00\x00\x14C\x00\x00\x15C\x00\x00\x16C\x00\x00\x17C\x00\x00\x18C\x00\x00\x19C\x00\x00\x1aC\x00\x00\x1bC\x00\x00\x1cC\x00\x00\x1dC\x00\x00\x1eC\x00\x00\x1fC\x00\x00 C\x00\x00!C\x00\x00"C\x00\x00#C\x00\x00$C\x00\x00%C\x00\x00&C\x00\x00\'C\x00\x00(C\x00\x00)C\x00\x00*C\x00\x00+C\x00\x00,C\x00\x00-C\x00\x00.C\x00\x00/C\x00\x000C\x00\x001C\x00\x002C\x00\x003C\x00\x004C\x00\x005C\x00\x006C\x00\x007C\x00\x008C\x00\x009C\x00\x00:C\x00\x00;C\x00\x00<C\x00\x00=C\x00\x00>C\x00\x00?C\x00\x00@C\x00\x00AC\x00\x00BC\x00\x00CC\x00\x00DC\x00\x00EC\x00\x00FC\x00\x00GC\x00\x00HC\x00\x00IC\x00\x00JC\x00\x00KC\x00\x00LC\x00\x00MC\x00\x00NC\x00\x00OC\x00\x00PC\x00\x00QC\x00\x00RC\x00\x00SC\x00\x00TC\x00\x00UC\x00\x00VC\x00\x00WC\x00\x00XC\x00\x00YC\x00\x00ZC\x00\x00[C'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
NtbstRp5246
(dp5247
g5039
(dp5248
g31
I01
sg5019
I01
sg28
I00
sg29
I00
sg30
I01
sg32
I01
sg33
I01
sg5035
I01
ssg5041
g5231
sg5042
(lp5249
g5019
ag5035
ag28
ag29
ag30
ag31
ag32
ag33
asg5044
(lp5250
I220
aI1
asbsg5046
S'sequential'
p5251
sg5048
g5009
(g5010
(I0
tS'b'
tRp5252
(I1
(I220
I1
tg588
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x07\x00\x00\x00\x00\x00\x00\x00\x08\x00\x00\x00\x00\x00\x00\x00\t\x00\x00\x00\x00\x00\x00\x00\n\x00\x00\x00\x00\x00\x00\x00\x0b\x00\x00\x00\x00\x00\x00\x00\x0c\x00\x00\x00\x00\x00\x00\x00\r\x00\x00\x00\x00\x00\x00\x00\x0e\x00\x00\x00\x00\x00\x00\x00\x0f\x00\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x11\x00\x00\x00\x00\x00\x00\x00\x12\x00\x00\x00\x00\x00\x00\x00\x13\x00\x00\x00\x00\x00\x00\x00\x14\x00\x00\x00\x00\x00\x00\x00\x15\x00\x00\x00\x00\x00\x00\x00\x16\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x00\x00\x00\x00\x00\x18\x00\x00\x00\x00\x00\x00\x00\x19\x00\x00\x00\x00\x00\x00\x00\x1a\x00\x00\x00\x00\x00\x00\x00\x1b\x00\x00\x00\x00\x00\x00\x00\x1c\x00\x00\x00\x00\x00\x00\x00\x1d\x00\x00\x00\x00\x00\x00\x00\x1e\x00\x00\x00\x00\x00\x00\x00\x1f\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00!\x00\x00\x00\x00\x00\x00\x00"\x00\x00\x00\x00\x00\x00\x00#\x00\x00\x00\x00\x00\x00\x00$\x00\x00\x00\x00\x00\x00\x00%\x00\x00\x00\x00\x00\x00\x00&\x00\x00\x00\x00\x00\x00\x00\'\x00\x00\x00\x00\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00)\x00\x00\x00\x00\x00\x00\x00*\x00\x00\x00\x00\x00\x00\x00+\x00\x00\x00\x00\x00\x00\x00,\x00\x00\x00\x00\x00\x00\x00-\x00\x00\x00\x00\x00\x00\x00.\x00\x00\x00\x00\x00\x00\x00/\x00\x00\x00\x00\x00\x00\x000\x00\x00\x00\x00\x00\x00\x001\x00\x00\x00\x00\x00\x00\x002\x00\x00\x00\x00\x00\x00\x003\x00\x00\x00\x00\x00\x00\x004\x00\x00\x00\x00\x00\x00\x005\x00\x00\x00\x00\x00\x00\x006\x00\x00\x00\x00\x00\x00\x007\x00\x00\x00\x00\x00\x00\x008\x00\x00\x00\x00\x00\x00\x009\x00\x00\x00\x00\x00\x00\x00:\x00\x00\x00\x00\x00\x00\x00;\x00\x00\x00\x00\x00\x00\x00<\x00\x00\x00\x00\x00\x00\x00=\x00\x00\x00\x00\x00\x00\x00>\x00\x00\x00\x00\x00\x00\x00?\x00\x00\x00\x00\x00\x00\x00@\x00\x00\x00\x00\x00\x00\x00A\x00\x00\x00\x00\x00\x00\x00B\x00\x00\x00\x00\x00\x00\x00C\x00\x00\x00\x00\x00\x00\x00D\x00\x00\x00\x00\x00\x00\x00E\x00\x00\x00\x00\x00\x00\x00F\x00\x00\x00\x00\x00\x00\x00G\x00\x00\x00\x00\x00\x00\x00H\x00\x00\x00\x00\x00\x00\x00I\x00\x00\x00\x00\x00\x00\x00J\x00\x00\x00\x00\x00\x00\x00K\x00\x00\x00\x00\x00\x00\x00L\x00\x00\x00\x00\x00\x00\x00M\x00\x00\x00\x00\x00\x00\x00N\x00\x00\x00\x00\x00\x00\x00O\x00\x00\x00\x00\x00\x00\x00P\x00\x00\x00\x00\x00\x00\x00Q\x00\x00\x00\x00\x00\x00\x00R\x00\x00\x00\x00\x00\x00\x00S\x00\x00\x00\x00\x00\x00\x00T\x00\x00\x00\x00\x00\x00\x00U\x00\x00\x00\x00\x00\x00\x00V\x00\x00\x00\x00\x00\x00\x00W\x00\x00\x00\x00\x00\x00\x00X\x00\x00\x00\x00\x00\x00\x00Y\x00\x00\x00\x00\x00\x00\x00Z\x00\x00\x00\x00\x00\x00\x00[\x00\x00\x00\x00\x00\x00\x00\\\x00\x00\x00\x00\x00\x00\x00]\x00\x00\x00\x00\x00\x00\x00^\x00\x00\x00\x00\x00\x00\x00_\x00\x00\x00\x00\x00\x00\x00`\x00\x00\x00\x00\x00\x00\x00a\x00\x00\x00\x00\x00\x00\x00b\x00\x00\x00\x00\x00\x00\x00c\x00\x00\x00\x00\x00\x00\x00d\x00\x00\x00\x00\x00\x00\x00e\x00\x00\x00\x00\x00\x00\x00f\x00\x00\x00\x00\x00\x00\x00g\x00\x00\x00\x00\x00\x00\x00h\x00\x00\x00\x00\x00\x00\x00i\x00\x00\x00\x00\x00\x00\x00j\x00\x00\x00\x00\x00\x00\x00k\x00\x00\x00\x00\x00\x00\x00l\x00\x00\x00\x00\x00\x00\x00m\x00\x00\x00\x00\x00\x00\x00n\x00\x00\x00\x00\x00\x00\x00o\x00\x00\x00\x00\x00\x00\x00p\x00\x00\x00\x00\x00\x00\x00q\x00\x00\x00\x00\x00\x00\x00r\x00\x00\x00\x00\x00\x00\x00s\x00\x00\x00\x00\x00\x00\x00t\x00\x00\x00\x00\x00\x00\x00u\x00\x00\x00\x00\x00\x00\x00v\x00\x00\x00\x00\x00\x00\x00w\x00\x00\x00\x00\x00\x00\x00x\x00\x00\x00\x00\x00\x00\x00y\x00\x00\x00\x00\x00\x00\x00z\x00\x00\x00\x00\x00\x00\x00{\x00\x00\x00\x00\x00\x00\x00|\x00\x00\x00\x00\x00\x00\x00}\x00\x00\x00\x00\x00\x00\x00~\x00\x00\x00\x00\x00\x00\x00\x7f\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x81\x00\x00\x00\x00\x00\x00\x00\x82\x00\x00\x00\x00\x00\x00\x00\x83\x00\x00\x00\x00\x00\x00\x00\x84\x00\x00\x00\x00\x00\x00\x00\x85\x00\x00\x00\x00\x00\x00\x00\x86\x00\x00\x00\x00\x00\x00\x00\x87\x00\x00\x00\x00\x00\x00\x00\x88\x00\x00\x00\x00\x00\x00\x00\x89\x00\x00\x00\x00\x00\x00\x00\x8a\x00\x00\x00\x00\x00\x00\x00\x8b\x00\x00\x00\x00\x00\x00\x00\x8c\x00\x00\x00\x00\x00\x00\x00\x8d\x00\x00\x00\x00\x00\x00\x00\x8e\x00\x00\x00\x00\x00\x00\x00\x8f\x00\x00\x00\x00\x00\x00\x00\x90\x00\x00\x00\x00\x00\x00\x00\x91\x00\x00\x00\x00\x00\x00\x00\x92\x00\x00\x00\x00\x00\x00\x00\x93\x00\x00\x00\x00\x00\x00\x00\x94\x00\x00\x00\x00\x00\x00\x00\x95\x00\x00\x00\x00\x00\x00\x00\x96\x00\x00\x00\x00\x00\x00\x00\x97\x00\x00\x00\x00\x00\x00\x00\x98\x00\x00\x00\x00\x00\x00\x00\x99\x00\x00\x00\x00\x00\x00\x00\x9a\x00\x00\x00\x00\x00\x00\x00\x9b\x00\x00\x00\x00\x00\x00\x00\x9c\x00\x00\x00\x00\x00\x00\x00\x9d\x00\x00\x00\x00\x00\x00\x00\x9e\x00\x00\x00\x00\x00\x00\x00\x9f\x00\x00\x00\x00\x00\x00\x00\xa0\x00\x00\x00\x00\x00\x00\x00\xa1\x00\x00\x00\x00\x00\x00\x00\xa2\x00\x00\x00\x00\x00\x00\x00\xa3\x00\x00\x00\x00\x00\x00\x00\xa4\x00\x00\x00\x00\x00\x00\x00\xa5\x00\x00\x00\x00\x00\x00\x00\xa6\x00\x00\x00\x00\x00\x00\x00\xa7\x00\x00\x00\x00\x00\x00\x00\xa8\x00\x00\x00\x00\x00\x00\x00\xa9\x00\x00\x00\x00\x00\x00\x00\xaa\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xac\x00\x00\x00\x00\x00\x00\x00\xad\x00\x00\x00\x00\x00\x00\x00\xae\x00\x00\x00\x00\x00\x00\x00\xaf\x00\x00\x00\x00\x00\x00\x00\xb0\x00\x00\x00\x00\x00\x00\x00\xb1\x00\x00\x00\x00\x00\x00\x00\xb2\x00\x00\x00\x00\x00\x00\x00\xb3\x00\x00\x00\x00\x00\x00\x00\xb4\x00\x00\x00\x00\x00\x00\x00\xb5\x00\x00\x00\x00\x00\x00\x00\xb6\x00\x00\x00\x00\x00\x00\x00\xb7\x00\x00\x00\x00\x00\x00\x00\xb8\x00\x00\x00\x00\x00\x00\x00\xb9\x00\x00\x00\x00\x00\x00\x00\xba\x00\x00\x00\x00\x00\x00\x00\xbb\x00\x00\x00\x00\x00\x00\x00\xbc\x00\x00\x00\x00\x00\x00\x00\xbd\x00\x00\x00\x00\x00\x00\x00\xbe\x00\x00\x00\x00\x00\x00\x00\xbf\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\xc1\x00\x00\x00\x00\x00\x00\x00\xc2\x00\x00\x00\x00\x00\x00\x00\xc3\x00\x00\x00\x00\x00\x00\x00\xc4\x00\x00\x00\x00\x00\x00\x00\xc5\x00\x00\x00\x00\x00\x00\x00\xc6\x00\x00\x00\x00\x00\x00\x00\xc7\x00\x00\x00\x00\x00\x00\x00\xc8\x00\x00\x00\x00\x00\x00\x00\xc9\x00\x00\x00\x00\x00\x00\x00\xca\x00\x00\x00\x00\x00\x00\x00\xcb\x00\x00\x00\x00\x00\x00\x00\xcc\x00\x00\x00\x00\x00\x00\x00\xcd\x00\x00\x00\x00\x00\x00\x00\xce\x00\x00\x00\x00\x00\x00\x00\xcf\x00\x00\x00\x00\x00\x00\x00\xd0\x00\x00\x00\x00\x00\x00\x00\xd1\x00\x00\x00\x00\x00\x00\x00\xd2\x00\x00\x00\x00\x00\x00\x00\xd3\x00\x00\x00\x00\x00\x00\x00\xd4\x00\x00\x00\x00\x00\x00\x00\xd5\x00\x00\x00\x00\x00\x00\x00\xd6\x00\x00\x00\x00\x00\x00\x00\xd7\x00\x00\x00\x00\x00\x00\x00\xd8\x00\x00\x00\x00\x00\x00\x00\xd9\x00\x00\x00\x00\x00\x00\x00\xda\x00\x00\x00\x00\x00\x00\x00\xdb\x00\x00\x00\x00\x00\x00\x00'
tbsg5051
I01
sg5052
I1
sg5053
I-1
sg5054
(lp5253
g1
(g5056
g5007
(dp5254
g60
g593
sg585
g586
stRp5255
ag1
(g5056
g5007
(dp5256
g60
g603
sg585
g597
stRp5257
ag1
(g5056
g5007
(dp5258
g60
g613
sg585
g607
stRp5259
ag1
(g5056
g5007
(dp5260
g60
g623
sg585
g617
stRp5261
ag1
(g5056
g5007
(dp5262
g60
g633
sg585
g627
stRp5263
ag1
(g5056
g5007
(dp5264
g60
g643
sg585
g637
stRp5265
ag1
(g5056
g5007
(dp5266
g60
g653
sg585
g647
stRp5267
ag1
(g5056
g5007
(dp5268
g60
g663
sg585
g657
stRp5269
ag1
(g5056
g5007
(dp5270
g60
g673
sg585
g667
stRp5271
ag1
(g5056
g5007
(dp5272
g60
g683
sg585
g677
stRp5273
ag1
(g5056
g5007
(dp5274
g60
g693
sg585
g687
stRp5275
ag1
(g5056
g5007
(dp5276
g60
g703
sg585
g697
stRp5277
ag1
(g5056
g5007
(dp5278
g60
g713
sg585
g707
stRp5279
ag1
(g5056
g5007
(dp5280
g60
g723
sg585
g717
stRp5281
ag1
(g5056
g5007
(dp5282
g60
g733
sg585
g727
stRp5283
ag1
(g5056
g5007
(dp5284
g60
g743
sg585
g737
stRp5285
ag1
(g5056
g5007
(dp5286
g60
g753
sg585
g747
stRp5287
ag1
(g5056
g5007
(dp5288
g60
g763
sg585
g757
stRp5289
ag1
(g5056
g5007
(dp5290
g60
g773
sg585
g767
stRp5291
ag1
(g5056
g5007
(dp5292
g60
g783
sg585
g777
stRp5293
ag1
(g5056
g5007
(dp5294
g60
g793
sg585
g787
stRp5295
ag1
(g5056
g5007
(dp5296
g60
g803
sg585
g797
stRp5297
ag1
(g5056
g5007
(dp5298
g60
g813
sg585
g807
stRp5299
ag1
(g5056
g5007
(dp5300
g60
g823
sg585
g817
stRp5301
ag1
(g5056
g5007
(dp5302
g60
g833
sg585
g827
stRp5303
ag1
(g5056
g5007
(dp5304
g60
g843
sg585
g837
stRp5305
ag1
(g5056
g5007
(dp5306
g60
g853
sg585
g847
stRp5307
ag1
(g5056
g5007
(dp5308
g60
g863
sg585
g857
stRp5309
ag1
(g5056
g5007
(dp5310
g60
g873
sg585
g867
stRp5311
ag1
(g5056
g5007
(dp5312
g60
g883
sg585
g877
stRp5313
ag1
(g5056
g5007
(dp5314
g60
g893
sg585
g887
stRp5315
ag1
(g5056
g5007
(dp5316
g60
g903
sg585
g897
stRp5317
ag1
(g5056
g5007
(dp5318
g60
g913
sg585
g907
stRp5319
ag1
(g5056
g5007
(dp5320
g60
g923
sg585
g917
stRp5321
ag1
(g5056
g5007
(dp5322
g60
g933
sg585
g927
stRp5323
ag1
(g5056
g5007
(dp5324
g60
g943
sg585
g937
stRp5325
ag1
(g5056
g5007
(dp5326
g60
g953
sg585
g947
stRp5327
ag1
(g5056
g5007
(dp5328
g60
g963
sg585
g957
stRp5329
ag1
(g5056
g5007
(dp5330
g60
g973
sg585
g967
stRp5331
ag1
(g5056
g5007
(dp5332
g60
g983
sg585
g977
stRp5333
ag1
(g5056
g5007
(dp5334
g60
g993
sg585
g987
stRp5335
ag1
(g5056
g5007
(dp5336
g60
g1003
sg585
g997
stRp5337
ag1
(g5056
g5007
(dp5338
g60
g1013
sg585
g1007
stRp5339
ag1
(g5056
g5007
(dp5340
g60
g1023
sg585
g1017
stRp5341
ag1
(g5056
g5007
(dp5342
g60
g1033
sg585
g1027
stRp5343
ag1
(g5056
g5007
(dp5344
g60
g1043
sg585
g1037
stRp5345
ag1
(g5056
g5007
(dp5346
g60
g1053
sg585
g1047
stRp5347
ag1
(g5056
g5007
(dp5348
g60
g1063
sg585
g1057
stRp5349
ag1
(g5056
g5007
(dp5350
g60
g1073
sg585
g1067
stRp5351
ag1
(g5056
g5007
(dp5352
g60
g1083
sg585
g1077
stRp5353
ag1
(g5056
g5007
(dp5354
g60
g1093
sg585
g1087
stRp5355
ag1
(g5056
g5007
(dp5356
g60
g1103
sg585
g1097
stRp5357
ag1
(g5056
g5007
(dp5358
g60
g1113
sg585
g1107
stRp5359
ag1
(g5056
g5007
(dp5360
g60
g1123
sg585
g1117
stRp5361
ag1
(g5056
g5007
(dp5362
g60
g1133
sg585
g1127
stRp5363
ag1
(g5056
g5007
(dp5364
g60
g1143
sg585
g1137
stRp5365
ag1
(g5056
g5007
(dp5366
g60
g1153
sg585
g1147
stRp5367
ag1
(g5056
g5007
(dp5368
g60
g1163
sg585
g1157
stRp5369
ag1
(g5056
g5007
(dp5370
g60
g1173
sg585
g1167
stRp5371
ag1
(g5056
g5007
(dp5372
g60
g1183
sg585
g1177
stRp5373
ag1
(g5056
g5007
(dp5374
g60
g1193
sg585
g1187
stRp5375
ag1
(g5056
g5007
(dp5376
g60
g1203
sg585
g1197
stRp5377
ag1
(g5056
g5007
(dp5378
g60
g1213
sg585
g1207
stRp5379
ag1
(g5056
g5007
(dp5380
g60
g1223
sg585
g1217
stRp5381
ag1
(g5056
g5007
(dp5382
g60
g1233
sg585
g1227
stRp5383
ag1
(g5056
g5007
(dp5384
g60
g1243
sg585
g1237
stRp5385
ag1
(g5056
g5007
(dp5386
g60
g1253
sg585
g1247
stRp5387
ag1
(g5056
g5007
(dp5388
g60
g1263
sg585
g1257
stRp5389
ag1
(g5056
g5007
(dp5390
g60
g1273
sg585
g1267
stRp5391
ag1
(g5056
g5007
(dp5392
g60
g1283
sg585
g1277
stRp5393
ag1
(g5056
g5007
(dp5394
g60
g1293
sg585
g1287
stRp5395
ag1
(g5056
g5007
(dp5396
g60
g1303
sg585
g1297
stRp5397
ag1
(g5056
g5007
(dp5398
g60
g1313
sg585
g1307
stRp5399
ag1
(g5056
g5007
(dp5400
g60
g1323
sg585
g1317
stRp5401
ag1
(g5056
g5007
(dp5402
g60
g1333
sg585
g1327
stRp5403
ag1
(g5056
g5007
(dp5404
g60
g1343
sg585
g1337
stRp5405
ag1
(g5056
g5007
(dp5406
g60
g1353
sg585
g1347
stRp5407
ag1
(g5056
g5007
(dp5408
g60
g1363
sg585
g1357
stRp5409
ag1
(g5056
g5007
(dp5410
g60
g1373
sg585
g1367
stRp5411
ag1
(g5056
g5007
(dp5412
g60
g1383
sg585
g1377
stRp5413
ag1
(g5056
g5007
(dp5414
g60
g1393
sg585
g1387
stRp5415
ag1
(g5056
g5007
(dp5416
g60
g1403
sg585
g1397
stRp5417
ag1
(g5056
g5007
(dp5418
g60
g1413
sg585
g1407
stRp5419
ag1
(g5056
g5007
(dp5420
g60
g1423
sg585
g1417
stRp5421
ag1
(g5056
g5007
(dp5422
g60
g1433
sg585
g1427
stRp5423
ag1
(g5056
g5007
(dp5424
g60
g1443
sg585
g1437
stRp5425
ag1
(g5056
g5007
(dp5426
g60
g1453
sg585
g1447
stRp5427
ag1
(g5056
g5007
(dp5428
g60
g1463
sg585
g1457
stRp5429
ag1
(g5056
g5007
(dp5430
g60
g1473
sg585
g1467
stRp5431
ag1
(g5056
g5007
(dp5432
g60
g1483
sg585
g1477
stRp5433
ag1
(g5056
g5007
(dp5434
g60
g1493
sg585
g1487
stRp5435
ag1
(g5056
g5007
(dp5436
g60
g1503
sg585
g1497
stRp5437
ag1
(g5056
g5007
(dp5438
g60
g1513
sg585
g1507
stRp5439
ag1
(g5056
g5007
(dp5440
g60
g1523
sg585
g1517
stRp5441
ag1
(g5056
g5007
(dp5442
g60
g1533
sg585
g1527
stRp5443
ag1
(g5056
g5007
(dp5444
g60
g1543
sg585
g1537
stRp5445
ag1
(g5056
g5007
(dp5446
g60
g1553
sg585
g1547
stRp5447
ag1
(g5056
g5007
(dp5448
g60
g1563
sg585
g1557
stRp5449
ag1
(g5056
g5007
(dp5450
g60
g1573
sg585
g1567
stRp5451
ag1
(g5056
g5007
(dp5452
g60
g1583
sg585
g1577
stRp5453
ag1
(g5056
g5007
(dp5454
g60
g1593
sg585
g1587
stRp5455
ag1
(g5056
g5007
(dp5456
g60
g1603
sg585
g1597
stRp5457
ag1
(g5056
g5007
(dp5458
g60
g1613
sg585
g1607
stRp5459
ag1
(g5056
g5007
(dp5460
g60
g1623
sg585
g1617
stRp5461
ag1
(g5056
g5007
(dp5462
g60
g1633
sg585
g1627
stRp5463
ag1
(g5056
g5007
(dp5464
g60
g1643
sg585
g1637
stRp5465
ag1
(g5056
g5007
(dp5466
g60
g1653
sg585
g1647
stRp5467
ag1
(g5056
g5007
(dp5468
g60
g1663
sg585
g1657
stRp5469
ag1
(g5056
g5007
(dp5470
g60
g1673
sg585
g1667
stRp5471
ag1
(g5056
g5007
(dp5472
g60
g1683
sg585
g1677
stRp5473
ag1
(g5056
g5007
(dp5474
g60
g1693
sg585
g1687
stRp5475
ag1
(g5056
g5007
(dp5476
g60
g1703
sg585
g1697
stRp5477
ag1
(g5056
g5007
(dp5478
g60
g1713
sg585
g1707
stRp5479
ag1
(g5056
g5007
(dp5480
g60
g1723
sg585
g1717
stRp5481
ag1
(g5056
g5007
(dp5482
g60
g1733
sg585
g1727
stRp5483
ag1
(g5056
g5007
(dp5484
g60
g1743
sg585
g1737
stRp5485
ag1
(g5056
g5007
(dp5486
g60
g1753
sg585
g1747
stRp5487
ag1
(g5056
g5007
(dp5488
g60
g1763
sg585
g1757
stRp5489
ag1
(g5056
g5007
(dp5490
g60
g1773
sg585
g1767
stRp5491
ag1
(g5056
g5007
(dp5492
g60
g1783
sg585
g1777
stRp5493
ag1
(g5056
g5007
(dp5494
g60
g1793
sg585
g1787
stRp5495
ag1
(g5056
g5007
(dp5496
g60
g1803
sg585
g1797
stRp5497
ag1
(g5056
g5007
(dp5498
g60
g1813
sg585
g1807
stRp5499
ag1
(g5056
g5007
(dp5500
g60
g1823
sg585
g1817
stRp5501
ag1
(g5056
g5007
(dp5502
g60
g1833
sg585
g1827
stRp5503
ag1
(g5056
g5007
(dp5504
g60
g1843
sg585
g1837
stRp5505
ag1
(g5056
g5007
(dp5506
g60
g1853
sg585
g1847
stRp5507
ag1
(g5056
g5007
(dp5508
g60
g1863
sg585
g1857
stRp5509
ag1
(g5056
g5007
(dp5510
g60
g1873
sg585
g1867
stRp5511
ag1
(g5056
g5007
(dp5512
g60
g1883
sg585
g1877
stRp5513
ag1
(g5056
g5007
(dp5514
g60
g1893
sg585
g1887
stRp5515
ag1
(g5056
g5007
(dp5516
g60
g1903
sg585
g1897
stRp5517
ag1
(g5056
g5007
(dp5518
g60
g1913
sg585
g1907
stRp5519
ag1
(g5056
g5007
(dp5520
g60
g1923
sg585
g1917
stRp5521
ag1
(g5056
g5007
(dp5522
g60
g1933
sg585
g1927
stRp5523
ag1
(g5056
g5007
(dp5524
g60
g1943
sg585
g1937
stRp5525
ag1
(g5056
g5007
(dp5526
g60
g1953
sg585
g1947
stRp5527
ag1
(g5056
g5007
(dp5528
g60
g1963
sg585
g1957
stRp5529
ag1
(g5056
g5007
(dp5530
g60
g1973
sg585
g1967
stRp5531
ag1
(g5056
g5007
(dp5532
g60
g1983
sg585
g1977
stRp5533
ag1
(g5056
g5007
(dp5534
g60
g1993
sg585
g1987
stRp5535
ag1
(g5056
g5007
(dp5536
g60
g2003
sg585
g1997
stRp5537
ag1
(g5056
g5007
(dp5538
g60
g2013
sg585
g2007
stRp5539
ag1
(g5056
g5007
(dp5540
g60
g2023
sg585
g2017
stRp5541
ag1
(g5056
g5007
(dp5542
g60
g2033
sg585
g2027
stRp5543
ag1
(g5056
g5007
(dp5544
g60
g2043
sg585
g2037
stRp5545
ag1
(g5056
g5007
(dp5546
g60
g2053
sg585
g2047
stRp5547
ag1
(g5056
g5007
(dp5548
g60
g2063
sg585
g2057
stRp5549
ag1
(g5056
g5007
(dp5550
g60
g2073
sg585
g2067
stRp5551
ag1
(g5056
g5007
(dp5552
g60
g2083
sg585
g2077
stRp5553
ag1
(g5056
g5007
(dp5554
g60
g2093
sg585
g2087
stRp5555
ag1
(g5056
g5007
(dp5556
g60
g2103
sg585
g2097
stRp5557
ag1
(g5056
g5007
(dp5558
g60
g2113
sg585
g2107
stRp5559
ag1
(g5056
g5007
(dp5560
g60
g2123
sg585
g2117
stRp5561
ag1
(g5056
g5007
(dp5562
g60
g2133
sg585
g2127
stRp5563
ag1
(g5056
g5007
(dp5564
g60
g2143
sg585
g2137
stRp5565
ag1
(g5056
g5007
(dp5566
g60
g2153
sg585
g2147
stRp5567
ag1
(g5056
g5007
(dp5568
g60
g2163
sg585
g2157
stRp5569
ag1
(g5056
g5007
(dp5570
g60
g2173
sg585
g2167
stRp5571
ag1
(g5056
g5007
(dp5572
g60
g2183
sg585
g2177
stRp5573
ag1
(g5056
g5007
(dp5574
g60
g2193
sg585
g2187
stRp5575
ag1
(g5056
g5007
(dp5576
g60
g2203
sg585
g2197
stRp5577
ag1
(g5056
g5007
(dp5578
g60
g2213
sg585
g2207
stRp5579
ag1
(g5056
g5007
(dp5580
g60
g2223
sg585
g2217
stRp5581
ag1
(g5056
g5007
(dp5582
g60
g2233
sg585
g2227
stRp5583
ag1
(g5056
g5007
(dp5584
g60
g2243
sg585
g2237
stRp5585
ag1
(g5056
g5007
(dp5586
g60
g2253
sg585
g2247
stRp5587
ag1
(g5056
g5007
(dp5588
g60
g2263
sg585
g2257
stRp5589
ag1
(g5056
g5007
(dp5590
g60
g2273
sg585
g2267
stRp5591
ag1
(g5056
g5007
(dp5592
g60
g2283
sg585
g2277
stRp5593
ag1
(g5056
g5007
(dp5594
g60
g2293
sg585
g2287
stRp5595
ag1
(g5056
g5007
(dp5596
g60
g2303
sg585
g2297
stRp5597
ag1
(g5056
g5007
(dp5598
g60
g2313
sg585
g2307
stRp5599
ag1
(g5056
g5007
(dp5600
g60
g2323
sg585
g2317
stRp5601
ag1
(g5056
g5007
(dp5602
g60
g2333
sg585
g2327
stRp5603
ag1
(g5056
g5007
(dp5604
g60
g2343
sg585
g2337
stRp5605
ag1
(g5056
g5007
(dp5606
g60
g2353
sg585
g2347
stRp5607
ag1
(g5056
g5007
(dp5608
g60
g2363
sg585
g2357
stRp5609
ag1
(g5056
g5007
(dp5610
g60
g2373
sg585
g2367
stRp5611
ag1
(g5056
g5007
(dp5612
g60
g2383
sg585
g2377
stRp5613
ag1
(g5056
g5007
(dp5614
g60
g2393
sg585
g2387
stRp5615
ag1
(g5056
g5007
(dp5616
g60
g2403
sg585
g2397
stRp5617
ag1
(g5056
g5007
(dp5618
g60
g2413
sg585
g2407
stRp5619
ag1
(g5056
g5007
(dp5620
g60
g2423
sg585
g2417
stRp5621
ag1
(g5056
g5007
(dp5622
g60
g2433
sg585
g2427
stRp5623
ag1
(g5056
g5007
(dp5624
g60
g2443
sg585
g2437
stRp5625
ag1
(g5056
g5007
(dp5626
g60
g2453
sg585
g2447
stRp5627
ag1
(g5056
g5007
(dp5628
g60
g2463
sg585
g2457
stRp5629
ag1
(g5056
g5007
(dp5630
g60
g2473
sg585
g2467
stRp5631
ag1
(g5056
g5007
(dp5632
g60
g2483
sg585
g2477
stRp5633
ag1
(g5056
g5007
(dp5634
g60
g2493
sg585
g2487
stRp5635
ag1
(g5056
g5007
(dp5636
g60
g2503
sg585
g2497
stRp5637
ag1
(g5056
g5007
(dp5638
g60
g2513
sg585
g2507
stRp5639
ag1
(g5056
g5007
(dp5640
g60
g2523
sg585
g2517
stRp5641
ag1
(g5056
g5007
(dp5642
g60
g2533
sg585
g2527
stRp5643
ag1
(g5056
g5007
(dp5644
g60
g2543
sg585
g2537
stRp5645
ag1
(g5056
g5007
(dp5646
g60
g2553
sg585
g2547
stRp5647
ag1
(g5056
g5007
(dp5648
g60
g2563
sg585
g2557
stRp5649
ag1
(g5056
g5007
(dp5650
g60
g2573
sg585
g2567
stRp5651
ag1
(g5056
g5007
(dp5652
g60
g2583
sg585
g2577
stRp5653
ag1
(g5056
g5007
(dp5654
g60
g2593
sg585
g2587
stRp5655
ag1
(g5056
g5007
(dp5656
g60
g2603
sg585
g2597
stRp5657
ag1
(g5056
g5007
(dp5658
g60
g2613
sg585
g2607
stRp5659
ag1
(g5056
g5007
(dp5660
g60
g2623
sg585
g2617
stRp5661
ag1
(g5056
g5007
(dp5662
g60
g2633
sg585
g2627
stRp5663
ag1
(g5056
g5007
(dp5664
g60
g2643
sg585
g2637
stRp5665
ag1
(g5056
g5007
(dp5666
g60
g2653
sg585
g2647
stRp5667
ag1
(g5056
g5007
(dp5668
g60
g2663
sg585
g2657
stRp5669
ag1
(g5056
g5007
(dp5670
g60
g2673
sg585
g2667
stRp5671
ag1
(g5056
g5007
(dp5672
g60
g2683
sg585
g2677
stRp5673
ag1
(g5056
g5007
(dp5674
g60
g2693
sg585
g2687
stRp5675
ag1
(g5056
g5007
(dp5676
g60
g2703
sg585
g2697
stRp5677
ag1
(g5056
g5007
(dp5678
g60
g2713
sg585
g2707
stRp5679
ag1
(g5056
g5007
(dp5680
g60
g2723
sg585
g2717
stRp5681
ag1
(g5056
g5007
(dp5682
g60
g2733
sg585
g2727
stRp5683
ag1
(g5056
g5007
(dp5684
g60
g2743
sg585
g2737
stRp5685
ag1
(g5056
g5007
(dp5686
g60
g2753
sg585
g2747
stRp5687
ag1
(g5056
g5007
(dp5688
g60
g2763
sg585
g2757
stRp5689
ag1
(g5056
g5007
(dp5690
g60
g2773
sg585
g2767
stRp5691
ag1
(g5056
g5007
(dp5692
g60
g2783
sg585
g2777
stRp5693
asg5225
Nsg5226
g2779
sg5227
I220
sg5228
I0
sg5229
I220
sg5230
I01
sbag1
(g4994
g3
NtRp5694
(dp5695
g4997
V#!/usr/bin/env python2\u000a# -*- coding: utf-8 -*-\u000a\u000a"""\u000a ________    _______    ___       __           ________  ________   ________   _______    ________      \u000a|\u005c   ___  \u005c |\u005c  ___ \u005c  |\u005c  \u005c     |\u005c  \u005c        |\u005c  _____\u005c|\u005c   __  \u005c |\u005c   ____\u005c |\u005c  ___ \u005c  |\u005c   ____\u005c     \u000a\u005c \u005c  \u005c\u005c \u005c  \u005c\u005c \u005c   __/| \u005c \u005c  \u005c    \u005c \u005c  \u005c       \u005c \u005c  \u005c__/ \u005c \u005c  \u005c|\u005c  \u005c\u005c \u005c  \u005c___| \u005c \u005c   __/| \u005c \u005c  \u005c___|_    \u000a \u005c \u005c  \u005c\u005c \u005c  \u005c\u005c \u005c  \u005c_|/__\u005c \u005c  \u005c  __\u005c \u005c  \u005c       \u005c \u005c   __\u005c \u005c \u005c   __  \u005c\u005c \u005c  \u005c     \u005c \u005c  \u005c_|/__\u005c \u005c_____  \u005c   \u000a  \u005c \u005c  \u005c\u005c \u005c  \u005c\u005c \u005c  \u005c_|\u005c \u005c\u005c \u005c  \u005c|\u005c__\u005c_\u005c  \u005c       \u005c \u005c  \u005c_|  \u005c \u005c  \u005c \u005c  \u005c\u005c \u005c  \u005c____ \u005c \u005c  \u005c_|\u005c \u005c\u005c|____|\u005c  \u005c  \u000a   \u005c \u005c__\u005c\u005c \u005c__\u005c\u005c \u005c_______\u005c\u005c \u005c____________\u005c       \u005c \u005c__\u005c    \u005c \u005c__\u005c \u005c__\u005c\u005c \u005c_______\u005c\u005c \u005c_______\u005c ____\u005c_\u005c  \u005c \u000a    \u005c|__| \u005c|__| \u005c|_______| \u005c|____________|        \u005c|__|     \u005c|__|\u005c|__| \u005c|_______| \u005c|_______||\u005c_________\u005c\u000a                                                                                            \u005c|_________|\u000a"""\u000a\u000a\u000afrom __future__ import division  # so that 1/3=0.333 instead of 1/3=0\u000afrom psychopy import visual, core, data, event, logging, sound, gui\u000afrom psychopy.constants import *  # things like STARTED, FINISHED\u000aimport numpy as np  # whole numpy lib is available, prepend 'np.'\u000afrom numpy import sin, cos, tan, log, log10, pi, average, sqrt, std, deg2rad, rad2deg, linspace, asarray\u000afrom numpy.random import random, randint, normal, shuffle\u000aimport os  # handy system and path functions\u000a\u000a# Ensure that relative paths start from the same directory as this script\u000a_thisDir = os.path.dirname(os.path.abspath(__file__))\u000aos.chdir(_thisDir)\u000a\u000a# Store info about the experiment session\u000aexpName = 'facesParametric'  # from the Builder filename that created this script\u000aexpInfo = {u'participant': u'', u'group': u''}\u000adlg = gui.DlgFromDict(dictionary=expInfo, title=expName)\u000aif dlg.OK == False: core.quit()  # user pressed cancel\u000aexpInfo['date'] = data.getDateStr()  # add a simple timestamp\u000aexpInfo['expName'] = expName\u000a\u000a# Check whether the chosen participant number is valid\u000amyDlg = gui.Dlg(title="FEHLER")\u000amyDlg.addText(u'Vp-Nnummer zwischen 1 und 100 eingeben')\u000aassert len(str(expInfo['participant'])) > 0, myDlg.show()\u000atry:\u000a    assert int(expInfo['participant']) in range(1,101), myDlg.show()\u000aexcept:\u000a    myDlg.show()\u000a\u000a# Check whether a group membership has been defined\u000amyDlg = gui.Dlg(title="FEHLER")\u000amyDlg.addText(u'Gruppenzugehoerigkeit angeben')\u000aassert len(str(expInfo['group'])) > 0, myDlg.show()\u000a\u000a# Here, we check if the number of the current participant\u000a# is odd or even, and we swap the button order accordingly\u000a# (this also affects the result computation, so the 'angry'\u000a# button is different for the two versions)\u000a\u000aif int(expInfo['participant'])%2 == 1:\u000a    # odd participant numbers have buttons assigned fear-anger\u000a    mainInstructText = u'Im nachfolgenden Experiment werden Sie nacheinander einzelne Gesichter sehen.\u005cnSie m\u005cxfcssen jeweils entscheiden, ob das gezeigt Gesicht einen\u005cn\u005cxc4NGSTLICHEN oder \u005cxc4RGERLICHEN Ausdruck hat.\u005cn\u005cnEntscheiden Sie sich bei jedem gezeigten Gesicht f\u005cxfcr einen der beiden m\u005cxf6glichen Emotionsausdr\u005cxfccke.'\u000a    buttonInstructText = u'Dr\u005cxfccken Sie die LINKE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4NGSTLICH ist.\u005cn\u005cnDr\u005cxfccken Sie die RECHTE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4RGERLICH ist.'\u000a    # angry judgement on right mouse button\u000a    targetButton = 2\u000aelse:\u000a    # even participant numbers have button assigments anger-fear\u000a    mainInstructText = u'Im nachfolgenden Experiment werden Sie nacheinander einzelne Gesichter sehen.\u005cnSie m\u005cxfcssen jeweils entscheiden, ob das gezeigt Gesicht einen\u005cn \u005cxc4RGERLICHEN oder \u005cxc4NGSTLICHEN Ausdruck hat.\u005cn\u005cnEntscheiden Sie sich bei jedem gezeigten Gesicht f\u005cxfcr einen der beiden m\u005cxf6glichen Emotionsausdr\u005cxfccke.'\u000a    buttonInstructText = u'Dr\u005cxfccken Sie die LINKE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4RGERLICH ist.\u005cn\u005cnDr\u005cxfccken Sie die RECHTE Maustaste,\u005cnwenn das Gesicht eher \u005cxc4NGSTLICH ist.'\u000a    # angry judgement on left mouse button\u000a    targetButton = 0\u000a\u000a# from the number defined in the prompt window, we derive\u000a# which array files (pt1 & pt2) should be fetched for the\u000a# current participant (this works for number from 1 to 999,\u000a# but of course the array file must also exist!)\u000a\u000athisParticipant = 'arrays/p'+ ('00' + str(expInfo['participant']))[-3:]\u000apt1Conditions = thisParticipant +'pt1.csv'\u000apt2Conditions = thisParticipant +'pt2.csv'\u000a\u000acountDict = {}\u000ahitsDict = {}\u000a\u000a\u000a# Data file name stem = absolute path + name; later add .psyexp, .csv, .log, etc\u000afilename = _thisDir + os.sep + 'data/%s_%s_%s_%s' %(expInfo['group'],expInfo['participant'], expName, expInfo['date'])\u000a\u000a# An ExperimentHandler isn't essential but helps with data saving\u000athisExp = data.ExperimentHandler(name=expName, version='',\u000a    extraInfo=expInfo, runtimeInfo=None,\u000a    originPath=None,\u000a    savePickle=True, saveWideText=True,\u000a    dataFileName=filename)\u000a#save a log file for detail verbose info\u000alogFile = logging.LogFile(filename+'.log', level=logging.EXP)\u000alogging.console.setLevel(logging.WARNING)  # this outputs to the screen, not a file\u000a\u000aendExpNow = False  # flag for 'escape' or other condition => quit the exp\u000a\u000a# Start Code - component code to be run before the window creation\u000a\u000a# Setup the Window\u000awin = visual.Window(size=[1600, 900], fullscr=True, screen=0, allowGUI=True, allowStencil=False,\u000a    monitor='testMonitor', color='black', colorSpace='rgb',\u000a    blendMode='avg', useFBO=True,\u000a    units='cm')\u000a# store frame rate of monitor if we can measure it successfully\u000aexpInfo['frameRate']=win.getActualFrameRate()\u000aif expInfo['frameRate']!=None:\u000a    frameDur = 1.0/round(expInfo['frameRate'])\u000aelse:\u000a    frameDur = 1.0/60.0 # couldn't get a reliable measure so guess\u000a\u000a# Initialize components for Routine "mainInstruct"\u000amainInstructClock = core.Clock()\u000amainText = visual.TextStim(win=win, ori=0, name='mainText',\u000a    text=mainInstructText,    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "buttonInstruct"\u000abuttonInstructClock = core.Clock()\u000abuttonText = visual.TextStim(win=win, ori=0, name='buttonText',\u000a    text=buttonInstructText,    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "startScreen"\u000astartScreenClock = core.Clock()\u000astartText = visual.TextStim(win=win, ori=0, name='startText',\u000a    text=u'Falls Sie noch Fragen haben,\u005cnwenden Sie sich bitte an die Versuchsleiterin.\u005cn\u005cnWeiter mit ENTER.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "mainTrial"\u000amainTrialClock = core.Clock()\u000afaceImg = visual.ImageStim(win=win, name='faceImg',\u000a    image='sin', mask=None,\u000a    ori=0, pos=[0, 0], size=[10.12,13.72],\u000a    color=[1,1,1], colorSpace='rgb', opacity=1,\u000a    flipHoriz=False, flipVert=False,\u000a    texRes=128, interpolate=True, depth=0.0)\u000amouseResp = event.Mouse(win=win,visible=False)\u000ax, y = [None, None]\u000a\u000a# Initialize components for Routine "forcedPause"\u000aforcedPauseClock = core.Clock()\u000apauseText = visual.TextStim(win=win, ori=0, name='pauseText',\u000a    text=u'Zeit f\u005cxfcr eine kurze Pause.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "resumeExperiment"\u000aresumeExperimentClock = core.Clock()\u000aresumeText = visual.TextStim(win=win, ori=0, name='resumeText',\u000a    text='Weiter mit ENTER.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "mainTrial"\u000amainTrialClock = core.Clock()\u000afaceImg = visual.ImageStim(win=win, name='faceImg',\u000a    image='sin', mask=None,\u000a    ori=0, pos=[0, 0], size=[10.12,13.72],\u000a    color=[1,1,1], colorSpace='rgb', opacity=1,\u000a    flipHoriz=False, flipVert=False,\u000a    texRes=128, interpolate=True, depth=0.0)\u000amouseResp = event.Mouse(win=win,visible=False)\u000ax, y = [None, None]\u000a\u000a# Initialize components for Routine "endInstruct"\u000aendInstructClock = core.Clock()\u000aendText = visual.TextStim(win=win, ori=0, name='endText',\u000a    text=u'Dieser Teil des Experiments ist nun zu Ende.\u005cnVielen Dank!\u005cn\u005cnWenden Sie sich bitte an die Versuchsleiterin.',    font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a\u000a\u000a################################ BASIC EMOZ ##\u000a\u000a\u000a# Initialize components for Routine "basicInstruct"\u000abasicInstructClock = core.Clock()\u000atext = visual.TextStim(win=win, ori=0, name='text',\u000a    text=u"Im nachfolgenden Experiment werden Sie nacheinander einzelne Gesichter sehen.\u005cn\u005cnSie m\u005cxfcssen jeweils entscheiden, welchen Ausdruck das gezeigte Gesicht hat.\u005cn\u005cnZur Auswahl stehen Ihnen hierbei die folgenden M\u005cxf6glichkeiten:\u005cnFreude\u005cnAngst\u005cn\u005cxc4rger\u005cnTrauer\u005cnEkel\u005cn\u005cxdcberraschung\u005cnNeutral\u005cn\u005cnEntscheiden Sie sich bei jedem gezeigten Gesicht f\u005cxfcr einen der \u005cnm\u005cxf6glichen Gesichtsausdr\u005cxfccke.",    font='Arial',\u000a    pos=[0, 0], height=0.8, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a# Initialize components for Routine "basicTrial"\u000abasicTrialClock = core.Clock()\u000abasicImage = visual.ImageStim(win=win, name='basicImage',\u000a    image='sin', mask=None,\u000a    ori=0, pos=[0, 3], size=[10.12,13.72],\u000a    color=[1,1,1], colorSpace='rgb', opacity=1,\u000a    flipHoriz=False, flipVert=False,\u000a    texRes=128, interpolate=True, depth=0.0)\u000a\u000abasicRating1 = visual.RatingScale(win=win, name='basicRating1', marker=u'hover', size=0.6, pos=[0.0, -0.5], choices=[u'Freude', u'Trauer'], tickHeight=-1, disappear=True)\u000abasicRating2 = visual.RatingScale(win=win, name='basicRating2', marker=u'hover', size=0.6, pos=[0.0, -0.6], choices=[u'Angst', u'\u005cxc4rger'], tickHeight=-1, singleClick=True, disappear=True)\u000abasicRating3 = visual.RatingScale(win=win, name='basicRating3', marker=u'hover', size=0.6, pos=[0.0, -0.7], choices=[u'Ekel', u'\u005cxdcberraschung'], tickHeight=-1, singleClick=True, disappear=True)\u000abasicRating4 = visual.RatingScale(win=win, name='basicRating4', marker=u'hover', size=0.6, pos=[0.0, -0.8], choices=[u' ',u'Neutral', u' '], tickHeight=-1, singleClick=True, disappear=True)\u000a\u000a# Initialize components for Routine "basicWait"\u000abasicWaitClock = core.Clock()\u000aISI = core.StaticPeriod(win=win, screenHz=expInfo['frameRate'], name='ISI')\u000a\u000a# Initialize components for Routine "basicEnd"\u000abasicEndClock = core.Clock()\u000atext_2 = visual.TextStim(win=win, ori=0, name='text_2',\u000a    text=u'Danke. Das war der erste Teil.\u005cnDr\u005cxfccken Sie ENTER um zum n\u005cxe4chsten Teil zu kommen',    font=u'Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a    \u000a    \u000a    \u000a    \u000a###############################################################################\u000a\u000a\u000a# Create some handy timers\u000aglobalClock = core.Clock()  # to track the time since experiment started\u000aroutineTimer = core.CountdownTimer()  # to track time remaining of each (non-slip) routine \u000a\u000a\u000a\u000a\u000a#############################################\u000a\u000a\u000a\u000a#------Prepare to start Routine "basicInstruct"-------\u000at = 0\u000abasicInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_2 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_2.status = NOT_STARTED\u000a# keep track of which components have finished\u000abasicInstructComponents = []\u000abasicInstructComponents.append(text)\u000abasicInstructComponents.append(key_resp_2)\u000afor thisComponent in basicInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "basicInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = basicInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *text* updates\u000a    if t >= 0.0 and text.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        text.tStart = t  # underestimates by a little under one frame\u000a        text.frameNStart = frameN  # exact frame index\u000a        text.setAutoDraw(True)\u000a    \u000a    # *key_resp_2* updates\u000a    if t >= 0.0 and key_resp_2.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_2.tStart = t  # underestimates by a little under one frame\u000a        key_resp_2.frameNStart = frameN  # exact frame index\u000a        key_resp_2.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_2.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_2.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_2.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_2.rt = key_resp_2.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in basicInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "basicInstruct"-------\u000afor thisComponent in basicInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_2.keys in ['', [], None]:  # No response was made\u000a   key_resp_2.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_2.keys',key_resp_2.keys)\u000aif key_resp_2.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_2.rt', key_resp_2.rt)\u000athisExp.nextEntry()\u000a# the Routine "basicInstruct" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a# set up handler to look after randomisation of conditions etc\u000abasicLoop = data.TrialHandler(nReps=1, method='fullRandom', \u000a    extraInfo=expInfo, originPath=None,\u000a    trialList=data.importConditions('./arrays/imgList.csv'),\u000a    seed=None, name='basicLoop')\u000athisExp.addLoop(basicLoop)  # add the loop to the experiment\u000athisBasicLoop = basicLoop.trialList[0]  # so we can initialise stimuli with some values\u000a# abbreviate parameter names if possible (e.g. rgb=thisBasicLoop.rgb)\u000aif thisBasicLoop != None:\u000a    for paramName in thisBasicLoop.keys():\u000a        exec(paramName + '= thisBasicLoop.' + paramName)\u000a\u000afor thisBasicLoop in basicLoop:\u000a    currentLoop = basicLoop\u000a    # abbreviate parameter names if possible (e.g. rgb = thisBasicLoop.rgb)\u000a    if thisBasicLoop != None:\u000a        for paramName in thisBasicLoop.keys():\u000a            exec(paramName + '= thisBasicLoop.' + paramName)\u000a    \u000a    #------Prepare to start Routine "basicTrial"-------\u000a    \u000a    \u000a    ###########\u000a    # resetting the rating scales each time, so that the last response isnt visible\u000a    \u000a    basicRating1 = visual.RatingScale(win=win, name='basicRating1', marker=u'hover', size=0.6, pos=[0.0, -0.5], choices=[u'Freude', u'Trauer'], tickHeight=-1, disappear=True)\u000a    basicRating2 = visual.RatingScale(win=win, name='basicRating2', marker=u'hover', size=0.6, pos=[0.0, -0.6], choices=[u'Angst', u'\u005cxc4rger'], tickHeight=-1, singleClick=True, disappear=True)\u000a    basicRating3 = visual.RatingScale(win=win, name='basicRating3', marker=u'hover', size=0.6, pos=[0.0, -0.7], choices=[u'Ekel', u'\u005cxdcberraschung'], tickHeight=-1, singleClick=True, disappear=True)\u000a    basicRating4 = visual.RatingScale(win=win, name='basicRating4', marker=u'hover', size=0.6, pos=[0.0, -0.8], choices=[u' ',u'Neutral', u' '], tickHeight=-1, singleClick=True, disappear=True)\u000a\u000a    ###########\u000a    \u000a    t = 0\u000a    basicTrialClock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    basicImage.setImage(img)\u000a    basicRating1.reset()\u000a    basicRating2.reset()\u000a    basicRating3.reset()\u000a    basicRating4.reset()\u000a    # keep track of which components have finished\u000a    basicTrialComponents = []\u000a    basicTrialComponents.append(basicImage)\u000a    basicTrialComponents.append(basicRating1)\u000a    basicTrialComponents.append(basicRating2)\u000a    basicTrialComponents.append(basicRating3)\u000a    basicTrialComponents.append(basicRating4)\u000a    for thisComponent in basicTrialComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    \u000a    # ugly hack: the labels need to be renamed as the "umlaute" cannot be saved to csv \u000a    basicRating1.choices = ['HAP', 'SAD']\u000a    basicRating2.choices = ['FEA', 'ANG']\u000a    basicRating3.choices = ['DIS', 'SUP']\u000a    basicRating4.choices = ['dummy','NTR', 'dummy']\u000a    #-------Start Routine "basicTrial"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = basicTrialClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        # *basicImage* updates\u000a        if t >= 0 and basicImage.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicImage.tStart = t  # underestimates by a little under one frame\u000a            basicImage.frameNStart = frameN  # exact frame index\u000a            basicImage.setAutoDraw(True)\u000a        if basicImage.status == STARTED and t >= (0 + (4.0-win.monitorFramePeriod*0.75)): #most of one frame period left\u000a            basicImage.setAutoDraw(False)\u000a        # *basicRating1* updates\u000a        if t >= 0.5 and basicRating1.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating1.tStart = t  # underestimates by a little under one frame\u000a            basicRating1.frameNStart = frameN  # exact frame index\u000a            basicRating1.setAutoDraw(True)\u000a        continueRoutine &= basicRating1.noResponse  # a response ends the trial\u000a        # *basicRating2* updates\u000a        if t >= 0.5 and basicRating2.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating2.tStart = t  # underestimates by a little under one frame\u000a            basicRating2.frameNStart = frameN  # exact frame index\u000a            basicRating2.setAutoDraw(True)\u000a        continueRoutine &= basicRating2.noResponse  # a response ends the trial\u000a        # *basicRating3* updates\u000a        if t >= 0.5 and basicRating3.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating3.tStart = t  # underestimates by a little under one frame\u000a            basicRating3.frameNStart = frameN  # exact frame index\u000a            basicRating3.setAutoDraw(True)\u000a        continueRoutine &= basicRating3.noResponse  # a response ends the trial\u000a        # *basicRating4* updates\u000a        if t >= 0.5 and basicRating4.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            basicRating4.tStart = t  # underestimates by a little under one frame\u000a            basicRating4.frameNStart = frameN  # exact frame index\u000a            basicRating4.setAutoDraw(True)\u000a        continueRoutine &= basicRating4.noResponse  # a response ends the trial\u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in basicTrialComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "basicTrial"-------\u000a    for thisComponent in basicTrialComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating1.response', basicRating1.getRating())\u000a    basicLoop.addData('basicRating1.rt', basicRating1.getRT())\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating2.response', basicRating2.getRating())\u000a    basicLoop.addData('basicRating2.rt', basicRating2.getRT())\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating3.response', basicRating3.getRating())\u000a    basicLoop.addData('basicRating3.rt', basicRating3.getRT())\u000a    # store data for basicLoop (TrialHandler)\u000a    basicLoop.addData('basicRating4.response', basicRating4.getRating())\u000a    basicLoop.addData('basicRating4.rt', basicRating4.getRT())\u000a    # the Routine "basicTrial" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    \u000a    #------Prepare to start Routine "basicWait"-------\u000a    t = 0\u000a    basicWaitClock.reset()  # clock \u000a    frameN = -1\u000a    routineTimer.add(0.500000)\u000a    # update component parameters for each repeat\u000a    # keep track of which components have finished\u000a    basicWaitComponents = []\u000a    basicWaitComponents.append(ISI)\u000a    for thisComponent in basicWaitComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "basicWait"-------\u000a    continueRoutine = True\u000a    while continueRoutine and routineTimer.getTime() > 0:\u000a        # get current time\u000a        t = basicWaitClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        # *ISI* period\u000a        if t >= 0.0 and ISI.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            ISI.tStart = t  # underestimates by a little under one frame\u000a            ISI.frameNStart = frameN  # exact frame index\u000a            ISI.start(0.5)\u000a        elif ISI.status == STARTED: #one frame should pass before updating params and completing\u000a            ISI.complete() #finish the static period\u000a        \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in basicWaitComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "basicWait"-------\u000a    for thisComponent in basicWaitComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    thisExp.nextEntry()\u000a    \u000a# completed 1 repeats of 'basicLoop'\u000a\u000a\u000a#------Prepare to start Routine "basicEnd"-------\u000at = 0\u000abasicEndClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_3 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_3.status = NOT_STARTED\u000a# keep track of which components have finished\u000abasicEndComponents = []\u000abasicEndComponents.append(text_2)\u000abasicEndComponents.append(key_resp_3)\u000afor thisComponent in basicEndComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "basicEnd"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = basicEndClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *text_2* updates\u000a    if t >= 0.0 and text_2.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        text_2.tStart = t  # underestimates by a little under one frame\u000a        text_2.frameNStart = frameN  # exact frame index\u000a        text_2.setAutoDraw(True)\u000a    \u000a    # *key_resp_3* updates\u000a    if t >= 0.0 and key_resp_3.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_3.tStart = t  # underestimates by a little under one frame\u000a        key_resp_3.frameNStart = frameN  # exact frame index\u000a        key_resp_3.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_3.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_3.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_3.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_3.rt = key_resp_3.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in basicEndComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "basicEnd"-------\u000afor thisComponent in basicEndComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_3.keys in ['', [], None]:  # No response was made\u000a   key_resp_3.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_3.keys',key_resp_3.keys)\u000aif key_resp_3.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_3.rt', key_resp_3.rt)\u000athisExp.nextEntry()\u000a# the Routine "basicEnd" was not non-slip safe, so reset the non-slip timer\u000a#routineTimer.reset()\u000a#win.close()\u000a#core.quit()\u000a\u000a\u000a##############################################\u000amouseResp = event.Mouse(win=win,visible=False)\u000a\u000a\u000a#------Prepare to start Routine "mainInstruct"-------\u000at = 0\u000amainInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_2 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_2.status = NOT_STARTED\u000a# keep track of which components have finished\u000amainInstructComponents = []\u000amainInstructComponents.append(mainText)\u000amainInstructComponents.append(key_resp_2)\u000afor thisComponent in mainInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "mainInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = mainInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *mainText* updates\u000a    if t >= 0.0 and mainText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        mainText.tStart = t  # underestimates by a little under one frame\u000a        mainText.frameNStart = frameN  # exact frame index\u000a        mainText.setAutoDraw(True)\u000a    \u000a    # *key_resp_2* updates\u000a    if t >= 0.0 and key_resp_2.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_2.tStart = t  # underestimates by a little under one frame\u000a        key_resp_2.frameNStart = frameN  # exact frame index\u000a        key_resp_2.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_2.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_2.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space', 'return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_2.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_2.rt = key_resp_2.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in mainInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "mainInstruct"-------\u000afor thisComponent in mainInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_2.keys in ['', [], None]:  # No response was made\u000a   key_resp_2.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_2.keys',key_resp_2.keys)\u000aif key_resp_2.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_2.rt', key_resp_2.rt)\u000athisExp.nextEntry()\u000a# the Routine "mainInstruct" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a#------Prepare to start Routine "buttonInstruct"-------\u000at = 0\u000abuttonInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_3 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_3.status = NOT_STARTED\u000a# keep track of which components have finished\u000abuttonInstructComponents = []\u000abuttonInstructComponents.append(buttonText)\u000abuttonInstructComponents.append(key_resp_3)\u000afor thisComponent in buttonInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "buttonInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = buttonInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *buttonText* updates\u000a    if t >= 0.0 and buttonText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        buttonText.tStart = t  # underestimates by a little under one frame\u000a        buttonText.frameNStart = frameN  # exact frame index\u000a        buttonText.setAutoDraw(True)\u000a    \u000a    # *key_resp_3* updates\u000a    if t >= 0.0 and key_resp_3.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_3.tStart = t  # underestimates by a little under one frame\u000a        key_resp_3.frameNStart = frameN  # exact frame index\u000a        key_resp_3.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_3.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_3.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space', 'return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_3.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_3.rt = key_resp_3.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in buttonInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "buttonInstruct"-------\u000afor thisComponent in buttonInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_3.keys in ['', [], None]:  # No response was made\u000a   key_resp_3.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_3.keys',key_resp_3.keys)\u000aif key_resp_3.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_3.rt', key_resp_3.rt)\u000athisExp.nextEntry()\u000a# the Routine "buttonInstruct" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a#------Prepare to start Routine "startScreen"-------\u000at = 0\u000astartScreenClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_4 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_4.status = NOT_STARTED\u000a# keep track of which components have finished\u000astartScreenComponents = []\u000astartScreenComponents.append(startText)\u000astartScreenComponents.append(key_resp_4)\u000afor thisComponent in startScreenComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "startScreen"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = startScreenClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *startText* updates\u000a    if t >= 0.0 and startText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        startText.tStart = t  # underestimates by a little under one frame\u000a        startText.frameNStart = frameN  # exact frame index\u000a        startText.setAutoDraw(True)\u000a    \u000a    # *key_resp_4* updates\u000a    if t >= 0.0 and key_resp_4.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_4.tStart = t  # underestimates by a little under one frame\u000a        key_resp_4.frameNStart = frameN  # exact frame index\u000a        key_resp_4.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_4.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_4.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_4.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_4.rt = key_resp_4.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in startScreenComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "startScreen"-------\u000afor thisComponent in startScreenComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_4.keys in ['', [], None]:  # No response was made\u000a   key_resp_4.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_4.keys',key_resp_4.keys)\u000aif key_resp_4.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_4.rt', key_resp_4.rt)\u000athisExp.nextEntry()\u000a# the Routine "startScreen" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a# set up handler to look after randomisation of conditions etc\u000atrials = data.TrialHandler(nReps=1, method='sequential', \u000a    extraInfo=expInfo, originPath=None,\u000a    trialList=data.importConditions(pt1Conditions),\u000a    seed=None, name='trials')\u000athisExp.addLoop(trials)  # add the loop to the experiment\u000athisTrial = trials.trialList[0]  # so we can initialise stimuli with some values\u000a# abbreviate parameter names if possible (e.g. rgb=thisTrial.rgb)\u000aif thisTrial != None:\u000a    for paramName in thisTrial.keys():\u000a        exec(paramName + '= thisTrial.' + paramName)\u000a\u000afor thisTrial in trials:\u000a    currentLoop = trials\u000a    # abbreviate parameter names if possible (e.g. rgb = thisTrial.rgb)\u000a    if thisTrial != None:\u000a        for paramName in thisTrial.keys():\u000a            exec(paramName + '= thisTrial.' + paramName)\u000a\u000a    #------Prepare to start Routine "mainTrial"-------\u000a    t = 0\u000a    mainTrialClock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    faceImg.setImage(img)\u000a    # setup some python lists for storing info about the mouseResp\u000a    mouseResp.x = []\u000a    mouseResp.y = []\u000a    mouseResp.leftButton = []\u000a    mouseResp.midButton = []\u000a    mouseResp.rightButton = []\u000a    mouseResp.time = []\u000a    # keep track of which components have finished\u000a    mainTrialComponents = []\u000a    mainTrialComponents.append(faceImg)\u000a    mainTrialComponents.append(mouseResp)\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "mainTrial"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = mainTrialClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        # *faceImg* updates\u000a        if t >= 0.0 and faceImg.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            faceImg.tStart = t  # underestimates by a little under one frame\u000a            faceImg.frameNStart = frameN  # exact frame index\u000a            faceImg.setAutoDraw(True)\u000a        # *mouseResp* updates\u000a        if t >= 0.3 and mouseResp.status == NOT_STARTED: ####################################\u000a            # keep track of start time/frame for later\u000a            mouseResp.tStart = t  # underestimates by a little under one frame\u000a            mouseResp.frameNStart = frameN  # exact frame index\u000a            mouseResp.status = STARTED\u000a            event.mouseButtons = [0, 0, 0]  # reset mouse buttons to be 'up'\u000a        if mouseResp.status == STARTED:  # only update if started and not stopped!\u000a            buttons = mouseResp.getPressed()\u000a            if sum([buttons[0],buttons[-1]]) > 0:  # ie if THE LEFT OR RIGHT BUTTON is pressed\u000a                x, y = mouseResp.getPos()\u000a                mouseResp.x.append(x)\u000a                mouseResp.y.append(y)\u000a                mouseResp.leftButton.append(buttons[0])\u000a                mouseResp.midButton.append(buttons[1])\u000a                mouseResp.rightButton.append(buttons[2])\u000a                mouseResp.time.append(mainTrialClock.getTime())\u000a                \u000a                \u000a                \u000a                \u000a                # add a counter\u000a                for morph in ['_00_','_01_','_02_','_03_','_04_','_05_','_06_','_07_','_08_','_09_','_10_']:\u000a                    if morph in img:\u000a                        try:\u000a                            countDict[morph] += 1\u000a                        except:\u000a                            countDict[morph] = 1\u000a                        if buttons[targetButton] == 1:\u000a                            try:\u000a                                hitsDict[morph]+=1\u000a                            except:\u000a                                hitsDict[morph]=1\u000a                                \u000a                # abort routine on response\u000a                continueRoutine = False\u000a                \u000a                # ADDED THE ESC COMMAND INTO THE LOOP, SO WE CAN QUIT ANYTIME\u000a                # check for quit (the Esc key)\u000a                if endExpNow or event.getKeys(keyList=["escape"]):\u000a                    core.quit()\u000a        \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in mainTrialComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "mainTrial"-------\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    # store data for trials (TrialHandler)\u000a    trials.addData('mouseResp.x', mouseResp.x[0])\u000a    trials.addData('mouseResp.y', mouseResp.y[0])\u000a    trials.addData('mouseResp.leftButton', mouseResp.leftButton[0])\u000a    trials.addData('mouseResp.midButton', mouseResp.midButton[0])\u000a    trials.addData('mouseResp.rightButton', mouseResp.rightButton[0])\u000a    trials.addData('mouseResp.time', mouseResp.time[0])\u000a    # the Routine "mainTrial" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    thisExp.nextEntry()\u000a    \u000a# completed 1 repeats of 'trials'\u000a\u000a\u000a#------Prepare to start Routine "forcedPause"-------\u000at = 0\u000aforcedPauseClock.reset()  # clock \u000aframeN = -1\u000aroutineTimer.add(30.000000)\u000a# update component parameters for each repeat\u000a# keep track of which components have finished\u000aforcedPauseComponents = []\u000aforcedPauseComponents.append(pauseText)\u000afor thisComponent in forcedPauseComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "forcedPause"-------\u000acontinueRoutine = True\u000awhile continueRoutine and routineTimer.getTime() > 0:\u000a    # get current time\u000a    t = forcedPauseClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *pauseText* updates\u000a    if t >= 0.0 and pauseText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        pauseText.tStart = t  # underestimates by a little under one frame\u000a        pauseText.frameNStart = frameN  # exact frame index\u000a        pauseText.setAutoDraw(True)\u000a    if pauseText.status == STARTED and t >= (0.0 + (30-win.monitorFramePeriod*0.75)): #most of one frame period left\u000a        pauseText.setAutoDraw(False)\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in forcedPauseComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "forcedPause"-------\u000afor thisComponent in forcedPauseComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a\u000a#------Prepare to start Routine "resumeExperiment"-------\u000at = 0\u000aresumeExperimentClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_5 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_5.status = NOT_STARTED\u000a# keep track of which components have finished\u000aresumeExperimentComponents = []\u000aresumeExperimentComponents.append(resumeText)\u000aresumeExperimentComponents.append(key_resp_5)\u000afor thisComponent in resumeExperimentComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "resumeExperiment"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = resumeExperimentClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *resumeText* updates\u000a    if t >= 0.0 and resumeText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        resumeText.tStart = t  # underestimates by a little under one frame\u000a        resumeText.frameNStart = frameN  # exact frame index\u000a        resumeText.setAutoDraw(True)\u000a    \u000a    # *key_resp_5* updates\u000a    if t >= 0.0 and key_resp_5.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_5.tStart = t  # underestimates by a little under one frame\u000a        key_resp_5.frameNStart = frameN  # exact frame index\u000a        key_resp_5.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_5.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_5.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_5.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_5.rt = key_resp_5.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in resumeExperimentComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "resumeExperiment"-------\u000afor thisComponent in resumeExperimentComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_5.keys in ['', [], None]:  # No response was made\u000a   key_resp_5.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_5.keys',key_resp_5.keys)\u000aif key_resp_5.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_5.rt', key_resp_5.rt)\u000athisExp.nextEntry()\u000a# the Routine "resumeExperiment" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000a\u000a# set up handler to look after randomisation of conditions etc\u000atrials2 = data.TrialHandler(nReps=1, method='sequential', \u000a    extraInfo=expInfo, originPath=None,\u000a    trialList=data.importConditions(pt2Conditions),\u000a    seed=None, name='trials2')\u000athisExp.addLoop(trials2)  # add the loop to the experiment\u000athisTrials2 = trials2.trialList[0]  # so we can initialise stimuli with some values\u000a# abbreviate parameter names if possible (e.g. rgb=thisTrials2.rgb)\u000aif thisTrials2 != None:\u000a    for paramName in thisTrials2.keys():\u000a        exec(paramName + '= thisTrials2.' + paramName)\u000a\u000afor thisTrials2 in trials2:\u000a    currentLoop = trials2\u000a    # abbreviate parameter names if possible (e.g. rgb = thisTrials2.rgb)\u000a    if thisTrials2 != None:\u000a        for paramName in thisTrials2.keys():\u000a            exec(paramName + '= thisTrials2.' + paramName)\u000a    \u000a    #------Prepare to start Routine "mainTrial"-------\u000a    t = 0\u000a    mainTrialClock.reset()  # clock \u000a    frameN = -1\u000a    # update component parameters for each repeat\u000a    faceImg.setImage(img)\u000a    # setup some python lists for storing info about the mouseResp\u000a    mouseResp.x = []\u000a    mouseResp.y = []\u000a    mouseResp.leftButton = []\u000a    mouseResp.midButton = []\u000a    mouseResp.rightButton = []\u000a    mouseResp.time = []\u000a    # keep track of which components have finished\u000a    mainTrialComponents = []\u000a    mainTrialComponents.append(faceImg)\u000a    mainTrialComponents.append(mouseResp)\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, 'status'):\u000a            thisComponent.status = NOT_STARTED\u000a    \u000a    #-------Start Routine "mainTrial"-------\u000a    continueRoutine = True\u000a    while continueRoutine:\u000a        # get current time\u000a        t = mainTrialClock.getTime()\u000a        frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a        # update/draw components on each frame\u000a        \u000a        # *faceImg* updates\u000a        if t >= 0.0 and faceImg.status == NOT_STARTED:\u000a            # keep track of start time/frame for later\u000a            faceImg.tStart = t  # underestimates by a little under one frame\u000a            faceImg.frameNStart = frameN  # exact frame index\u000a            faceImg.setAutoDraw(True)\u000a            \u000a        # *mouseResp* updates\u000a        if t >= 0.3 and mouseResp.status == NOT_STARTED: #############################################\u000a            # keep track of start time/frame for later\u000a            mouseResp.tStart = t  # underestimates by a little under one frame\u000a            mouseResp.frameNStart = frameN  # exact frame index\u000a            mouseResp.status = STARTED\u000a            event.mouseButtons = [0, 0, 0]  # reset mouse buttons to be 'up'\u000a        if mouseResp.status == STARTED:  # only update if started and not stopped!\u000a            buttons = mouseResp.getPressed()\u000a            if sum([buttons[0],buttons[-1]]) > 0:  # ie if any button is pressed\u000a                x, y = mouseResp.getPos()\u000a                mouseResp.x.append(x)\u000a                mouseResp.y.append(y)\u000a                mouseResp.leftButton.append(buttons[0])\u000a                mouseResp.midButton.append(buttons[1])\u000a                mouseResp.rightButton.append(buttons[2])\u000a                mouseResp.time.append(mainTrialClock.getTime())\u000a                \u000a                # add a counter\u000a                for morph in ['_00_','_01_','_02_','_03_','_04_','_05_','_06_','_07_','_08_','_09_','_10_']:\u000a                    if morph in img:\u000a                        try:\u000a                            countDict[morph] += 1\u000a                        except:\u000a                            countDict[morph] = 1\u000a                        if buttons[targetButton] == 1:\u000a                            try:\u000a                                hitsDict[morph]+=1\u000a                            except:\u000a                                hitsDict[morph]=1\u000a                    \u000a                # abort routine on response\u000a                continueRoutine = False\u000a        \u000a                # ADDED THE ESC COMMAND INTO THE LOOP, SO WE CAN QUIT ANYTIME\u000a                # check for quit (the Esc key)\u000a                if endExpNow or event.getKeys(keyList=["escape"]):\u000a                    core.quit()\u000a                    \u000a        # check if all components have finished\u000a        if not continueRoutine:  # a component has requested a forced-end of Routine\u000a            break\u000a        continueRoutine = False  # will revert to True if at least one component still running\u000a        for thisComponent in mainTrialComponents:\u000a            if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a                continueRoutine = True\u000a                break  # at least one component has not yet finished\u000a        \u000a        # check for quit (the Esc key)\u000a        if endExpNow or event.getKeys(keyList=["escape"]):\u000a            core.quit()\u000a        \u000a        # refresh the screen\u000a        if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a            win.flip()\u000a    \u000a    #-------Ending Routine "mainTrial"-------\u000a    for thisComponent in mainTrialComponents:\u000a        if hasattr(thisComponent, "setAutoDraw"):\u000a            thisComponent.setAutoDraw(False)\u000a    # store data for trials2 (TrialHandler)\u000a    trials2.addData('mouseResp.x', mouseResp.x[0])\u000a    trials2.addData('mouseResp.y', mouseResp.y[0])\u000a    trials2.addData('mouseResp.leftButton', mouseResp.leftButton[0])\u000a    trials2.addData('mouseResp.midButton', mouseResp.midButton[0])\u000a    trials2.addData('mouseResp.rightButton', mouseResp.rightButton[0])\u000a    trials2.addData('mouseResp.time', mouseResp.time[0])\u000a    \u000a    # the Routine "mainTrial" was not non-slip safe, so reset the non-slip timer\u000a    routineTimer.reset()\u000a    thisExp.nextEntry()\u000a    \u000a# completed 1 repeats of 'trials2'\u000a\u000a\u000a#------Prepare to start Routine "endInstruct"-------\u000at = 0\u000aendInstructClock.reset()  # clock \u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_6 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_6.status = NOT_STARTED\u000a# keep track of which components have finished\u000aendInstructComponents = []\u000aendInstructComponents.append(endText)\u000aendInstructComponents.append(key_resp_6)\u000afor thisComponent in endInstructComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "endInstruct"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = endInstructClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a    \u000a    # *endText* updates\u000a    if t >= 0.0 and endText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        endText.tStart = t  # underestimates by a little under one frame\u000a        endText.frameNStart = frameN  # exact frame index\u000a        endText.setAutoDraw(True)\u000a    \u000a    # *key_resp_6* updates\u000a    if t >= 0.0 and key_resp_6.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_6.tStart = t  # underestimates by a little under one frame\u000a        key_resp_6.frameNStart = frameN  # exact frame index\u000a        key_resp_6.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_6.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_6.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space', 'return'])\u000a        \u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_6.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_6.rt = key_resp_6.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a    \u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in endInstructComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "endInstruct"-------\u000afor thisComponent in endInstructComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a\u000a\u000a# Initialize components for Routine "analysisCheck"\u000aanalysisCheckClock = core.Clock()\u000aanalysisText = visual.TextStim(win=win, ori=0, name='analysisText',\u000a    text=str('00'+'\u005ct'+str(countDict['_00_'])+'\u005ct'+str(hitsDict['_00_'])+'\u005cn'+\u000a    '01'+'\u005ct'+str(countDict['_01_'])+'\u005ct'+str(hitsDict['_01_'])+'\u005cn'+\u000a    '02'+'\u005ct'+str(countDict['_02_'])+'\u005ct'+str(hitsDict['_02_'])+'\u005cn'+\u000a    '03'+'\u005ct'+str(countDict['_03_'])+'\u005ct'+str(hitsDict['_03_'])+'\u005cn'+\u000a    '04'+'\u005ct'+str(countDict['_04_'])+'\u005ct'+str(hitsDict['_04_'])+'\u005cn'+\u000a    '05'+'\u005ct'+str(countDict['_05_'])+'\u005ct'+str(hitsDict['_05_'])+'\u005cn'+\u000a    '06'+'\u005ct'+str(countDict['_06_'])+'\u005ct'+str(hitsDict['_06_'])+'\u005cn'+\u000a    '07'+'\u005ct'+str(countDict['_07_'])+'\u005ct'+str(hitsDict['_07_'])+'\u005cn'+\u000a    '08'+'\u005ct'+str(countDict['_08_'])+'\u005ct'+str(hitsDict['_08_'])+'\u005cn'+\u000a    '09'+'\u005ct'+str(countDict['_09_'])+'\u005ct'+str(hitsDict['_09_'])+'\u005cn'+\u000a    '10'+'\u005ct'+str(countDict['_10_'])+'\u005ct'+str(hitsDict['_10_'])), font='Arial',\u000a    pos=[0, 0], height=1, wrapWidth=None,\u000a    color='white', colorSpace='rgb', opacity=1,\u000a    depth=0.0)\u000a\u000a#------Prepare to start Routine "analysisCheck"-------\u000at = 0\u000aanalysisCheckClock.reset()  # clock\u000aframeN = -1\u000a# update component parameters for each repeat\u000akey_resp_7 = event.BuilderKeyResponse()  # create an object of type KeyResponse\u000akey_resp_7.status = NOT_STARTED\u000a# keep track of which components have finished\u000aanalysisCheckComponents = []\u000aanalysisCheckComponents.append(analysisText)\u000aanalysisCheckComponents.append(key_resp_7)\u000afor thisComponent in analysisCheckComponents:\u000a    if hasattr(thisComponent, 'status'):\u000a        thisComponent.status = NOT_STARTED\u000a\u000a#-------Start Routine "analysisCheck"-------\u000acontinueRoutine = True\u000awhile continueRoutine:\u000a    # get current time\u000a    t = analysisCheckClock.getTime()\u000a    frameN = frameN + 1  # number of completed frames (so 0 is the first frame)\u000a    # update/draw components on each frame\u000a\u000a    # *analysisText* updates\u000a    if t >= 0.0 and analysisText.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        analysisText.tStart = t  # underestimates by a little under one frame\u000a        analysisText.frameNStart = frameN  # exact frame index\u000a        analysisText.setAutoDraw(True)\u000a\u000a    # *key_resp_7* updates\u000a    if t >= 0.0 and key_resp_7.status == NOT_STARTED:\u000a        # keep track of start time/frame for later\u000a        key_resp_7.tStart = t  # underestimates by a little under one frame\u000a        key_resp_7.frameNStart = frameN  # exact frame index\u000a        key_resp_7.status = STARTED\u000a        # keyboard checking is just starting\u000a        key_resp_7.clock.reset()  # now t=0\u000a        event.clearEvents(eventType='keyboard')\u000a    if key_resp_7.status == STARTED:\u000a        theseKeys = event.getKeys(keyList=['space','return'])\u000a\u000a        # check for quit:\u000a        if "escape" in theseKeys:\u000a            endExpNow = True\u000a        if len(theseKeys) > 0:  # at least one key was pressed\u000a            key_resp_7.keys = theseKeys[-1]  # just the last key pressed\u000a            key_resp_7.rt = key_resp_7.clock.getTime()\u000a            # a response ends the routine\u000a            continueRoutine = False\u000a\u000a    # check if all components have finished\u000a    if not continueRoutine:  # a component has requested a forced-end of Routine\u000a        break\u000a    continueRoutine = False  # will revert to True if at least one component still running\u000a    for thisComponent in analysisCheckComponents:\u000a        if hasattr(thisComponent, "status") and thisComponent.status != FINISHED:\u000a            continueRoutine = True\u000a            break  # at least one component has not yet finished\u000a    \u000a    # check for quit (the Esc key)\u000a    if endExpNow or event.getKeys(keyList=["escape"]):\u000a        core.quit()\u000a    \u000a    # refresh the screen\u000a    if continueRoutine:  # don't flip if this routine is over or we'll get a blank screen\u000a        win.flip()\u000a\u000a#-------Ending Routine "analysisCheck"-------\u000afor thisComponent in analysisCheckComponents:\u000a    if hasattr(thisComponent, "setAutoDraw"):\u000a        thisComponent.setAutoDraw(False)\u000a# check responses\u000aif key_resp_7.keys in ['', [], None]:  # No response was made\u000a   key_resp_7.keys=None\u000a# store data for thisExp (ExperimentHandler)\u000athisExp.addData('key_resp_7.keys',key_resp_7.keys)\u000aif key_resp_7.keys != None:  # we had a response\u000a    thisExp.addData('key_resp_7.rt', key_resp_7.rt)\u000athisExp.nextEntry()\u000a# the Routine "analysisCheck" was not non-slip safe, so reset the non-slip timer\u000aroutineTimer.reset()\u000awin.close()\u000acore.quit()
p5696
sg4999
(lp5697
sg5001
I139855536018896
sg10
S'trials2'
p5698
sg6
g5003
sg5004
I1
sg38
I01
sg39
g40
sg5005
g1
(g5006
g5007
(dp5699
g30
g5020
(g5021
g5010
g5022
S'b'
tRp5700
(I1
(I220
I1
tg5024
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg5019
g5020
(g5021
g5010
g5022
S'b'
tRp5701
(I1
(I220
I1
tg5024
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg28
g5009
(g5010
(I0
tS'b'
tRp5702
(I1
(I220
I1
tg5012
I00
(lp5703
g2795
ag2806
ag2816
ag2826
ag2836
ag2846
ag2856
ag2866
ag2876
ag2886
ag2896
ag2906
ag2916
ag2926
ag2936
ag2946
ag2956
ag2966
ag2976
ag2986
ag2996
ag3006
ag3016
ag3026
ag3036
ag3046
ag3056
ag3066
ag3076
ag3086
ag3096
ag3106
ag3116
ag3126
ag3136
ag3146
ag3156
ag3166
ag3176
ag3186
ag3196
ag3206
ag3216
ag3226
ag3236
ag3246
ag3256
ag3266
ag3276
ag3286
ag3296
ag3306
ag3316
ag3326
ag3336
ag3346
ag3356
ag3366
ag3376
ag3386
ag3396
ag3406
ag3416
ag3426
ag3436
ag3446
ag3456
ag3466
ag3476
ag3486
ag3496
ag3506
ag3516
ag3526
ag3536
ag3546
ag3556
ag3566
ag3576
ag3586
ag3596
ag3606
ag3616
ag3626
ag3636
ag3646
ag3656
ag3666
ag3676
ag3686
ag3696
ag3706
ag3716
ag3726
ag3736
ag3746
ag3756
ag3766
ag3776
ag3786
ag3796
ag3806
ag3816
ag3826
ag3836
ag3846
ag3856
ag3866
ag3876
ag3886
ag3896
ag3906
ag3916
ag3926
ag3936
ag3946
ag3956
ag3966
ag3976
ag3986
ag3996
ag4006
ag4016
ag4026
ag4036
ag4046
ag4056
ag4066
ag4076
ag4086
ag4096
ag4106
ag4116
ag4126
ag4136
ag4146
ag4156
ag4166
ag4176
ag4186
ag4196
ag4206
ag4216
ag4226
ag4236
ag4246
ag4256
ag4266
ag4276
ag4286
ag4296
ag4306
ag4316
ag4326
ag4336
ag4346
ag4356
ag4366
ag4376
ag4386
ag4396
ag4406
ag4416
ag4426
ag4436
ag4446
ag4456
ag4466
ag4476
ag4486
ag4496
ag4506
ag4516
ag4526
ag4536
ag4546
ag4556
ag4566
ag4576
ag4586
ag4596
ag4606
ag4616
ag4626
ag4636
ag4646
ag4656
ag4666
ag4676
ag4686
ag4696
ag4706
ag4716
ag4726
ag4736
ag4746
ag4756
ag4766
ag4776
ag4786
ag4796
ag4806
ag4816
ag4826
ag4836
ag4846
ag4856
ag4866
ag4876
ag4886
ag4896
ag4906
ag4916
ag4926
ag4936
ag4946
ag4956
ag4966
ag4976
ag4986
atbsg29
g5009
(g5010
(I0
tS'b'
tRp5704
(I1
(I220
I1
tg5012
I00
(lp5705
g2796
ag2807
ag2817
ag2827
ag2837
ag2847
ag2857
ag2867
ag2877
ag2887
ag2897
ag2907
ag2917
ag2927
ag2937
ag2947
ag2957
ag2967
ag2977
ag2987
ag2997
ag3007
ag3017
ag3027
ag3037
ag3047
ag3057
ag3067
ag3077
ag3087
ag3097
ag3107
ag3117
ag3127
ag3137
ag3147
ag3157
ag3167
ag3177
ag3187
ag3197
ag3207
ag3217
ag3227
ag3237
ag3247
ag3257
ag3267
ag3277
ag3287
ag3297
ag3307
ag3317
ag3327
ag3337
ag3347
ag3357
ag3367
ag3377
ag3387
ag3397
ag3407
ag3417
ag3427
ag3437
ag3447
ag3457
ag3467
ag3477
ag3487
ag3497
ag3507
ag3517
ag3527
ag3537
ag3547
ag3557
ag3567
ag3577
ag3587
ag3597
ag3607
ag3617
ag3627
ag3637
ag3647
ag3657
ag3667
ag3677
ag3687
ag3697
ag3707
ag3717
ag3727
ag3737
ag3747
ag3757
ag3767
ag3777
ag3787
ag3797
ag3807
ag3817
ag3827
ag3837
ag3847
ag3857
ag3867
ag3877
ag3887
ag3897
ag3907
ag3917
ag3927
ag3937
ag3947
ag3957
ag3967
ag3977
ag3987
ag3997
ag4007
ag4017
ag4027
ag4037
ag4047
ag4057
ag4067
ag4077
ag4087
ag4097
ag4107
ag4117
ag4127
ag4137
ag4147
ag4157
ag4167
ag4177
ag4187
ag4197
ag4207
ag4217
ag4227
ag4237
ag4247
ag4257
ag4267
ag4277
ag4287
ag4297
ag4307
ag4317
ag4327
ag4337
ag4347
ag4357
ag4367
ag4377
ag4387
ag4397
ag4407
ag4417
ag4427
ag4437
ag4447
ag4457
ag4467
ag4477
ag4487
ag4497
ag4507
ag4517
ag4527
ag4537
ag4547
ag4557
ag4567
ag4577
ag4587
ag4597
ag4607
ag4617
ag4627
ag4637
ag4647
ag4657
ag4667
ag4677
ag4687
ag4697
ag4707
ag4717
ag4727
ag4737
ag4747
ag4757
ag4767
ag4777
ag4787
ag4797
ag4807
ag4817
ag4827
ag4837
ag4847
ag4857
ag4867
ag4877
ag4887
ag4897
ag4907
ag4917
ag4927
ag4937
ag4947
ag4957
ag4967
ag4977
ag4987
atbsg31
g5020
(g5021
g5010
g5022
S'b'
tRp5706
(I1
(I220
I1
tg5024
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg32
g5020
(g5021
g5010
g5022
S'b'
tRp5707
(I1
(I220
I1
tg5024
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg33
g5020
(g5021
g5010
g5022
S'b'
tRp5708
(I1
(I220
I1
tg5024
I00
S'{\xa2\\@<\x9a\xde? ,\'?H\x88:@^h\x9c?\x10\xf8;?<\x96/?\x14\xb1@?XL8?\x14s@?\xa8\xbb^?b\x95\x95@\x87\x12\x07@\xd5\xcex@L\xceQ?6,\x89@,\x18E?(5/?\xa4\x81\x8d?\xc4\rc?hq\xba?\xaa\x13\x98?t\xa5Z?Z\x0f\xff?lA\xc5?\x80\xa1\x91?\xf4\x03\x89?\x96\x03_@\xd4j<?\xe6^\xf6?\xec3g?\xf4/5@\xdc\xbf\xa0?\xfcVg?\xf0\xde\x93?0\xd2\x93?\xf0ZM?\xfc5\x11?h\xdbQ?h\x1a8?`b|?T\xd1@?\xb535@\x9e\xed\x13@\x80\xb1b?8`@?\xf4\xfd\xa4?VH\n@\x18\t\xa5?\n\x16\xa5?\x90u\x04?\xfd04@\xa0\x10Q?X\xf33?b\xc3\xd1?@\x1a`@\xb8\x83<?$RZ?x\xc7^?\xc0\x0fc?|\xc2^?b\x16\x07@\x80FE?(ZU?2\t\x87?\x00p<?\x1c\xf3Q?<\x18\x11?^\x14\x89?*\xfe\x95?\xb4w^?\x10\xfd7?\x9cm\x82?\xeckI?h\x1b\x89?\x1a\xdc\xa2?>\xe3\x86?\x84\xa47?l\x198?\xc8V+?0\xcdH?\x08\xfaH?\xb4v/?\x18\x028?\xb8$c?\x04\xf5j?\x00zV?h\x94*?\x8c\xdb3?4\xff7?\xb8u\xdd@>t\xaf?\xcc\xeb\x04@\xd0\x8dD?.w\x80?\x16\x8c\x80?H\xd0o?\x0c\xca\xa0?\xeec\x8d?D\xff\xe2?x\r\x96?\x84#8?t\n\x1a?l\xc2M?t\xca3?\x88\xda"?\xf04\r?\xc4\x13\x1e?<\xfdw?\xbd\xb7\x89@\xa4\x83\x15?\x14.8?\xa4\xe0Q?t /?|vM?\xc8\x90<?\xe8+t?\\\xe2\x84?\x94^|?\\\xadk?\x84\xd23?6\xe6\xcd?\x1c3\x08?\x9dd\x0c@\xcc\x8e<?/\xa4\x02@\xc0G\x8b?h\x7f<?8\t\x11?\xf8D\x1a?X\x8d\x11?\xf0)\r?\x9cT\x04?<b\x04?Xd/?V\x9f\x00@\xae\xa0\x8f?lnD?\x1c\xdf7?\xe8\xc5@?D\xe2&?\xf0\x89Q?\x9cjI?\x00\xd4\x15?(\x99\x9e?\xcc\x01Z?\xf6\xb5\x82?\xac\x95U?\xa0\xea|?\x88Fg?\x90&"?\xcc\xd7\x15?p\x05\xd4?$\x83<?\xa4\xad\xde?\xb0\x0b+?\xb0\x19\x96?LiQ?\xc4_3?\xd6\xda\xb3?\xbc\xe8\xb3?\xc0_@?HgI?0i<?\xbb\xf1z@\x1c\xa2"?\x98\x1eE?\xdc\x0b8?\x98Q\x9a?$H\x15?<NI?X18?^\x14\xe1?O\xb2\x1e@\xfa\x80\xf6?\xe6\x04_@L\x90\x11?\xe048?\xa8|/?\xa4\xe4Q?L\xa0\x82?\x00\xcd@?\xc4D\xc9?\x14s@?\xce\x1d\xff?\xe4Q\x9e?P\x1fI?\x96\xae\xde?\xb0\x9a/?\xd0<8?\xa81V?\xcc\xcc\x84?\x88\xf6\x95?\xfcl<?\x04\x8fk?\x04\xc8\x86?\x98\x05+?\xa8\xdf\x03@H\xe9\x88?\xd8B\x1a@\xa4\xe4Q?\xb4}x?\xc4b\xb8?\xa8dM?\xb4\x0bE?\xb8%\x1e?\x84>@?\x1c\xa5/?D\x1cc?\xbc\x0e8?\x9c3V?F\xb2\xb1?\x9a\xb5\x84?dyg?\x86\x08\xb6?8i^?l&\xa7?\x00Kk?\x90\xcd^?\x0c\x9a\x84?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg5035
g5020
(g5021
g5010
g5022
S'b'
tRp5709
(I1
(I220
I1
tg5024
I00
S'\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00@\x00\x00@@\x00\x00\x80@\x00\x00\xa0@\x00\x00\xc0@\x00\x00\xe0@\x00\x00\x00A\x00\x00\x10A\x00\x00 A\x00\x000A\x00\x00@A\x00\x00PA\x00\x00`A\x00\x00pA\x00\x00\x80A\x00\x00\x88A\x00\x00\x90A\x00\x00\x98A\x00\x00\xa0A\x00\x00\xa8A\x00\x00\xb0A\x00\x00\xb8A\x00\x00\xc0A\x00\x00\xc8A\x00\x00\xd0A\x00\x00\xd8A\x00\x00\xe0A\x00\x00\xe8A\x00\x00\xf0A\x00\x00\xf8A\x00\x00\x00B\x00\x00\x04B\x00\x00\x08B\x00\x00\x0cB\x00\x00\x10B\x00\x00\x14B\x00\x00\x18B\x00\x00\x1cB\x00\x00 B\x00\x00$B\x00\x00(B\x00\x00,B\x00\x000B\x00\x004B\x00\x008B\x00\x00<B\x00\x00@B\x00\x00DB\x00\x00HB\x00\x00LB\x00\x00PB\x00\x00TB\x00\x00XB\x00\x00\\B\x00\x00`B\x00\x00dB\x00\x00hB\x00\x00lB\x00\x00pB\x00\x00tB\x00\x00xB\x00\x00|B\x00\x00\x80B\x00\x00\x82B\x00\x00\x84B\x00\x00\x86B\x00\x00\x88B\x00\x00\x8aB\x00\x00\x8cB\x00\x00\x8eB\x00\x00\x90B\x00\x00\x92B\x00\x00\x94B\x00\x00\x96B\x00\x00\x98B\x00\x00\x9aB\x00\x00\x9cB\x00\x00\x9eB\x00\x00\xa0B\x00\x00\xa2B\x00\x00\xa4B\x00\x00\xa6B\x00\x00\xa8B\x00\x00\xaaB\x00\x00\xacB\x00\x00\xaeB\x00\x00\xb0B\x00\x00\xb2B\x00\x00\xb4B\x00\x00\xb6B\x00\x00\xb8B\x00\x00\xbaB\x00\x00\xbcB\x00\x00\xbeB\x00\x00\xc0B\x00\x00\xc2B\x00\x00\xc4B\x00\x00\xc6B\x00\x00\xc8B\x00\x00\xcaB\x00\x00\xccB\x00\x00\xceB\x00\x00\xd0B\x00\x00\xd2B\x00\x00\xd4B\x00\x00\xd6B\x00\x00\xd8B\x00\x00\xdaB\x00\x00\xdcB\x00\x00\xdeB\x00\x00\xe0B\x00\x00\xe2B\x00\x00\xe4B\x00\x00\xe6B\x00\x00\xe8B\x00\x00\xeaB\x00\x00\xecB\x00\x00\xeeB\x00\x00\xf0B\x00\x00\xf2B\x00\x00\xf4B\x00\x00\xf6B\x00\x00\xf8B\x00\x00\xfaB\x00\x00\xfcB\x00\x00\xfeB\x00\x00\x00C\x00\x00\x01C\x00\x00\x02C\x00\x00\x03C\x00\x00\x04C\x00\x00\x05C\x00\x00\x06C\x00\x00\x07C\x00\x00\x08C\x00\x00\tC\x00\x00\nC\x00\x00\x0bC\x00\x00\x0cC\x00\x00\rC\x00\x00\x0eC\x00\x00\x0fC\x00\x00\x10C\x00\x00\x11C\x00\x00\x12C\x00\x00\x13C\x00\x00\x14C\x00\x00\x15C\x00\x00\x16C\x00\x00\x17C\x00\x00\x18C\x00\x00\x19C\x00\x00\x1aC\x00\x00\x1bC\x00\x00\x1cC\x00\x00\x1dC\x00\x00\x1eC\x00\x00\x1fC\x00\x00 C\x00\x00!C\x00\x00"C\x00\x00#C\x00\x00$C\x00\x00%C\x00\x00&C\x00\x00\'C\x00\x00(C\x00\x00)C\x00\x00*C\x00\x00+C\x00\x00,C\x00\x00-C\x00\x00.C\x00\x00/C\x00\x000C\x00\x001C\x00\x002C\x00\x003C\x00\x004C\x00\x005C\x00\x006C\x00\x007C\x00\x008C\x00\x009C\x00\x00:C\x00\x00;C\x00\x00<C\x00\x00=C\x00\x00>C\x00\x00?C\x00\x00@C\x00\x00AC\x00\x00BC\x00\x00CC\x00\x00DC\x00\x00EC\x00\x00FC\x00\x00GC\x00\x00HC\x00\x00IC\x00\x00JC\x00\x00KC\x00\x00LC\x00\x00MC\x00\x00NC\x00\x00OC\x00\x00PC\x00\x00QC\x00\x00RC\x00\x00SC\x00\x00TC\x00\x00UC\x00\x00VC\x00\x00WC\x00\x00XC\x00\x00YC\x00\x00ZC\x00\x00[C'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
NtbstRp5710
(dp5711
g5039
(dp5712
g31
I01
sg5019
I01
sg28
I00
sg29
I00
sg30
I01
sg32
I01
sg33
I01
sg5035
I01
ssg5041
g5694
sg5042
(lp5713
g5019
ag5035
ag28
ag29
ag30
ag31
ag32
ag33
asg5044
(lp5714
I220
aI1
asbsg5046
g5251
sg5048
g5009
(g5010
(I0
tS'b'
tRp5715
(I1
(I220
I1
tg588
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x07\x00\x00\x00\x00\x00\x00\x00\x08\x00\x00\x00\x00\x00\x00\x00\t\x00\x00\x00\x00\x00\x00\x00\n\x00\x00\x00\x00\x00\x00\x00\x0b\x00\x00\x00\x00\x00\x00\x00\x0c\x00\x00\x00\x00\x00\x00\x00\r\x00\x00\x00\x00\x00\x00\x00\x0e\x00\x00\x00\x00\x00\x00\x00\x0f\x00\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x11\x00\x00\x00\x00\x00\x00\x00\x12\x00\x00\x00\x00\x00\x00\x00\x13\x00\x00\x00\x00\x00\x00\x00\x14\x00\x00\x00\x00\x00\x00\x00\x15\x00\x00\x00\x00\x00\x00\x00\x16\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x00\x00\x00\x00\x00\x18\x00\x00\x00\x00\x00\x00\x00\x19\x00\x00\x00\x00\x00\x00\x00\x1a\x00\x00\x00\x00\x00\x00\x00\x1b\x00\x00\x00\x00\x00\x00\x00\x1c\x00\x00\x00\x00\x00\x00\x00\x1d\x00\x00\x00\x00\x00\x00\x00\x1e\x00\x00\x00\x00\x00\x00\x00\x1f\x00\x00\x00\x00\x00\x00\x00 \x00\x00\x00\x00\x00\x00\x00!\x00\x00\x00\x00\x00\x00\x00"\x00\x00\x00\x00\x00\x00\x00#\x00\x00\x00\x00\x00\x00\x00$\x00\x00\x00\x00\x00\x00\x00%\x00\x00\x00\x00\x00\x00\x00&\x00\x00\x00\x00\x00\x00\x00\'\x00\x00\x00\x00\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00)\x00\x00\x00\x00\x00\x00\x00*\x00\x00\x00\x00\x00\x00\x00+\x00\x00\x00\x00\x00\x00\x00,\x00\x00\x00\x00\x00\x00\x00-\x00\x00\x00\x00\x00\x00\x00.\x00\x00\x00\x00\x00\x00\x00/\x00\x00\x00\x00\x00\x00\x000\x00\x00\x00\x00\x00\x00\x001\x00\x00\x00\x00\x00\x00\x002\x00\x00\x00\x00\x00\x00\x003\x00\x00\x00\x00\x00\x00\x004\x00\x00\x00\x00\x00\x00\x005\x00\x00\x00\x00\x00\x00\x006\x00\x00\x00\x00\x00\x00\x007\x00\x00\x00\x00\x00\x00\x008\x00\x00\x00\x00\x00\x00\x009\x00\x00\x00\x00\x00\x00\x00:\x00\x00\x00\x00\x00\x00\x00;\x00\x00\x00\x00\x00\x00\x00<\x00\x00\x00\x00\x00\x00\x00=\x00\x00\x00\x00\x00\x00\x00>\x00\x00\x00\x00\x00\x00\x00?\x00\x00\x00\x00\x00\x00\x00@\x00\x00\x00\x00\x00\x00\x00A\x00\x00\x00\x00\x00\x00\x00B\x00\x00\x00\x00\x00\x00\x00C\x00\x00\x00\x00\x00\x00\x00D\x00\x00\x00\x00\x00\x00\x00E\x00\x00\x00\x00\x00\x00\x00F\x00\x00\x00\x00\x00\x00\x00G\x00\x00\x00\x00\x00\x00\x00H\x00\x00\x00\x00\x00\x00\x00I\x00\x00\x00\x00\x00\x00\x00J\x00\x00\x00\x00\x00\x00\x00K\x00\x00\x00\x00\x00\x00\x00L\x00\x00\x00\x00\x00\x00\x00M\x00\x00\x00\x00\x00\x00\x00N\x00\x00\x00\x00\x00\x00\x00O\x00\x00\x00\x00\x00\x00\x00P\x00\x00\x00\x00\x00\x00\x00Q\x00\x00\x00\x00\x00\x00\x00R\x00\x00\x00\x00\x00\x00\x00S\x00\x00\x00\x00\x00\x00\x00T\x00\x00\x00\x00\x00\x00\x00U\x00\x00\x00\x00\x00\x00\x00V\x00\x00\x00\x00\x00\x00\x00W\x00\x00\x00\x00\x00\x00\x00X\x00\x00\x00\x00\x00\x00\x00Y\x00\x00\x00\x00\x00\x00\x00Z\x00\x00\x00\x00\x00\x00\x00[\x00\x00\x00\x00\x00\x00\x00\\\x00\x00\x00\x00\x00\x00\x00]\x00\x00\x00\x00\x00\x00\x00^\x00\x00\x00\x00\x00\x00\x00_\x00\x00\x00\x00\x00\x00\x00`\x00\x00\x00\x00\x00\x00\x00a\x00\x00\x00\x00\x00\x00\x00b\x00\x00\x00\x00\x00\x00\x00c\x00\x00\x00\x00\x00\x00\x00d\x00\x00\x00\x00\x00\x00\x00e\x00\x00\x00\x00\x00\x00\x00f\x00\x00\x00\x00\x00\x00\x00g\x00\x00\x00\x00\x00\x00\x00h\x00\x00\x00\x00\x00\x00\x00i\x00\x00\x00\x00\x00\x00\x00j\x00\x00\x00\x00\x00\x00\x00k\x00\x00\x00\x00\x00\x00\x00l\x00\x00\x00\x00\x00\x00\x00m\x00\x00\x00\x00\x00\x00\x00n\x00\x00\x00\x00\x00\x00\x00o\x00\x00\x00\x00\x00\x00\x00p\x00\x00\x00\x00\x00\x00\x00q\x00\x00\x00\x00\x00\x00\x00r\x00\x00\x00\x00\x00\x00\x00s\x00\x00\x00\x00\x00\x00\x00t\x00\x00\x00\x00\x00\x00\x00u\x00\x00\x00\x00\x00\x00\x00v\x00\x00\x00\x00\x00\x00\x00w\x00\x00\x00\x00\x00\x00\x00x\x00\x00\x00\x00\x00\x00\x00y\x00\x00\x00\x00\x00\x00\x00z\x00\x00\x00\x00\x00\x00\x00{\x00\x00\x00\x00\x00\x00\x00|\x00\x00\x00\x00\x00\x00\x00}\x00\x00\x00\x00\x00\x00\x00~\x00\x00\x00\x00\x00\x00\x00\x7f\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x81\x00\x00\x00\x00\x00\x00\x00\x82\x00\x00\x00\x00\x00\x00\x00\x83\x00\x00\x00\x00\x00\x00\x00\x84\x00\x00\x00\x00\x00\x00\x00\x85\x00\x00\x00\x00\x00\x00\x00\x86\x00\x00\x00\x00\x00\x00\x00\x87\x00\x00\x00\x00\x00\x00\x00\x88\x00\x00\x00\x00\x00\x00\x00\x89\x00\x00\x00\x00\x00\x00\x00\x8a\x00\x00\x00\x00\x00\x00\x00\x8b\x00\x00\x00\x00\x00\x00\x00\x8c\x00\x00\x00\x00\x00\x00\x00\x8d\x00\x00\x00\x00\x00\x00\x00\x8e\x00\x00\x00\x00\x00\x00\x00\x8f\x00\x00\x00\x00\x00\x00\x00\x90\x00\x00\x00\x00\x00\x00\x00\x91\x00\x00\x00\x00\x00\x00\x00\x92\x00\x00\x00\x00\x00\x00\x00\x93\x00\x00\x00\x00\x00\x00\x00\x94\x00\x00\x00\x00\x00\x00\x00\x95\x00\x00\x00\x00\x00\x00\x00\x96\x00\x00\x00\x00\x00\x00\x00\x97\x00\x00\x00\x00\x00\x00\x00\x98\x00\x00\x00\x00\x00\x00\x00\x99\x00\x00\x00\x00\x00\x00\x00\x9a\x00\x00\x00\x00\x00\x00\x00\x9b\x00\x00\x00\x00\x00\x00\x00\x9c\x00\x00\x00\x00\x00\x00\x00\x9d\x00\x00\x00\x00\x00\x00\x00\x9e\x00\x00\x00\x00\x00\x00\x00\x9f\x00\x00\x00\x00\x00\x00\x00\xa0\x00\x00\x00\x00\x00\x00\x00\xa1\x00\x00\x00\x00\x00\x00\x00\xa2\x00\x00\x00\x00\x00\x00\x00\xa3\x00\x00\x00\x00\x00\x00\x00\xa4\x00\x00\x00\x00\x00\x00\x00\xa5\x00\x00\x00\x00\x00\x00\x00\xa6\x00\x00\x00\x00\x00\x00\x00\xa7\x00\x00\x00\x00\x00\x00\x00\xa8\x00\x00\x00\x00\x00\x00\x00\xa9\x00\x00\x00\x00\x00\x00\x00\xaa\x00\x00\x00\x00\x00\x00\x00\xab\x00\x00\x00\x00\x00\x00\x00\xac\x00\x00\x00\x00\x00\x00\x00\xad\x00\x00\x00\x00\x00\x00\x00\xae\x00\x00\x00\x00\x00\x00\x00\xaf\x00\x00\x00\x00\x00\x00\x00\xb0\x00\x00\x00\x00\x00\x00\x00\xb1\x00\x00\x00\x00\x00\x00\x00\xb2\x00\x00\x00\x00\x00\x00\x00\xb3\x00\x00\x00\x00\x00\x00\x00\xb4\x00\x00\x00\x00\x00\x00\x00\xb5\x00\x00\x00\x00\x00\x00\x00\xb6\x00\x00\x00\x00\x00\x00\x00\xb7\x00\x00\x00\x00\x00\x00\x00\xb8\x00\x00\x00\x00\x00\x00\x00\xb9\x00\x00\x00\x00\x00\x00\x00\xba\x00\x00\x00\x00\x00\x00\x00\xbb\x00\x00\x00\x00\x00\x00\x00\xbc\x00\x00\x00\x00\x00\x00\x00\xbd\x00\x00\x00\x00\x00\x00\x00\xbe\x00\x00\x00\x00\x00\x00\x00\xbf\x00\x00\x00\x00\x00\x00\x00\xc0\x00\x00\x00\x00\x00\x00\x00\xc1\x00\x00\x00\x00\x00\x00\x00\xc2\x00\x00\x00\x00\x00\x00\x00\xc3\x00\x00\x00\x00\x00\x00\x00\xc4\x00\x00\x00\x00\x00\x00\x00\xc5\x00\x00\x00\x00\x00\x00\x00\xc6\x00\x00\x00\x00\x00\x00\x00\xc7\x00\x00\x00\x00\x00\x00\x00\xc8\x00\x00\x00\x00\x00\x00\x00\xc9\x00\x00\x00\x00\x00\x00\x00\xca\x00\x00\x00\x00\x00\x00\x00\xcb\x00\x00\x00\x00\x00\x00\x00\xcc\x00\x00\x00\x00\x00\x00\x00\xcd\x00\x00\x00\x00\x00\x00\x00\xce\x00\x00\x00\x00\x00\x00\x00\xcf\x00\x00\x00\x00\x00\x00\x00\xd0\x00\x00\x00\x00\x00\x00\x00\xd1\x00\x00\x00\x00\x00\x00\x00\xd2\x00\x00\x00\x00\x00\x00\x00\xd3\x00\x00\x00\x00\x00\x00\x00\xd4\x00\x00\x00\x00\x00\x00\x00\xd5\x00\x00\x00\x00\x00\x00\x00\xd6\x00\x00\x00\x00\x00\x00\x00\xd7\x00\x00\x00\x00\x00\x00\x00\xd8\x00\x00\x00\x00\x00\x00\x00\xd9\x00\x00\x00\x00\x00\x00\x00\xda\x00\x00\x00\x00\x00\x00\x00\xdb\x00\x00\x00\x00\x00\x00\x00'
tbsg5051
I01
sg5052
I1
sg5053
I-1
sg5054
(lp5716
g1
(g5056
g5007
(dp5717
g2797
g2798
sg2793
g2794
stRp5718
ag1
(g5056
g5007
(dp5719
g2797
g2808
sg2793
g2805
stRp5720
ag1
(g5056
g5007
(dp5721
g2797
g2818
sg2793
g2815
stRp5722
ag1
(g5056
g5007
(dp5723
g2797
g2828
sg2793
g2825
stRp5724
ag1
(g5056
g5007
(dp5725
g2797
g2838
sg2793
g2835
stRp5726
ag1
(g5056
g5007
(dp5727
g2797
g2848
sg2793
g2845
stRp5728
ag1
(g5056
g5007
(dp5729
g2797
g2858
sg2793
g2855
stRp5730
ag1
(g5056
g5007
(dp5731
g2797
g2868
sg2793
g2865
stRp5732
ag1
(g5056
g5007
(dp5733
g2797
g2878
sg2793
g2875
stRp5734
ag1
(g5056
g5007
(dp5735
g2797
g2888
sg2793
g2885
stRp5736
ag1
(g5056
g5007
(dp5737
g2797
g2898
sg2793
g2895
stRp5738
ag1
(g5056
g5007
(dp5739
g2797
g2908
sg2793
g2905
stRp5740
ag1
(g5056
g5007
(dp5741
g2797
g2918
sg2793
g2915
stRp5742
ag1
(g5056
g5007
(dp5743
g2797
g2928
sg2793
g2925
stRp5744
ag1
(g5056
g5007
(dp5745
g2797
g2938
sg2793
g2935
stRp5746
ag1
(g5056
g5007
(dp5747
g2797
g2948
sg2793
g2945
stRp5748
ag1
(g5056
g5007
(dp5749
g2797
g2958
sg2793
g2955
stRp5750
ag1
(g5056
g5007
(dp5751
g2797
g2968
sg2793
g2965
stRp5752
ag1
(g5056
g5007
(dp5753
g2797
g2978
sg2793
g2975
stRp5754
ag1
(g5056
g5007
(dp5755
g2797
g2988
sg2793
g2985
stRp5756
ag1
(g5056
g5007
(dp5757
g2797
g2998
sg2793
g2995
stRp5758
ag1
(g5056
g5007
(dp5759
g2797
g3008
sg2793
g3005
stRp5760
ag1
(g5056
g5007
(dp5761
g2797
g3018
sg2793
g3015
stRp5762
ag1
(g5056
g5007
(dp5763
g2797
g3028
sg2793
g3025
stRp5764
ag1
(g5056
g5007
(dp5765
g2797
g3038
sg2793
g3035
stRp5766
ag1
(g5056
g5007
(dp5767
g2797
g3048
sg2793
g3045
stRp5768
ag1
(g5056
g5007
(dp5769
g2797
g3058
sg2793
g3055
stRp5770
ag1
(g5056
g5007
(dp5771
g2797
g3068
sg2793
g3065
stRp5772
ag1
(g5056
g5007
(dp5773
g2797
g3078
sg2793
g3075
stRp5774
ag1
(g5056
g5007
(dp5775
g2797
g3088
sg2793
g3085
stRp5776
ag1
(g5056
g5007
(dp5777
g2797
g3098
sg2793
g3095
stRp5778
ag1
(g5056
g5007
(dp5779
g2797
g3108
sg2793
g3105
stRp5780
ag1
(g5056
g5007
(dp5781
g2797
g3118
sg2793
g3115
stRp5782
ag1
(g5056
g5007
(dp5783
g2797
g3128
sg2793
g3125
stRp5784
ag1
(g5056
g5007
(dp5785
g2797
g3138
sg2793
g3135
stRp5786
ag1
(g5056
g5007
(dp5787
g2797
g3148
sg2793
g3145
stRp5788
ag1
(g5056
g5007
(dp5789
g2797
g3158
sg2793
g3155
stRp5790
ag1
(g5056
g5007
(dp5791
g2797
g3168
sg2793
g3165
stRp5792
ag1
(g5056
g5007
(dp5793
g2797
g3178
sg2793
g3175
stRp5794
ag1
(g5056
g5007
(dp5795
g2797
g3188
sg2793
g3185
stRp5796
ag1
(g5056
g5007
(dp5797
g2797
g3198
sg2793
g3195
stRp5798
ag1
(g5056
g5007
(dp5799
g2797
g3208
sg2793
g3205
stRp5800
ag1
(g5056
g5007
(dp5801
g2797
g3218
sg2793
g3215
stRp5802
ag1
(g5056
g5007
(dp5803
g2797
g3228
sg2793
g3225
stRp5804
ag1
(g5056
g5007
(dp5805
g2797
g3238
sg2793
g3235
stRp5806
ag1
(g5056
g5007
(dp5807
g2797
g3248
sg2793
g3245
stRp5808
ag1
(g5056
g5007
(dp5809
g2797
g3258
sg2793
g3255
stRp5810
ag1
(g5056
g5007
(dp5811
g2797
g3268
sg2793
g3265
stRp5812
ag1
(g5056
g5007
(dp5813
g2797
g3278
sg2793
g3275
stRp5814
ag1
(g5056
g5007
(dp5815
g2797
g3288
sg2793
g3285
stRp5816
ag1
(g5056
g5007
(dp5817
g2797
g3298
sg2793
g3295
stRp5818
ag1
(g5056
g5007
(dp5819
g2797
g3308
sg2793
g3305
stRp5820
ag1
(g5056
g5007
(dp5821
g2797
g3318
sg2793
g3315
stRp5822
ag1
(g5056
g5007
(dp5823
g2797
g3328
sg2793
g3325
stRp5824
ag1
(g5056
g5007
(dp5825
g2797
g3338
sg2793
g3335
stRp5826
ag1
(g5056
g5007
(dp5827
g2797
g3348
sg2793
g3345
stRp5828
ag1
(g5056
g5007
(dp5829
g2797
g3358
sg2793
g3355
stRp5830
ag1
(g5056
g5007
(dp5831
g2797
g3368
sg2793
g3365
stRp5832
ag1
(g5056
g5007
(dp5833
g2797
g3378
sg2793
g3375
stRp5834
ag1
(g5056
g5007
(dp5835
g2797
g3388
sg2793
g3385
stRp5836
ag1
(g5056
g5007
(dp5837
g2797
g3398
sg2793
g3395
stRp5838
ag1
(g5056
g5007
(dp5839
g2797
g3408
sg2793
g3405
stRp5840
ag1
(g5056
g5007
(dp5841
g2797
g3418
sg2793
g3415
stRp5842
ag1
(g5056
g5007
(dp5843
g2797
g3428
sg2793
g3425
stRp5844
ag1
(g5056
g5007
(dp5845
g2797
g3438
sg2793
g3435
stRp5846
ag1
(g5056
g5007
(dp5847
g2797
g3448
sg2793
g3445
stRp5848
ag1
(g5056
g5007
(dp5849
g2797
g3458
sg2793
g3455
stRp5850
ag1
(g5056
g5007
(dp5851
g2797
g3468
sg2793
g3465
stRp5852
ag1
(g5056
g5007
(dp5853
g2797
g3478
sg2793
g3475
stRp5854
ag1
(g5056
g5007
(dp5855
g2797
g3488
sg2793
g3485
stRp5856
ag1
(g5056
g5007
(dp5857
g2797
g3498
sg2793
g3495
stRp5858
ag1
(g5056
g5007
(dp5859
g2797
g3508
sg2793
g3505
stRp5860
ag1
(g5056
g5007
(dp5861
g2797
g3518
sg2793
g3515
stRp5862
ag1
(g5056
g5007
(dp5863
g2797
g3528
sg2793
g3525
stRp5864
ag1
(g5056
g5007
(dp5865
g2797
g3538
sg2793
g3535
stRp5866
ag1
(g5056
g5007
(dp5867
g2797
g3548
sg2793
g3545
stRp5868
ag1
(g5056
g5007
(dp5869
g2797
g3558
sg2793
g3555
stRp5870
ag1
(g5056
g5007
(dp5871
g2797
g3568
sg2793
g3565
stRp5872
ag1
(g5056
g5007
(dp5873
g2797
g3578
sg2793
g3575
stRp5874
ag1
(g5056
g5007
(dp5875
g2797
g3588
sg2793
g3585
stRp5876
ag1
(g5056
g5007
(dp5877
g2797
g3598
sg2793
g3595
stRp5878
ag1
(g5056
g5007
(dp5879
g2797
g3608
sg2793
g3605
stRp5880
ag1
(g5056
g5007
(dp5881
g2797
g3618
sg2793
g3615
stRp5882
ag1
(g5056
g5007
(dp5883
g2797
g3628
sg2793
g3625
stRp5884
ag1
(g5056
g5007
(dp5885
g2797
g3638
sg2793
g3635
stRp5886
ag1
(g5056
g5007
(dp5887
g2797
g3648
sg2793
g3645
stRp5888
ag1
(g5056
g5007
(dp5889
g2797
g3658
sg2793
g3655
stRp5890
ag1
(g5056
g5007
(dp5891
g2797
g3668
sg2793
g3665
stRp5892
ag1
(g5056
g5007
(dp5893
g2797
g3678
sg2793
g3675
stRp5894
ag1
(g5056
g5007
(dp5895
g2797
g3688
sg2793
g3685
stRp5896
ag1
(g5056
g5007
(dp5897
g2797
g3698
sg2793
g3695
stRp5898
ag1
(g5056
g5007
(dp5899
g2797
g3708
sg2793
g3705
stRp5900
ag1
(g5056
g5007
(dp5901
g2797
g3718
sg2793
g3715
stRp5902
ag1
(g5056
g5007
(dp5903
g2797
g3728
sg2793
g3725
stRp5904
ag1
(g5056
g5007
(dp5905
g2797
g3738
sg2793
g3735
stRp5906
ag1
(g5056
g5007
(dp5907
g2797
g3748
sg2793
g3745
stRp5908
ag1
(g5056
g5007
(dp5909
g2797
g3758
sg2793
g3755
stRp5910
ag1
(g5056
g5007
(dp5911
g2797
g3768
sg2793
g3765
stRp5912
ag1
(g5056
g5007
(dp5913
g2797
g3778
sg2793
g3775
stRp5914
ag1
(g5056
g5007
(dp5915
g2797
g3788
sg2793
g3785
stRp5916
ag1
(g5056
g5007
(dp5917
g2797
g3798
sg2793
g3795
stRp5918
ag1
(g5056
g5007
(dp5919
g2797
g3808
sg2793
g3805
stRp5920
ag1
(g5056
g5007
(dp5921
g2797
g3818
sg2793
g3815
stRp5922
ag1
(g5056
g5007
(dp5923
g2797
g3828
sg2793
g3825
stRp5924
ag1
(g5056
g5007
(dp5925
g2797
g3838
sg2793
g3835
stRp5926
ag1
(g5056
g5007
(dp5927
g2797
g3848
sg2793
g3845
stRp5928
ag1
(g5056
g5007
(dp5929
g2797
g3858
sg2793
g3855
stRp5930
ag1
(g5056
g5007
(dp5931
g2797
g3868
sg2793
g3865
stRp5932
ag1
(g5056
g5007
(dp5933
g2797
g3878
sg2793
g3875
stRp5934
ag1
(g5056
g5007
(dp5935
g2797
g3888
sg2793
g3885
stRp5936
ag1
(g5056
g5007
(dp5937
g2797
g3898
sg2793
g3895
stRp5938
ag1
(g5056
g5007
(dp5939
g2797
g3908
sg2793
g3905
stRp5940
ag1
(g5056
g5007
(dp5941
g2797
g3918
sg2793
g3915
stRp5942
ag1
(g5056
g5007
(dp5943
g2797
g3928
sg2793
g3925
stRp5944
ag1
(g5056
g5007
(dp5945
g2797
g3938
sg2793
g3935
stRp5946
ag1
(g5056
g5007
(dp5947
g2797
g3948
sg2793
g3945
stRp5948
ag1
(g5056
g5007
(dp5949
g2797
g3958
sg2793
g3955
stRp5950
ag1
(g5056
g5007
(dp5951
g2797
g3968
sg2793
g3965
stRp5952
ag1
(g5056
g5007
(dp5953
g2797
g3978
sg2793
g3975
stRp5954
ag1
(g5056
g5007
(dp5955
g2797
g3988
sg2793
g3985
stRp5956
ag1
(g5056
g5007
(dp5957
g2797
g3998
sg2793
g3995
stRp5958
ag1
(g5056
g5007
(dp5959
g2797
g4008
sg2793
g4005
stRp5960
ag1
(g5056
g5007
(dp5961
g2797
g4018
sg2793
g4015
stRp5962
ag1
(g5056
g5007
(dp5963
g2797
g4028
sg2793
g4025
stRp5964
ag1
(g5056
g5007
(dp5965
g2797
g4038
sg2793
g4035
stRp5966
ag1
(g5056
g5007
(dp5967
g2797
g4048
sg2793
g4045
stRp5968
ag1
(g5056
g5007
(dp5969
g2797
g4058
sg2793
g4055
stRp5970
ag1
(g5056
g5007
(dp5971
g2797
g4068
sg2793
g4065
stRp5972
ag1
(g5056
g5007
(dp5973
g2797
g4078
sg2793
g4075
stRp5974
ag1
(g5056
g5007
(dp5975
g2797
g4088
sg2793
g4085
stRp5976
ag1
(g5056
g5007
(dp5977
g2797
g4098
sg2793
g4095
stRp5978
ag1
(g5056
g5007
(dp5979
g2797
g4108
sg2793
g4105
stRp5980
ag1
(g5056
g5007
(dp5981
g2797
g4118
sg2793
g4115
stRp5982
ag1
(g5056
g5007
(dp5983
g2797
g4128
sg2793
g4125
stRp5984
ag1
(g5056
g5007
(dp5985
g2797
g4138
sg2793
g4135
stRp5986
ag1
(g5056
g5007
(dp5987
g2797
g4148
sg2793
g4145
stRp5988
ag1
(g5056
g5007
(dp5989
g2797
g4158
sg2793
g4155
stRp5990
ag1
(g5056
g5007
(dp5991
g2797
g4168
sg2793
g4165
stRp5992
ag1
(g5056
g5007
(dp5993
g2797
g4178
sg2793
g4175
stRp5994
ag1
(g5056
g5007
(dp5995
g2797
g4188
sg2793
g4185
stRp5996
ag1
(g5056
g5007
(dp5997
g2797
g4198
sg2793
g4195
stRp5998
ag1
(g5056
g5007
(dp5999
g2797
g4208
sg2793
g4205
stRp6000
ag1
(g5056
g5007
(dp6001
g2797
g4218
sg2793
g4215
stRp6002
ag1
(g5056
g5007
(dp6003
g2797
g4228
sg2793
g4225
stRp6004
ag1
(g5056
g5007
(dp6005
g2797
g4238
sg2793
g4235
stRp6006
ag1
(g5056
g5007
(dp6007
g2797
g4248
sg2793
g4245
stRp6008
ag1
(g5056
g5007
(dp6009
g2797
g4258
sg2793
g4255
stRp6010
ag1
(g5056
g5007
(dp6011
g2797
g4268
sg2793
g4265
stRp6012
ag1
(g5056
g5007
(dp6013
g2797
g4278
sg2793
g4275
stRp6014
ag1
(g5056
g5007
(dp6015
g2797
g4288
sg2793
g4285
stRp6016
ag1
(g5056
g5007
(dp6017
g2797
g4298
sg2793
g4295
stRp6018
ag1
(g5056
g5007
(dp6019
g2797
g4308
sg2793
g4305
stRp6020
ag1
(g5056
g5007
(dp6021
g2797
g4318
sg2793
g4315
stRp6022
ag1
(g5056
g5007
(dp6023
g2797
g4328
sg2793
g4325
stRp6024
ag1
(g5056
g5007
(dp6025
g2797
g4338
sg2793
g4335
stRp6026
ag1
(g5056
g5007
(dp6027
g2797
g4348
sg2793
g4345
stRp6028
ag1
(g5056
g5007
(dp6029
g2797
g4358
sg2793
g4355
stRp6030
ag1
(g5056
g5007
(dp6031
g2797
g4368
sg2793
g4365
stRp6032
ag1
(g5056
g5007
(dp6033
g2797
g4378
sg2793
g4375
stRp6034
ag1
(g5056
g5007
(dp6035
g2797
g4388
sg2793
g4385
stRp6036
ag1
(g5056
g5007
(dp6037
g2797
g4398
sg2793
g4395
stRp6038
ag1
(g5056
g5007
(dp6039
g2797
g4408
sg2793
g4405
stRp6040
ag1
(g5056
g5007
(dp6041
g2797
g4418
sg2793
g4415
stRp6042
ag1
(g5056
g5007
(dp6043
g2797
g4428
sg2793
g4425
stRp6044
ag1
(g5056
g5007
(dp6045
g2797
g4438
sg2793
g4435
stRp6046
ag1
(g5056
g5007
(dp6047
g2797
g4448
sg2793
g4445
stRp6048
ag1
(g5056
g5007
(dp6049
g2797
g4458
sg2793
g4455
stRp6050
ag1
(g5056
g5007
(dp6051
g2797
g4468
sg2793
g4465
stRp6052
ag1
(g5056
g5007
(dp6053
g2797
g4478
sg2793
g4475
stRp6054
ag1
(g5056
g5007
(dp6055
g2797
g4488
sg2793
g4485
stRp6056
ag1
(g5056
g5007
(dp6057
g2797
g4498
sg2793
g4495
stRp6058
ag1
(g5056
g5007
(dp6059
g2797
g4508
sg2793
g4505
stRp6060
ag1
(g5056
g5007
(dp6061
g2797
g4518
sg2793
g4515
stRp6062
ag1
(g5056
g5007
(dp6063
g2797
g4528
sg2793
g4525
stRp6064
ag1
(g5056
g5007
(dp6065
g2797
g4538
sg2793
g4535
stRp6066
ag1
(g5056
g5007
(dp6067
g2797
g4548
sg2793
g4545
stRp6068
ag1
(g5056
g5007
(dp6069
g2797
g4558
sg2793
g4555
stRp6070
ag1
(g5056
g5007
(dp6071
g2797
g4568
sg2793
g4565
stRp6072
ag1
(g5056
g5007
(dp6073
g2797
g4578
sg2793
g4575
stRp6074
ag1
(g5056
g5007
(dp6075
g2797
g4588
sg2793
g4585
stRp6076
ag1
(g5056
g5007
(dp6077
g2797
g4598
sg2793
g4595
stRp6078
ag1
(g5056
g5007
(dp6079
g2797
g4608
sg2793
g4605
stRp6080
ag1
(g5056
g5007
(dp6081
g2797
g4618
sg2793
g4615
stRp6082
ag1
(g5056
g5007
(dp6083
g2797
g4628
sg2793
g4625
stRp6084
ag1
(g5056
g5007
(dp6085
g2797
g4638
sg2793
g4635
stRp6086
ag1
(g5056
g5007
(dp6087
g2797
g4648
sg2793
g4645
stRp6088
ag1
(g5056
g5007
(dp6089
g2797
g4658
sg2793
g4655
stRp6090
ag1
(g5056
g5007
(dp6091
g2797
g4668
sg2793
g4665
stRp6092
ag1
(g5056
g5007
(dp6093
g2797
g4678
sg2793
g4675
stRp6094
ag1
(g5056
g5007
(dp6095
g2797
g4688
sg2793
g4685
stRp6096
ag1
(g5056
g5007
(dp6097
g2797
g4698
sg2793
g4695
stRp6098
ag1
(g5056
g5007
(dp6099
g2797
g4708
sg2793
g4705
stRp6100
ag1
(g5056
g5007
(dp6101
g2797
g4718
sg2793
g4715
stRp6102
ag1
(g5056
g5007
(dp6103
g2797
g4728
sg2793
g4725
stRp6104
ag1
(g5056
g5007
(dp6105
g2797
g4738
sg2793
g4735
stRp6106
ag1
(g5056
g5007
(dp6107
g2797
g4748
sg2793
g4745
stRp6108
ag1
(g5056
g5007
(dp6109
g2797
g4758
sg2793
g4755
stRp6110
ag1
(g5056
g5007
(dp6111
g2797
g4768
sg2793
g4765
stRp6112
ag1
(g5056
g5007
(dp6113
g2797
g4778
sg2793
g4775
stRp6114
ag1
(g5056
g5007
(dp6115
g2797
g4788
sg2793
g4785
stRp6116
ag1
(g5056
g5007
(dp6117
g2797
g4798
sg2793
g4795
stRp6118
ag1
(g5056
g5007
(dp6119
g2797
g4808
sg2793
g4805
stRp6120
ag1
(g5056
g5007
(dp6121
g2797
g4818
sg2793
g4815
stRp6122
ag1
(g5056
g5007
(dp6123
g2797
g4828
sg2793
g4825
stRp6124
ag1
(g5056
g5007
(dp6125
g2797
g4838
sg2793
g4835
stRp6126
ag1
(g5056
g5007
(dp6127
g2797
g4848
sg2793
g4845
stRp6128
ag1
(g5056
g5007
(dp6129
g2797
g4858
sg2793
g4855
stRp6130
ag1
(g5056
g5007
(dp6131
g2797
g4868
sg2793
g4865
stRp6132
ag1
(g5056
g5007
(dp6133
g2797
g4878
sg2793
g4875
stRp6134
ag1
(g5056
g5007
(dp6135
g2797
g4888
sg2793
g4885
stRp6136
ag1
(g5056
g5007
(dp6137
g2797
g4898
sg2793
g4895
stRp6138
ag1
(g5056
g5007
(dp6139
g2797
g4908
sg2793
g4905
stRp6140
ag1
(g5056
g5007
(dp6141
g2797
g4918
sg2793
g4915
stRp6142
ag1
(g5056
g5007
(dp6143
g2797
g4928
sg2793
g4925
stRp6144
ag1
(g5056
g5007
(dp6145
g2797
g4938
sg2793
g4935
stRp6146
ag1
(g5056
g5007
(dp6147
g2797
g4948
sg2793
g4945
stRp6148
ag1
(g5056
g5007
(dp6149
g2797
g4958
sg2793
g4955
stRp6150
ag1
(g5056
g5007
(dp6151
g2797
g4968
sg2793
g4965
stRp6152
ag1
(g5056
g5007
(dp6153
g2797
g4978
sg2793
g4975
stRp6154
ag1
(g5056
g5007
(dp6155
g2797
g4988
sg2793
g4985
stRp6156
asg5225
Nsg5226
g4982
sg5227
I220
sg5228
I0
sg5229
I220
sg5230
I01
sbasS'savePickle'
p6157
I00
sb.